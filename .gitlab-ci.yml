image: docker:latest
services:
  - docker

stages:
    - build
    - push
    - opensource

build metadata database:
  stage: build
  before_script:
    - echo "$ADMIN_INSERT" >> ./epos-datamodel-db/users.sql
    - sh ./initdb.sh
  script :
    - docker build -f Dockerfile.build -t "$CI_REGISTRY_IMAGE/deploy:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE/deploy:latest" --build-arg GIT_DEPLOY_USER="$GIT_DEPLOY_USER" --build-arg GIT_DEPLOY_PASS="$GIT_DEPLOY_PASS" --build-arg GIT_SERVER="$GIT_SERVER" .
  only:
    - tags
    - branches


build metadata database:
  stage: build
  before_script:
    - echo "$ADMIN_INSERT" >> ./epos-datamodel-db/users.sql
    - echo "$TESTER_INSERT" >> ./epos-datamodel-db/testers.sql
    - sh ./initdb.sh
  script :
    - docker build -f Dockerfile.build -t "$CI_REGISTRY_IMAGE/deploy:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE/deploy:latest" --build-arg GIT_DEPLOY_USER="$GIT_DEPLOY_USER" --build-arg GIT_DEPLOY_PASS="$GIT_DEPLOY_PASS" --build-arg GIT_SERVER="$GIT_SERVER" .
  only:
    - tags
    - branches


push metadata database:
  stage: push
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push "$CI_REGISTRY_IMAGE/deploy:$CI_COMMIT_REF_SLUG"
    - docker push "$CI_REGISTRY_IMAGE/deploy:latest"
  only:
    - tags
    - branches

build restore database:
  stage: build
  before_script:
    - echo "$ADMIN_INSERT" >> ./epos-datamodel-db/users.sql
  script :
    - docker build -f Dockerfile.clean -t "$CI_REGISTRY_IMAGE/restorejob:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE/restorejob:latest" --build-arg GIT_DEPLOY_USER="$GIT_DEPLOY_USER" --build-arg GIT_DEPLOY_PASS="$GIT_DEPLOY_PASS" --build-arg GIT_SERVER="$GIT_SERVER" .
  only:
    - tags
    - branches

push restore database:
  stage: push
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push "$CI_REGISTRY_IMAGE/restorejob:$CI_COMMIT_REF_SLUG"
    - docker push "$CI_REGISTRY_IMAGE/restorejob:latest"
  only:
    - tags
    - branches

build spilo:
  stage: build
  before_script:
    - echo "$ADMIN_INSERT" >> ./epos-datamodel-db/users.sql
  script :
    - docker build -f Dockerfile.spilo -t "$CI_REGISTRY_IMAGE/spilo:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE/spilo:latest" --build-arg GIT_DEPLOY_USER="$GIT_DEPLOY_USER" --build-arg GIT_DEPLOY_PASS="$GIT_DEPLOY_PASS" --build-arg GIT_SERVER="$GIT_SERVER" .
  only:
    - tags
    - branches

push spilo:
  stage: push
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push "$CI_REGISTRY_IMAGE/spilo:$CI_COMMIT_REF_SLUG"
    - docker push "$CI_REGISTRY_IMAGE/spilo:latest"
  only:
    - tags
    - branches
