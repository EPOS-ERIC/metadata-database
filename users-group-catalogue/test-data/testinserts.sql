--
-- PostgreSQL database dump
--

-- Dumped from database version 14.0 (Debian 14.0-1.pgdg110+1)
-- Dumped by pg_dump version 16.3

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Data for Name: job; Type: TABLE DATA; Schema: cron; Owner: postgres
--



--
-- Data for Name: job_run_details; Type: TABLE DATA; Schema: cron; Owner: postgres
--



--
-- Data for Name: versioningstatus; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('1ae576c4-223b-4211-bcca-471f91db196d', '700f90e3-90aa-42cf-8835-a6b77d79ace9', 'b94dbbb3-0ae5-4ae4-a9b7-c49744bcae76', 'file:///Documentation/Test/2', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:06.985058+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('56e714dd-44d8-4b8a-8dee-c596e97b4856', '528758f9-1bfd-4094-bdba-82fc5dd4ce76', '858d4605-2cfd-4727-87ae-55614bec9a9b', '_:ed016cb74bf114d0336aa6d3b09bfa42', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.030815+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('8c812bfb-7f61-4b89-8f59-45eaae05f525', 'b7435b87-879b-4176-934d-9d44b86ddf10', '9d25bd9b-cf65-4c02-b32a-18bace436cde', 'category:fac1', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.046036+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('ab951360-d7f9-47ca-b979-9fe32513c89f', '4c20a3b1-f629-4f28-abd8-380b5837e68f', '5f2b59df-3b77-48ad-8549-c03d931c660d', '_:b7f887ff7c27d1d4e89249a9853875ab', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.060789+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('665e290d-485b-4049-b0b1-6538ef79f0c7', '4829836b-ed6a-4563-a7e4-894b449c014c', '11332185-461a-4f6a-b0cf-615ec5c08a93', '_:5858aae32f69154aa7c25545455f0d1f', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.074647+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('ba3ffc4f-b32f-4775-9f46-309ebae3963b', 'fde70b5c-c48b-456a-a10b-4deccfa47ae3', '3c74e97d-d41d-4542-95e1-942926ef8927', '_:6d0830842b442013ff9a52f2d78fd246', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.086255+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('368f2290-1b89-4702-a83a-e9ccc3e23899', '4cf2ff79-6d3f-4d01-9eac-23f143dd3d58', '89f24b4e-fbcb-4cb0-ba26-13f1aeecbf0e', '_:9d78a37099e5fb741bbc5e2b801b1014', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.099035+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('0ba09d02-b2a2-40e0-816d-205f1a2c2172', '47895724-5ca2-4bdc-8bc8-534360a4f562', '170d4011-aed3-4e97-82ed-f1f83b1d745c', '_:1782934bd2127936f84f63307a39e1e4', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.112231+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('0550b676-ea71-412e-a8a6-9e54f6cd4b7e', '033cc87d-0787-4975-8e6e-9951c52e213f', '5e09265b-1740-4fe0-a506-21a1aefb18fe', '_:bb2f888b51aa2db3347e5bb8bfc47a0c', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.127056+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('538a8ea4-ffbd-45b8-a7ee-d4c2e5f29c7f', 'f95f19da-cd12-4974-baf6-7aacffc8cf54', 'fded39f1-9107-4d68-8006-b868c226ca25', '_:5db070e0889ba152ab0f8eb8c02b02b3', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.141099+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('0d2a4cdd-10ad-42da-852e-5bdb5fa950df', '69205386-1b98-4c0e-8b16-ebca111c2491', '90452112-3e36-419a-818d-8a2528da3abb', '_:ba363ee91ff86763fb2aa2b08ce23d4d', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.154476+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('8d200fb9-88e1-4390-9644-5a41e41bc3b4', '6dd02991-750d-44c0-a891-41943ad5e3dd', '94815399-302e-4b4e-b9d6-7a1091193544', '_:ec9b40b5dc81ecadffad5005cea45c54', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.163753+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('17cf5f69-be82-45b9-be48-aea7db7d6111', 'c147fb35-1ecb-4e36-bfc8-509ef64ac7be', '6707aa99-9c17-4164-b2c5-a6d5cfd75038', '_:35a117a8786200d071846c53b104a2de', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.173657+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('6398d534-2819-4d41-bffa-34c608b30068', 'c0233abb-5446-4105-81d5-e686efd02e59', '714b8c2e-f6a5-4245-af26-1d8be1bd61d5', '_:5bd73ae9f11842e93209ce443d580319', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.189587+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('70256117-36c8-4ebe-abf7-4bb9314b070e', '39f4f9a2-2f86-44cc-a765-9613051fd3ef', '9dafe2e0-4cda-42e5-acfc-4a73de058492', '_:cd5611721744018f33d02bea3b79c663', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.200243+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('aec1ceda-5559-471f-be23-8b936ec40b43', '30290d4a-23da-46d5-8346-f046725189f5', '196abb06-be64-4c5e-9c70-d7a8547d93f0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.208711+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('a62854be-5322-4aff-afca-c97e450be150', '6da4863f-1eae-42e1-988d-3f589f8e2364', 'a9a9f450-d3e9-47ed-9518-80e3e395a1f3', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.224028+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('ed56ff32-0cd1-4dcf-9e0c-0b7e23be17fc', '079d7444-778f-4501-8b36-0887652f5e64', '796fb4fa-a590-4c09-9145-625b8c3bd628', 'category:cat1', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.23667+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('08230f03-4353-4190-8ba9-1597e9598096', '14ec0153-f3cc-4330-9482-0b87ffc51817', '63df0336-830b-4ff8-a113-37314c994482', '_:89520aa2dacb14f5f75db0e93ec58d6b', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.245577+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('5b69bb55-99a3-46fc-98b6-c98b8264467f', '7bece22f-38ff-483d-8e50-dcff4ae8b277', '6741b98d-fe2b-4b7b-82ad-0a3ecd592da0', 'category:cat3', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.258476+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('daeb808d-f023-4d0c-b3e5-7f2315bbfc0c', '215bfdd3-06f7-4931-8a2c-533920663e61', '700cc72d-d1c6-427e-a2dc-1ba9b0bc4732', 'category:cat2', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.271561+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('5eefdc33-5c16-49e7-878f-652f5f4d4d0e', '230a9cde-a266-44b7-9663-287f96c1c4e7', 'e0614fce-484a-49fd-a519-b625d73a8c09', 'category:cat4', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.293706+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('033399dd-e33a-455c-a0b1-fea0d207d7dc', '06f0bb6e-5a21-4ea7-982a-f6092a7f69c0', '40427495-9c8f-4348-9f13-5ad546028396', 'file:///Facility/Test/1', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.313395+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('a824e262-4b79-40ee-9102-e219c6b41209', '71f96085-f65c-463e-b616-55b3b2660246', 'b3f48dd9-c879-441a-b86d-a6dda7c0e6b8', 'category:facchild1', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.325275+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('6b06760f-14fe-4d27-a6b2-e4d0aff650f0', '635a9982-5011-46c1-ab2e-7063ae9397d3', '82631430-a76f-4837-819c-60d32e4e72ec', 'http://orcid.org//0000-0001-5805-9337/scientificContact', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.34996+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('3972a2f5-bad0-4d78-922f-ef8e89373af6', '88ece5d3-3343-4a4c-ad94-f3a1fd68a1ee', '086630b2-d74c-4054-9d88-2f0ec4f4f515', '_:591da04ab95db0b17ab367e8e27491e9', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.369692+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('9735492f-7cc8-4ec8-b0dc-2801b947dc12', 'e50e54a3-5d45-45c1-8e06-12797047c22a', '61bbbbe6-57ea-47a0-9189-e90e7c8e205c', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.381463+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('2b2a020c-8121-486a-a7fb-94b15517d6c8', '7037d8a1-75ca-4bda-b837-8db673b12e25', 'e0d78a77-6ca5-4d7e-b7c2-fcf89c21b862', '_:6a5bf209aa5f91a4b6c344d032472197', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.411253+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('0ea4df76-b3ce-498e-84b7-b08b765711d1', '7826acc8-b0c2-4207-b39f-cc363d24fee5', '6d3ba954-3cb4-4df6-8aa7-6abcbc7f2959', 'file:///Plugin/SoftwareSourceCode/QuakeML', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.419764+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('38df1ee3-1eb5-4e1e-9967-f5321f9bfb11', '8a1d3125-e3cf-4e31-9924-4a1f1c39adfe', '605b1cae-2dfc-4957-85bd-573d9ffd0197', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.426613+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('d5ded32c-7de6-4354-862e-09c81a3f5d22', '552afda4-a138-4a85-9aa4-3af8ea219ef6', 'a3202bb7-1850-47c6-91bf-a9343debbc51', 'file:///Dataset/Test/1', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.441308+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('984a1108-90e7-4ef8-8cd6-cae46305d046', 'e0fed0d6-ae5a-4875-8ab0-ce45e2174358', '61fef827-1a5a-4635-939d-378301dc7cb5', '_:f5f21e548df3a94fc85d50fa9072fa62', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.472099+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('3b7d3279-8237-4136-b8b2-81bbf730fd6f', '192b99ff-f942-48dd-a059-53a299434ba1', '8ba879d6-48c0-48f7-9aca-7ccf59b14015', 'ID:eposid', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.487913+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('cc29dc76-de82-4994-afce-613662a7c03f', 'd56707f6-fd1d-49a8-9af4-8e68ba6d77a8', '71c9b638-8a66-48d6-ba20-02f2ec556ae4', 'file:///Distribution/Test/1', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.506621+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('872adcf8-95e6-46c5-af4d-336916206a11', '6616c0e1-aef8-4738-a933-483a722af738', 'ce2fdb11-222c-4ead-8de3-9195d8ad83cc', 'file:///Dataset/Test/2', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.540038+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('5494da6f-3d31-4aac-ab0a-8cb47982c6dc', 'adcd7794-2daf-44be-af55-88273564b8e1', 'b36d4b10-e66a-4345-9024-60b35fdd7f20', 'file:///Distribution/Test/2', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.576561+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('f031c969-e055-4032-aed2-7495f850fa40', 'd7aae95e-fd15-4ba3-a1fd-865c28d60373', '97b9470e-8803-41d2-a58c-253448a0506f', '_:ada3a3a15cdedeaa98dfa608fca2db11', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.594085+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('45c74ac6-3c86-41f0-8d08-51255a299d08', '14f278d4-9f20-4c9d-8313-fdf25fe85746', '05225646-d745-4607-9781-e1a9e320fefc', '_:bab82dc63da76d9fba126862fdaba8ce', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.606379+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('54d3d8f6-b50d-487e-ba52-3e46871f8cd9', 'f4ee60f8-ed21-45b9-9f7f-91097aa5a747', '95120014-a81d-46ff-92a3-b4b93f40692b', 'file:///servicetype1', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.612966+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('3de30abd-f0c6-459c-a995-b05905a23102', 'fa21d11c-36cb-4cd1-8439-baf26c5d0d32', '6e3bd52a-a008-499d-a13d-399b38205c56', '_:bb6d3f02b6a84cea30d2be9165c07a92', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.626323+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('f6a8a271-4f03-41c0-9727-76a3d9af6c10', 'a2072068-4fd2-43c9-bd7a-afdcde2ca3cd', '66f8f5c0-26c5-47b9-9948-516192dd93f4', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.636075+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('93bf1070-2dde-47fd-9797-fba0edab7976', 'd7f5526c-0643-4f7a-857d-91552129e345', '8beb092c-4571-4504-b961-a1d7fc441b02', 'file:///WebService/Test/2', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.654966+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('59c24458-ae16-4b84-bc74-eb28b27fce49', 'ebb62876-c84e-4bc5-a9d3-6d32a449d908', '7247fe75-e322-437b-b31b-e4a61d4847b3', 'ID:eposidchild', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.666745+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('7cefad5a-9343-4a72-8c54-4476e222144d', '1b3081b8-6b19-4008-bdd8-7719f08ae77b', 'b9bfe5b2-b0b8-4e9a-97da-69150309e0db', '_:3ad0a01102090b1972959f9a9a90c1ca', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.699189+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('858729c4-8461-49ed-bdf6-a32022983116', '708e9017-6d25-48a5-87ca-884ac548a3d6', '977567c6-d5ad-43b6-a6bc-885ec5768c8f', 'file:///Operation/Test/2', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.737602+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('e9e75891-348d-4286-a055-2e19fd917580', '18781c4c-d00c-4e8b-9da2-2025df29c155', '73646112-d570-40a9-ab8a-9e6bcece366c', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.774861+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('951b6617-3968-4f67-93c9-a1e8e915c7fb', 'd434c4fb-d9e8-4941-ad8f-11a7c0ed8116', '2bbfcad9-650a-487c-8893-196d023fc7b2', '_:ba9494317fdfe0c63a094dff39ce4e38', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.80696+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('9b4178cc-4030-4b9a-936e-2f1914955bb3', '4381018b-f853-454f-9615-d4623c1b44c6', '39ae8708-4961-4d37-bec2-54e19f85efad', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.821407+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('dddf13f4-131d-44ff-b3de-4a633dbc26ca', '68fa9043-25c3-48fa-802a-98bc7e380c73', '90cac838-aa79-42c4-b32f-bbd614238306', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.833791+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('455b0331-4d97-46a0-bc55-c3669a281bcb', '42c2f4cc-8bb0-484f-a096-b7b658724063', '13f60c2f-f835-47e1-9ee0-2e9b7a6c4e2d', 'file:///Equipment/Test/1', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.851099+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('7543bed0-49e0-423c-8d83-19eca589d44e', '00280e3e-3d0e-4795-a53e-2c7262b8c0c6', '31361cd2-8061-44a9-9c03-8a130246a14a', '_:680ed0271844eabd44c90d96ed37f56e', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.894757+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('67b07293-ed6d-47d9-a3b2-c69bd89ae29b', '52c557a5-611a-4d59-a0b1-8b6d7d8af77e', '0bfac93e-0f34-4664-b86a-fd77070b01b0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.909712+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('75bebcd0-fb65-4e47-b4d4-05070b0eb6c6', 'b4e0107e-46cf-4d28-b6a8-bea47b9c80a5', '7986a3e7-0537-4de5-8209-c1c3af27f46a', '_:0036c69adb7a270557cf5d87e2773afa', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.928811+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('f9c7e122-bf56-492e-a644-215c163532ce', '4a8b5a98-e391-47f7-9bae-fc291fd10937', '23407890-af32-4440-ab56-6212cbf871dd', '_:103238426b6ee15fa5af928112793223', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.93446+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('1cd9297b-1a51-445d-b231-d96d11d0945a', '8a8c7a64-2b88-45e8-baa6-3aa1d8555eee', '3fa8252b-f37e-4847-86fe-0459823b1c6f', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:07.972246+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('f26dc8ed-e66a-4319-95cc-10517072c3f4', 'df9459ed-c6d0-4c7f-b717-fb57490a7981', 'e788269c-44a1-4e0f-9cba-ac4130e3ce2f', 'file:///Plugin/SoftwareApplication/QuakeML', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:07.996252+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('cd655229-e627-47d8-bd0d-8286be012f5a', '93a5cbba-f6d3-4bc4-b187-d17d2bd6a245', 'ed11e38c-f8fa-4b7c-b476-afc798702791', '_:ff58cb5548fe3870033d90ee01de424e', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:08.008763+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('48c24f9f-c41c-45d3-bf5b-127112249bd9', '190d03dc-0ef3-4e5f-9ff6-0465a062298d', 'a02071bb-a9e0-4751-91d0-f771b3ec258b', '_:932a5ff0a6a137cf4a4a84cb8747bb9a', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:08.019664+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('beadf468-e8e8-47ec-b575-19ab4038ec92', '4920d923-b129-413a-b3a4-bf70a00feb4a', '4b7e132d-38eb-4400-a935-9abcc2df4833', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:08.085279+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('8d40f971-09d4-4d22-874e-f2451ffe357b', 'f9821b98-3ca7-4551-a9fd-0ad59ede267e', 'cf76f322-b7da-4eac-95a3-8b2a31b7e13f', '_:f38b0cca5b4f377fb250273f0e311c5f', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:08.097516+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('1fd42b77-883c-4aa9-91af-1c8659513401', 'c7fd9939-8448-4236-afeb-cd5b6ad6a287', '1b56626f-8756-4a5e-8f1a-7318a003adc7', 'http://orcid.org/0000-0001-5805-9337', NULL, 'ingestor', 'ingestor', NULL, NULL, NULL, '2025-01-23 11:23:08.113093+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('8f467d69-2100-4776-9878-4c7ddc0f952d', '740ccf92-48de-4443-8bc8-2028201ddca2', '9e2c3041-9fa9-4ac1-9d76-cc6c245cf42e', 'PIC:999472675', NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:08.127207+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('b3fb1a45-eea0-43df-9d27-12b67c027b81', '520fda14-455c-465f-99db-8f1393dba3ca', 'a448ded4-32af-4ded-a719-74a357d3ab43', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:08.147317+00', NULL, 'PUBLISHED');
INSERT INTO metadata_catalogue.versioningstatus (version_id, instance_id, meta_id, uid, instance_change_id, provenance, editor_id, reviewer_id, review_comment, change_comment, change_timestamp, version, status) VALUES ('616eefba-d5ae-4f74-b8a9-f18cb90fc335', '8456bb4d-565b-4634-88a1-f40af7d4007e', '24b22b9e-22ba-4fa6-bcfe-399b24c27dcd', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2025-01-23 11:23:08.156507+00', NULL, 'PUBLISHED');


--
-- Data for Name: address; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.address (instance_id, meta_id, uid, version_id, country, countrycode, street, postal_code, locality) VALUES ('f95f19da-cd12-4974-baf6-7aacffc8cf54', 'fded39f1-9107-4d68-8006-b868c226ca25', '_:5db070e0889ba152ab0f8eb8c02b02b3', '538a8ea4-ffbd-45b8-a7ee-d4c2e5f29c7f', 'Italy', NULL, 'via di Vigna Murata, 605', '00143', 'Roma');
INSERT INTO metadata_catalogue.address (instance_id, meta_id, uid, version_id, country, countrycode, street, postal_code, locality) VALUES ('88ece5d3-3343-4a4c-ad94-f3a1fd68a1ee', '086630b2-d74c-4054-9d88-2f0ec4f4f515', '_:591da04ab95db0b17ab367e8e27491e9', '3972a2f5-bad0-4d78-922f-ef8e89373af6', 'Country', NULL, 'Street Address', '00000', 'locality');
INSERT INTO metadata_catalogue.address (instance_id, meta_id, uid, version_id, country, countrycode, street, postal_code, locality) VALUES ('190d03dc-0ef3-4e5f-9ff6-0465a062298d', 'a02071bb-a9e0-4751-91d0-f771b3ec258b', '_:932a5ff0a6a137cf4a4a84cb8747bb9a', '48c24f9f-c41c-45d3-bf5b-127112249bd9', 'IT', NULL, 'Via di Vigna Murata, 605', '00143', 'Roma');
INSERT INTO metadata_catalogue.address (instance_id, meta_id, uid, version_id, country, countrycode, street, postal_code, locality) VALUES ('f9821b98-3ca7-4551-a9fd-0ad59ede267e', 'cf76f322-b7da-4eac-95a3-8b2a31b7e13f', '_:f38b0cca5b4f377fb250273f0e311c5f', '8d40f971-09d4-4d22-874e-f2451ffe357b', 'IT', NULL, 'Via di Vigna Murata, 605', '00143', 'Roma');


--
-- Data for Name: edm_entity_id; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('b94dbbb3-0ae5-4ae4-a9b7-c49744bcae76', 'DOCUMENTATION');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('858d4605-2cfd-4727-87ae-55614bec9a9b', 'PERIODOFTIME');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('9d25bd9b-cf65-4c02-b32a-18bace436cde', 'CATEGORYSCHEME');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('5f2b59df-3b77-48ad-8549-c03d931c660d', 'LOCATION');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('11332185-461a-4f6a-b0cf-615ec5c08a93', 'PERIODOFTIME');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('3c74e97d-d41d-4542-95e1-942926ef8927', 'PERIODOFTIME');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('89f24b4e-fbcb-4cb0-ba26-13f1aeecbf0e', 'QUANTITATIVEVALUE');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('170d4011-aed3-4e97-82ed-f1f83b1d745c', 'MAPPING');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('5e09265b-1740-4fe0-a506-21a1aefb18fe', 'IDENTIFIER');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('fded39f1-9107-4d68-8006-b868c226ca25', 'ADDRESS');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('90452112-3e36-419a-818d-8a2528da3abb', 'IDENTIFIER');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('94815399-302e-4b4e-b9d6-7a1091193544', 'PERIODOFTIME');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('6707aa99-9c17-4164-b2c5-a6d5cfd75038', 'MAPPING');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('714b8c2e-f6a5-4245-af26-1d8be1bd61d5', 'SOFTWAREAPPLICATIONINPUTPARAMETER');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('9dafe2e0-4cda-42e5-acfc-4a73de058492', 'MAPPING');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('196abb06-be64-4c5e-9c70-d7a8547d93f0', 'ELEMENT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('a9a9f450-d3e9-47ed-9518-80e3e395a1f3', 'ELEMENT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('796fb4fa-a590-4c09-9145-625b8c3bd628', 'CATEGORYSCHEME');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('63df0336-830b-4ff8-a113-37314c994482', 'MAPPING');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('6741b98d-fe2b-4b7b-82ad-0a3ecd592da0', 'CATEGORY');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('700cc72d-d1c6-427e-a2dc-1ba9b0bc4732', 'CATEGORY');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('e0614fce-484a-49fd-a519-b625d73a8c09', 'CATEGORY');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('40427495-9c8f-4348-9f13-5ad546028396', 'FACILITY');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('b3f48dd9-c879-441a-b86d-a6dda7c0e6b8', 'CATEGORY');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('82631430-a76f-4837-819c-60d32e4e72ec', 'CONTACTPOINT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('086630b2-d74c-4054-9d88-2f0ec4f4f515', 'ADDRESS');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('61bbbbe6-57ea-47a0-9189-e90e7c8e205c', 'ELEMENT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('e0d78a77-6ca5-4d7e-b7c2-fcf89c21b862', 'LOCATION');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('6d3ba954-3cb4-4df6-8aa7-6abcbc7f2959', 'SOFTWARESOURCECODE');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('605b1cae-2dfc-4957-85bd-573d9ffd0197', 'ELEMENT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('a3202bb7-1850-47c6-91bf-a9343debbc51', 'DATAPRODUCT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('61fef827-1a5a-4635-939d-378301dc7cb5', 'IDENTIFIER');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('8ba879d6-48c0-48f7-9aca-7ccf59b14015', 'ORGANIZATION');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('71c9b638-8a66-48d6-ba20-02f2ec556ae4', 'DISTRIBUTION');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('ce2fdb11-222c-4ead-8de3-9195d8ad83cc', 'DATAPRODUCT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('b36d4b10-e66a-4345-9024-60b35fdd7f20', 'DISTRIBUTION');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('97b9470e-8803-41d2-a58c-253448a0506f', 'PERIODOFTIME');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('05225646-d745-4607-9781-e1a9e320fefc', 'IDENTIFIER');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('95120014-a81d-46ff-92a3-b4b93f40692b', 'CATEGORY');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('6e3bd52a-a008-499d-a13d-399b38205c56', 'IDENTIFIER');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('66f8f5c0-26c5-47b9-9948-516192dd93f4', 'ELEMENT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('8beb092c-4571-4504-b961-a1d7fc441b02', 'WEBSERVICE');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('7247fe75-e322-437b-b31b-e4a61d4847b3', 'ORGANIZATION');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('b9bfe5b2-b0b8-4e9a-97da-69150309e0db', 'LOCATION');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('977567c6-d5ad-43b6-a6bc-885ec5768c8f', 'OPERATION');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('73646112-d570-40a9-ab8a-9e6bcece366c', 'ELEMENT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('2bbfcad9-650a-487c-8893-196d023fc7b2', 'LOCATION');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('39ae8708-4961-4d37-bec2-54e19f85efad', 'ELEMENT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('90cac838-aa79-42c4-b32f-bbd614238306', 'ELEMENT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('13f60c2f-f835-47e1-9ee0-2e9b7a6c4e2d', 'EQUIPMENT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('31361cd2-8061-44a9-9c03-8a130246a14a', 'LOCATION');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('0bfac93e-0f34-4664-b86a-fd77070b01b0', 'ELEMENT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('7986a3e7-0537-4de5-8209-c1c3af27f46a', 'LOCATION');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('23407890-af32-4440-ab56-6212cbf871dd', 'QUANTITATIVEVALUE');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('3fa8252b-f37e-4847-86fe-0459823b1c6f', 'ELEMENT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('e788269c-44a1-4e0f-9cba-ac4130e3ce2f', 'SOFTWAREAPPLICATION');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('ed11e38c-f8fa-4b7c-b476-afc798702791', 'SOFTWAREAPPLICATIONOUTPUTPARAMETER');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('a02071bb-a9e0-4751-91d0-f771b3ec258b', 'ADDRESS');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('4b7e132d-38eb-4400-a935-9abcc2df4833', 'ELEMENT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('cf76f322-b7da-4eac-95a3-8b2a31b7e13f', 'ADDRESS');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('1b56626f-8756-4a5e-8f1a-7318a003adc7', 'PERSON');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('9e2c3041-9fa9-4ac1-9d76-cc6c245cf42e', 'ORGANIZATION');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('a448ded4-32af-4ded-a719-74a357d3ab43', 'ELEMENT');
INSERT INTO metadata_catalogue.edm_entity_id (meta_id, table_name) VALUES ('24b22b9e-22ba-4fa6-bcfe-399b24c27dcd', 'ELEMENT');


--
-- Data for Name: metadata_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.metadata_group (id, name, description) VALUES ('5f247d96-56d5-4893-b166-a1c8bb852a08', 'ALL', 'Basic group');


--
-- Data for Name: authorization_group; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: category_scheme; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.category_scheme (instance_id, meta_id, uid, version_id, name, code, description, logo, homepage, color, orderitemnumber) VALUES ('b7435b87-879b-4176-934d-9d44b86ddf10', '9d25bd9b-cf65-4c02-b32a-18bace436cde', 'category:fac1', '8c812bfb-7f61-4b89-8f59-45eaae05f525', 'FACILITY TEST', 'FACILITY TEST', 'Facility Domain', '', '', '#27A468', '1');
INSERT INTO metadata_catalogue.category_scheme (instance_id, meta_id, uid, version_id, name, code, description, logo, homepage, color, orderitemnumber) VALUES ('079d7444-778f-4501-8b36-0887652f5e64', '796fb4fa-a590-4c09-9145-625b8c3bd628', 'category:cat1', 'ed56ff32-0cd1-4dcf-9e0c-0b7e23be17fc', 'DOMAIN TEST 1', 'DOMAIN TEST', 'TCS Domain', '', '', '#5e3160', '1');


--
-- Data for Name: category; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.category (instance_id, meta_id, uid, version_id, in_scheme, description, name) VALUES ('7bece22f-38ff-483d-8e50-dcff4ae8b277', '6741b98d-fe2b-4b7b-82ad-0a3ecd592da0', 'category:cat3', '5b69bb55-99a3-46fc-98b6-c98b8264467f', '079d7444-778f-4501-8b36-0887652f5e64', 'TCS Subdomain', 'CATEGORY TEST 2');
INSERT INTO metadata_catalogue.category (instance_id, meta_id, uid, version_id, in_scheme, description, name) VALUES ('215bfdd3-06f7-4931-8a2c-533920663e61', '700cc72d-d1c6-427e-a2dc-1ba9b0bc4732', 'category:cat2', 'daeb808d-f023-4d0c-b3e5-7f2315bbfc0c', '079d7444-778f-4501-8b36-0887652f5e64', 'TCS Subdomain', 'CATEGORY TEST 1');
INSERT INTO metadata_catalogue.category (instance_id, meta_id, uid, version_id, in_scheme, description, name) VALUES ('230a9cde-a266-44b7-9663-287f96c1c4e7', 'e0614fce-484a-49fd-a519-b625d73a8c09', 'category:cat4', '5eefdc33-5c16-49e7-878f-652f5f4d4d0e', '079d7444-778f-4501-8b36-0887652f5e64', 'TCS Subdomain', 'CATEGORY TEST 3');
INSERT INTO metadata_catalogue.category (instance_id, meta_id, uid, version_id, in_scheme, description, name) VALUES ('f4ee60f8-ed21-45b9-9f7f-91097aa5a747', '95120014-a81d-46ff-92a3-b4b93f40692b', 'file:///servicetype1', '54d3d8f6-b50d-487e-ba52-3e46871f8cd9', NULL, 'service type', 'SERVICE TYPE 1');
INSERT INTO metadata_catalogue.category (instance_id, meta_id, uid, version_id, in_scheme, description, name) VALUES ('71f96085-f65c-463e-b616-55b3b2660246', 'b3f48dd9-c879-441a-b86d-a6dda7c0e6b8', 'category:facchild1', 'a824e262-4b79-40ee-9102-e219c6b41209', 'b7435b87-879b-4176-934d-9d44b86ddf10', 'FACILITY CATEGORY 1', 'FACILITY CATEGORY 1');


--
-- Data for Name: category_hastopconcept; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: category_ispartof; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.category_ispartof (category1_instance_id, category2_instance_id) VALUES ('215bfdd3-06f7-4931-8a2c-533920663e61', '7bece22f-38ff-483d-8e50-dcff4ae8b277');
INSERT INTO metadata_catalogue.category_ispartof (category1_instance_id, category2_instance_id) VALUES ('215bfdd3-06f7-4931-8a2c-533920663e61', '230a9cde-a266-44b7-9663-287f96c1c4e7');


--
-- Data for Name: contactpoint; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.contactpoint (instance_id, meta_id, uid, version_id, role) VALUES ('635a9982-5011-46c1-ab2e-7063ae9397d3', '82631430-a76f-4837-819c-60d32e4e72ec', 'http://orcid.org//0000-0001-5805-9337/scientificContact', '6b06760f-14fe-4d27-a6b2-e4d0aff650f0', 'scientificContact');


--
-- Data for Name: element; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.element (instance_id, meta_id, uid, version_id, type, value) VALUES ('700f90e3-90aa-42cf-8835-a6b77d79ace9', 'b94dbbb3-0ae5-4ae4-a9b7-c49744bcae76', 'file:///Documentation/Test/2', '1ae576c4-223b-4211-bcca-471f91db196d', 'DOCUMENTATION', '{"Title":"Documentation Title 2","Description":"Documentation Description 2","Uri":"API-Documentation-entrypoint"}');
INSERT INTO metadata_catalogue.element (instance_id, meta_id, uid, version_id, type, value) VALUES ('30290d4a-23da-46d5-8346-f046725189f5', '196abb06-be64-4c5e-9c70-d7a8547d93f0', 'Element/6b0a3681-c516-4c5f-9d46-0a2ce0d0815b', 'aec1ceda-5559-471f-be23-8b936ec40b43', 'PARAMVALUE', 'M');
INSERT INTO metadata_catalogue.element (instance_id, meta_id, uid, version_id, type, value) VALUES ('6da4863f-1eae-42e1-988d-3f589f8e2364', 'a9a9f450-d3e9-47ed-9518-80e3e395a1f3', 'Element/2d481d09-3435-4466-81c3-623fab05e147', 'a62854be-5322-4aff-afca-c97e450be150', 'PARAMVALUE', 'B');
INSERT INTO metadata_catalogue.element (instance_id, meta_id, uid, version_id, type, value) VALUES ('e50e54a3-5d45-45c1-8e06-12797047c22a', '61bbbbe6-57ea-47a0-9189-e90e7c8e205c', 'Element/cf39125e-a56f-4554-835b-86d555cfd625', '9735492f-7cc8-4ec8-b0dc-2801b947dc12', 'PAGEURL', 'http://facilityURL.org');
INSERT INTO metadata_catalogue.element (instance_id, meta_id, uid, version_id, type, value) VALUES ('8a1d3125-e3cf-4e31-9924-4a1f1c39adfe', '605b1cae-2dfc-4957-85bd-573d9ffd0197', 'Element/f2f76cdf-72e6-4ac5-b127-77b7a399378b', '38df1ee3-1eb5-4e1e-9967-f5321f9bfb11', 'PROGRAMMINGLANGUAGE', 'Java');
INSERT INTO metadata_catalogue.element (instance_id, meta_id, uid, version_id, type, value) VALUES ('a2072068-4fd2-43c9-bd7a-afdcde2ca3cd', '66f8f5c0-26c5-47b9-9948-516192dd93f4', 'Element/ef418232-8fd3-423a-8b7f-f9f41770fdb9', 'f6a8a271-4f03-41c0-9727-76a3d9af6c10', 'EMAIL', 'testemail1@email.it');
INSERT INTO metadata_catalogue.element (instance_id, meta_id, uid, version_id, type, value) VALUES ('18781c4c-d00c-4e8b-9da2-2025df29c155', '73646112-d570-40a9-ab8a-9e6bcece366c', 'Element/bcfae226-ab6c-4b29-9f09-8efd71a5889d', 'e9e75891-348d-4286-a055-2e19fd917580', 'EMAIL', 'testemail1@email.it');
INSERT INTO metadata_catalogue.element (instance_id, meta_id, uid, version_id, type, value) VALUES ('4381018b-f853-454f-9615-d4623c1b44c6', '39ae8708-4961-4d37-bec2-54e19f85efad', 'Element/9995f00f-4a84-4a32-ac55-0ab562bd5e2a', '9b4178cc-4030-4b9a-936e-2f1914955bb3', 'LANGUAGE', 'en');
INSERT INTO metadata_catalogue.element (instance_id, meta_id, uid, version_id, type, value) VALUES ('68fa9043-25c3-48fa-802a-98bc7e380c73', '90cac838-aa79-42c4-b32f-bbd614238306', 'Element/6719c7b8-09da-4e08-8877-bca11dc769b6', 'dddf13f4-131d-44ff-b3de-4a633dbc26ca', 'EMAIL', 'valerio.vinciarelli@epos-eric.eu');
INSERT INTO metadata_catalogue.element (instance_id, meta_id, uid, version_id, type, value) VALUES ('52c557a5-611a-4d59-a0b1-8b6d7d8af77e', '0bfac93e-0f34-4664-b86a-fd77070b01b0', 'Element/931b06db-2637-48f0-9615-a273ed254e5e', '67b07293-ed6d-47d9-a3b2-c69bd89ae29b', 'PAGEURL', 'http://equipmentURL.org');
INSERT INTO metadata_catalogue.element (instance_id, meta_id, uid, version_id, type, value) VALUES ('8a8c7a64-2b88-45e8-baa6-3aa1d8555eee', '3fa8252b-f37e-4847-86fe-0459823b1c6f', 'Element/40ed39f1-f270-4888-acbf-e18ea51bde83', '1cd9297b-1a51-445d-b231-d96d11d0945a', 'RETURNS', 'application/vnd.fdsn.mseed');
INSERT INTO metadata_catalogue.element (instance_id, meta_id, uid, version_id, type, value) VALUES ('4920d923-b129-413a-b3a4-bf70a00feb4a', '4b7e132d-38eb-4400-a935-9abcc2df4833', 'Element/ae571037-b8bf-45bd-b9d3-bbdb17deeaf2', 'beadf468-e8e8-47ec-b575-19ab4038ec92', 'DOWNLOADURL', 'https://doron-prize.ch/wp-content/uploads/2020/07/1200px-Test-Logo.svg_.png');
INSERT INTO metadata_catalogue.element (instance_id, meta_id, uid, version_id, type, value) VALUES ('520fda14-455c-465f-99db-8f1393dba3ca', 'a448ded4-32af-4ded-a719-74a357d3ab43', 'Element/a47ea169-44d6-4cfc-a962-08596e6c76b1', 'b3fb1a45-eea0-43df-9d27-12b67c027b81', 'TELEPHONE', '+3900000000');
INSERT INTO metadata_catalogue.element (instance_id, meta_id, uid, version_id, type, value) VALUES ('8456bb4d-565b-4634-88a1-f40af7d4007e', '24b22b9e-22ba-4fa6-bcfe-399b24c27dcd', 'Element/a7777d6e-a37c-4e71-afb9-3a8ec60997a6', '616eefba-d5ae-4f74-b8a9-f18cb90fc335', 'EMAIL', 'valerio.vinciarelli@epos-eric.eu');


--
-- Data for Name: contactpoint_element; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.contactpoint_element (contactpoint_instance_id, element_instance_id) VALUES ('635a9982-5011-46c1-ab2e-7063ae9397d3', '4381018b-f853-454f-9615-d4623c1b44c6');
INSERT INTO metadata_catalogue.contactpoint_element (contactpoint_instance_id, element_instance_id) VALUES ('635a9982-5011-46c1-ab2e-7063ae9397d3', '68fa9043-25c3-48fa-802a-98bc7e380c73');


--
-- Data for Name: dataproduct; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.dataproduct (instance_id, meta_id, uid, version_id, identifier, created, issued, modified, versioninfo, type, accrualperiodicity, keywords, accessright, documentation, qualityassurance, has_quality_annotation) VALUES ('552afda4-a138-4a85-9aa4-3af8ea219ef6', 'a3202bb7-1850-47c6-91bf-a9343debbc51', 'file:///Dataset/Test/1', 'd5ded32c-7de6-4354-862e-09c81a3f5d22', NULL, '2025-01-01 00:00:00+00', '2025-01-01 00:00:00+00', '2025-01-01 00:00:00+00', '1.0.0', 'http://purl.org/dc/dcmitype/Collection', 'http://purl.org/cld/freq/continuous', 'keyword1,	keyword3,	keyword2', NULL, NULL, NULL, NULL);
INSERT INTO metadata_catalogue.dataproduct (instance_id, meta_id, uid, version_id, identifier, created, issued, modified, versioninfo, type, accrualperiodicity, keywords, accessright, documentation, qualityassurance, has_quality_annotation) VALUES ('6616c0e1-aef8-4738-a933-483a722af738', 'ce2fdb11-222c-4ead-8de3-9195d8ad83cc', 'file:///Dataset/Test/2', '872adcf8-95e6-46c5-af4d-336916206a11', NULL, '2025-01-01 00:00:00+00', '2025-01-01 00:00:00+00', '2025-01-01 00:00:00+00', '1.0.0', 'http://purl.org/dc/dcmitype/Collection', 'http://purl.org/cld/freq/irregular', 'keyword4,	keyword6,	keyword5', NULL, NULL, NULL, NULL);


--
-- Data for Name: dataproduct_category; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.dataproduct_category (dataproduct_instance_id, category_instance_id) VALUES ('552afda4-a138-4a85-9aa4-3af8ea219ef6', '215bfdd3-06f7-4931-8a2c-533920663e61');
INSERT INTO metadata_catalogue.dataproduct_category (dataproduct_instance_id, category_instance_id) VALUES ('6616c0e1-aef8-4738-a933-483a722af738', '7bece22f-38ff-483d-8e50-dcff4ae8b277');


--
-- Data for Name: dataproduct_contactpoint; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.dataproduct_contactpoint (dataproduct_instance_id, contactpoint_instance_id) VALUES ('552afda4-a138-4a85-9aa4-3af8ea219ef6', '635a9982-5011-46c1-ab2e-7063ae9397d3');
INSERT INTO metadata_catalogue.dataproduct_contactpoint (dataproduct_instance_id, contactpoint_instance_id) VALUES ('6616c0e1-aef8-4738-a933-483a722af738', '635a9982-5011-46c1-ab2e-7063ae9397d3');


--
-- Data for Name: dataproduct_description; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.dataproduct_description (instance_id, meta_id, uid, version_id, description, lang, dataproduct_instance_id) VALUES ('ed834d61-b8f1-46d9-8127-801cd856e835', '3fb6b77d-7b5b-4a4d-8af0-a621bf17f4b8', 'Description/739f8c45-0bc2-4416-8519-9acf30185f10', NULL, 'Dataset Description 1', NULL, '552afda4-a138-4a85-9aa4-3af8ea219ef6');
INSERT INTO metadata_catalogue.dataproduct_description (instance_id, meta_id, uid, version_id, description, lang, dataproduct_instance_id) VALUES ('6507d29e-34a8-48ba-ae07-71900c362387', '8310fbf1-35e6-491d-b09b-399faf98d58c', 'Description/1a5ab2bc-b338-4a81-9e7d-c524e0b8c1ff', NULL, 'Dataset Description 2', NULL, '6616c0e1-aef8-4738-a933-483a722af738');


--
-- Data for Name: dataproduct_haspart; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: identifier; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.identifier (instance_id, meta_id, uid, version_id, type, value) VALUES ('033cc87d-0787-4975-8e6e-9951c52e213f', '5e09265b-1740-4fe0-a506-21a1aefb18fe', '_:bb2f888b51aa2db3347e5bb8bfc47a0c', '0550b676-ea71-412e-a8a6-9e54f6cd4b7e', 'orcid', NULL);
INSERT INTO metadata_catalogue.identifier (instance_id, meta_id, uid, version_id, type, value) VALUES ('69205386-1b98-4c0e-8b16-ebca111c2491', '90452112-3e36-419a-818d-8a2528da3abb', '_:ba363ee91ff86763fb2aa2b08ce23d4d', '0d2a4cdd-10ad-42da-852e-5bdb5fa950df', 'DDSS-ID', 'TEST-2');
INSERT INTO metadata_catalogue.identifier (instance_id, meta_id, uid, version_id, type, value) VALUES ('14f278d4-9f20-4c9d-8313-fdf25fe85746', '05225646-d745-4607-9781-e1a9e320fefc', '_:bab82dc63da76d9fba126862fdaba8ce', '45c74ac6-3c86-41f0-8d08-51255a299d08', 'ID', 'eposidchild');
INSERT INTO metadata_catalogue.identifier (instance_id, meta_id, uid, version_id, type, value) VALUES ('e0fed0d6-ae5a-4875-8ab0-ce45e2174358', '61fef827-1a5a-4635-939d-378301dc7cb5', '_:f5f21e548df3a94fc85d50fa9072fa62', '984a1108-90e7-4ef8-8cd6-cae46305d046', 'DDSS-ID', 'TEST-1');
INSERT INTO metadata_catalogue.identifier (instance_id, meta_id, uid, version_id, type, value) VALUES ('fa21d11c-36cb-4cd1-8439-baf26c5d0d32', '6e3bd52a-a008-499d-a13d-399b38205c56', '_:bb6d3f02b6a84cea30d2be9165c07a92', '3de30abd-f0c6-459c-a995-b05905a23102', 'ID', 'eposid');


--
-- Data for Name: dataproduct_identifier; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.dataproduct_identifier (dataproduct_instance_id, identifier_instance_id) VALUES ('552afda4-a138-4a85-9aa4-3af8ea219ef6', 'e0fed0d6-ae5a-4875-8ab0-ce45e2174358');
INSERT INTO metadata_catalogue.dataproduct_identifier (dataproduct_instance_id, identifier_instance_id) VALUES ('6616c0e1-aef8-4738-a933-483a722af738', '69205386-1b98-4c0e-8b16-ebca111c2491');


--
-- Data for Name: dataproduct_ispartof; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: dataproduct_provenance; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: organization; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.organization (instance_id, meta_id, uid, version_id, acronym, legalname, leicode, address_id, logo, url, type, maturity) VALUES ('192b99ff-f942-48dd-a059-53a299434ba1', '8ba879d6-48c0-48f7-9aca-7ccf59b14015', 'ID:eposid', '3b7d3279-8237-4136-b8b2-81bbf730fd6f', NULL, 'EPOS ERIC', NULL, NULL, 'https://www.ingv.it/images/news/news/news-epos-31102018.png', 'https://www.epos-eu.org', NULL, NULL);
INSERT INTO metadata_catalogue.organization (instance_id, meta_id, uid, version_id, acronym, legalname, leicode, address_id, logo, url, type, maturity) VALUES ('ebb62876-c84e-4bc5-a9d3-6d32a449d908', '7247fe75-e322-437b-b31b-e4a61d4847b3', 'ID:eposidchild', '59c24458-ae16-4b84-bc74-eb28b27fce49', NULL, 'EPOS ERIC Child', NULL, NULL, 'https://www.ingv.it/images/news/news/news-epos-31102018.png', 'https://www.epos-eu.org', NULL, NULL);
INSERT INTO metadata_catalogue.organization (instance_id, meta_id, uid, version_id, acronym, legalname, leicode, address_id, logo, url, type, maturity) VALUES ('740ccf92-48de-4443-8bc8-2028201ddca2', '9e2c3041-9fa9-4ac1-9d76-cc6c245cf42e', 'PIC:999472675', '8f467d69-2100-4776-9878-4c7ddc0f952d', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);


--
-- Data for Name: dataproduct_publisher; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.dataproduct_publisher (dataproduct_instance_id, organization_instance_id) VALUES ('552afda4-a138-4a85-9aa4-3af8ea219ef6', '192b99ff-f942-48dd-a059-53a299434ba1');
INSERT INTO metadata_catalogue.dataproduct_publisher (dataproduct_instance_id, organization_instance_id) VALUES ('6616c0e1-aef8-4738-a933-483a722af738', '192b99ff-f942-48dd-a059-53a299434ba1');


--
-- Data for Name: dataproduct_relation; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: spatial; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.spatial (instance_id, meta_id, uid, version_id, location) VALUES ('4c20a3b1-f629-4f28-abd8-380b5837e68f', '5f2b59df-3b77-48ad-8549-c03d931c660d', '_:b7f887ff7c27d1d4e89249a9853875ab', 'ab951360-d7f9-47ca-b979-9fe32513c89f', 'POLYGON((180.0 -90.0 , -180.0 -90.0, -180.0 90.0 , 180.0 90.0,180.0 -90.0))');
INSERT INTO metadata_catalogue.spatial (instance_id, meta_id, uid, version_id, location) VALUES ('7037d8a1-75ca-4bda-b837-8db673b12e25', 'e0d78a77-6ca5-4d7e-b7c2-fcf89c21b862', '_:6a5bf209aa5f91a4b6c344d032472197', '2b2a020c-8121-486a-a7fb-94b15517d6c8', 'POLYGON((180.0 -90.0 , -180.0 -90.0, -180.0 90.0 , 180.0 90.0,180.0 -90.0))');
INSERT INTO metadata_catalogue.spatial (instance_id, meta_id, uid, version_id, location) VALUES ('d434c4fb-d9e8-4941-ad8f-11a7c0ed8116', '2bbfcad9-650a-487c-8893-196d023fc7b2', '_:ba9494317fdfe0c63a094dff39ce4e38', '951b6617-3968-4f67-93c9-a1e8e915c7fb', 'POLYGON((14.7 37.6 , 14.7 38.1 , 15.7 38.1 , 15.7 37.6 , 14.7 37.6))');
INSERT INTO metadata_catalogue.spatial (instance_id, meta_id, uid, version_id, location) VALUES ('b4e0107e-46cf-4d28-b6a8-bea47b9c80a5', '7986a3e7-0537-4de5-8209-c1c3af27f46a', '_:0036c69adb7a270557cf5d87e2773afa', '75bebcd0-fb65-4e47-b4d4-05070b0eb6c6', 'POLYGON((14.7 37.6 , 14.7 38.1 , 15.7 38.1 , 15.7 37.6 , 14.7 37.6))');
INSERT INTO metadata_catalogue.spatial (instance_id, meta_id, uid, version_id, location) VALUES ('1b3081b8-6b19-4008-bdd8-7719f08ae77b', 'b9bfe5b2-b0b8-4e9a-97da-69150309e0db', '_:3ad0a01102090b1972959f9a9a90c1ca', '7cefad5a-9343-4a72-8c54-4476e222144d', 'POLYGON((180.0 -90.0, -180.0 -90.0, -180.0 90.0, 180.0 90.0, 180.0 -90.0))');
INSERT INTO metadata_catalogue.spatial (instance_id, meta_id, uid, version_id, location) VALUES ('00280e3e-3d0e-4795-a53e-2c7262b8c0c6', '31361cd2-8061-44a9-9c03-8a130246a14a', '_:680ed0271844eabd44c90d96ed37f56e', '7543bed0-49e0-423c-8d83-19eca589d44e', 'POINT(5.1767 52.1017 3)');


--
-- Data for Name: dataproduct_spatial; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.dataproduct_spatial (dataproduct_instance_id, spatial_instance_id) VALUES ('552afda4-a138-4a85-9aa4-3af8ea219ef6', '7037d8a1-75ca-4bda-b837-8db673b12e25');
INSERT INTO metadata_catalogue.dataproduct_spatial (dataproduct_instance_id, spatial_instance_id) VALUES ('6616c0e1-aef8-4738-a933-483a722af738', '4c20a3b1-f629-4f28-abd8-380b5837e68f');


--
-- Data for Name: temporal; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.temporal (instance_id, meta_id, uid, version_id, startdate, enddate) VALUES ('528758f9-1bfd-4094-bdba-82fc5dd4ce76', '858d4605-2cfd-4727-87ae-55614bec9a9b', '_:ed016cb74bf114d0336aa6d3b09bfa42', '56e714dd-44d8-4b8a-8dee-c596e97b4856', '1988-01-01 00:00:00', '2025-01-01 00:00:00');
INSERT INTO metadata_catalogue.temporal (instance_id, meta_id, uid, version_id, startdate, enddate) VALUES ('4829836b-ed6a-4563-a7e4-894b449c014c', '11332185-461a-4f6a-b0cf-615ec5c08a93', '_:5858aae32f69154aa7c25545455f0d1f', '665e290d-485b-4049-b0b1-6538ef79f0c7', '1997-11-25 00:00:00', NULL);
INSERT INTO metadata_catalogue.temporal (instance_id, meta_id, uid, version_id, startdate, enddate) VALUES ('fde70b5c-c48b-456a-a10b-4deccfa47ae3', '3c74e97d-d41d-4542-95e1-942926ef8927', '_:6d0830842b442013ff9a52f2d78fd246', 'ba3ffc4f-b32f-4775-9f46-309ebae3963b', '1988-01-01 00:00:00', NULL);
INSERT INTO metadata_catalogue.temporal (instance_id, meta_id, uid, version_id, startdate, enddate) VALUES ('6dd02991-750d-44c0-a891-41943ad5e3dd', '94815399-302e-4b4e-b9d6-7a1091193544', '_:ec9b40b5dc81ecadffad5005cea45c54', '8d200fb9-88e1-4390-9644-5a41e41bc3b4', '2020-01-01 00:00:00', '2024-10-31 00:00:00');
INSERT INTO metadata_catalogue.temporal (instance_id, meta_id, uid, version_id, startdate, enddate) VALUES ('d7aae95e-fd15-4ba3-a1fd-865c28d60373', '97b9470e-8803-41d2-a58c-253448a0506f', '_:ada3a3a15cdedeaa98dfa608fca2db11', 'f031c969-e055-4032-aed2-7495f850fa40', '1988-01-01 00:00:00', '2025-01-01 00:00:00');


--
-- Data for Name: dataproduct_temporal; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.dataproduct_temporal (dataproduct_instance_id, temporal_instance_id) VALUES ('552afda4-a138-4a85-9aa4-3af8ea219ef6', 'fde70b5c-c48b-456a-a10b-4deccfa47ae3');
INSERT INTO metadata_catalogue.dataproduct_temporal (dataproduct_instance_id, temporal_instance_id) VALUES ('6616c0e1-aef8-4738-a933-483a722af738', 'd7aae95e-fd15-4ba3-a1fd-865c28d60373');


--
-- Data for Name: dataproduct_title; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.dataproduct_title (instance_id, meta_id, uid, version_id, title, lang, dataproduct_instance_id) VALUES ('070ea49b-add8-459c-993b-749d7701cea5', 'f9ac7be3-0b2e-4e25-afc6-ddbda602fd4d', 'Title/61fad947-1672-4f7b-8ae1-f46de7df3825', NULL, 'Dataset Title 1', NULL, '552afda4-a138-4a85-9aa4-3af8ea219ef6');
INSERT INTO metadata_catalogue.dataproduct_title (instance_id, meta_id, uid, version_id, title, lang, dataproduct_instance_id) VALUES ('a14f491a-48fa-4664-b676-04646de81e9e', 'f12692d6-c892-4092-a329-85860187a5b2', 'Title/d96e3a20-fc3a-41bf-af81-08db8310d2d1', NULL, 'Dataset Title 2', NULL, '6616c0e1-aef8-4738-a933-483a722af738');


--
-- Data for Name: distribution; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.distribution (instance_id, meta_id, uid, version_id, issued, modified, type, format, license, datapolicy) VALUES ('adcd7794-2daf-44be-af55-88273564b8e1', 'b36d4b10-e66a-4345-9024-60b35fdd7f20', 'file:///Distribution/Test/2', '5494da6f-3d31-4aac-ab0a-8cb47982c6dc', '2025-01-01 00:00:00', '2025-01-01 00:00:00', 'http://publications.europa.eu/resource/authority/distribution-type/WEB_SERVICE', 'http://publications.europa.eu/resource/authority/file-type/BIN', 'http://creativecommons.org/licenses/by/4.0/', NULL);
INSERT INTO metadata_catalogue.distribution (instance_id, meta_id, uid, version_id, issued, modified, type, format, license, datapolicy) VALUES ('d56707f6-fd1d-49a8-9af4-8e68ba6d77a8', '71c9b638-8a66-48d6-ba20-02f2ec556ae4', 'file:///Distribution/Test/1', 'cc29dc76-de82-4994-afce-613662a7c03f', '2025-01-01 00:00:00', '2025-01-01 00:00:00', 'http://publications.europa.eu/resource/authority/distribution-type/DOWNLOADABLE_FILE', 'http://publications.europa.eu/resource/authority/file-type/PNG', 'http://creativecommons.org/licenses/by/4.0/', NULL);


--
-- Data for Name: distribution_dataproduct; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.distribution_dataproduct (distribution_instance_id, dataproduct_instance_id) VALUES ('d56707f6-fd1d-49a8-9af4-8e68ba6d77a8', '552afda4-a138-4a85-9aa4-3af8ea219ef6');
INSERT INTO metadata_catalogue.distribution_dataproduct (distribution_instance_id, dataproduct_instance_id) VALUES ('adcd7794-2daf-44be-af55-88273564b8e1', '6616c0e1-aef8-4738-a933-483a722af738');


--
-- Data for Name: distribution_description; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.distribution_description (instance_id, meta_id, uid, version_id, description, lang, distribution_instance_id) VALUES ('b6ca2d78-d1e6-4700-82e9-5566ccffe933', 'a67d2a7c-2d0e-4ede-b631-9ea9915e498c', 'Description/5d3f5444-fae3-4943-8dfe-af048addc61e', NULL, 'Distribution Description 2', NULL, 'adcd7794-2daf-44be-af55-88273564b8e1');
INSERT INTO metadata_catalogue.distribution_description (instance_id, meta_id, uid, version_id, description, lang, distribution_instance_id) VALUES ('a70471d9-3b5b-45ba-ac7d-19921c125f0e', '9d3b48b1-f704-4973-9867-f1b7d460df33', 'Description/d020b785-5473-4b23-9e30-35ec8ea99cd6', NULL, 'Distribution Description 1', NULL, 'd56707f6-fd1d-49a8-9af4-8e68ba6d77a8');


--
-- Data for Name: distribution_element; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.distribution_element (distribution_instance_id, element_instance_id) VALUES ('d56707f6-fd1d-49a8-9af4-8e68ba6d77a8', '4920d923-b129-413a-b3a4-bf70a00feb4a');


--
-- Data for Name: distribution_title; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.distribution_title (instance_id, meta_id, uid, version_id, title, lang, distribution_instance_id) VALUES ('2ad68245-46b9-4fe3-ab67-b7f2dfb75299', 'd4641d5c-7397-4fbe-b09b-d7d4536f12b4', 'Title/2f597660-c55b-411f-b70d-eb7475afef5d', NULL, 'Distribution Title 2', NULL, 'adcd7794-2daf-44be-af55-88273564b8e1');
INSERT INTO metadata_catalogue.distribution_title (instance_id, meta_id, uid, version_id, title, lang, distribution_instance_id) VALUES ('bcac620d-d94e-4ce4-b980-1d2d13e69b03', 'fb9eff98-5f38-43e3-9119-bbdc8b81dd74', 'Title/4c3aeace-c4f3-4253-8da4-e711807f74ae', NULL, 'Distribution Title 1', NULL, 'd56707f6-fd1d-49a8-9af4-8e68ba6d77a8');


--
-- Data for Name: equipment; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.equipment (instance_id, meta_id, uid, version_id, identifier, description, name, type, creator, keywords, pageurl, filter, dynamicrange, orientation, resolution, sampleperiod, serialnumber) VALUES ('42c2f4cc-8bb0-484f-a096-b7b658724063', '13f60c2f-f835-47e1-9ee0-2e9b7a6c4e2d', 'file:///Equipment/Test/1', '455b0331-4d97-46a0-bc55-c3669a281bcb', 'Equipment/Test/1', 'Equipment Description 1', 'Equipment Title 1', 'https://orfeus-eu.org/ns/stationfilter', NULL, '90.0/0.0', 'resolution', NULL, 'serialNumber');


--
-- Data for Name: equipment_category; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.equipment_category (category_instance_id, equipment_instance_id) VALUES ('71f96085-f65c-463e-b616-55b3b2660246', '42c2f4cc-8bb0-484f-a096-b7b658724063');


--
-- Data for Name: equipment_contactpoint; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.equipment_contactpoint (equipment_instance_id, contactpoint_instance_id) VALUES ('42c2f4cc-8bb0-484f-a096-b7b658724063', '635a9982-5011-46c1-ab2e-7063ae9397d3');


--
-- Data for Name: equipment_element; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.equipment_element (equipment_instance_id, element_instance_id) VALUES ('42c2f4cc-8bb0-484f-a096-b7b658724063', '52c557a5-611a-4d59-a0b1-8b6d7d8af77e');


--
-- Data for Name: equipment_ispartof; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.equipment_ispartof (equipment_instance_id, entity_instance_id, resource_entity) VALUES ('42c2f4cc-8bb0-484f-a096-b7b658724063', '06f0bb6e-5a21-4ea7-982a-f6092a7f69c0', 'FACILITY');


--
-- Data for Name: equipment_relation; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: equipment_spatial; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.equipment_spatial (equipment_instance_id, spatial_instance_id) VALUES ('42c2f4cc-8bb0-484f-a096-b7b658724063', '00280e3e-3d0e-4795-a53e-2c7262b8c0c6');


--
-- Data for Name: equipment_temporal; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.equipment_temporal (equipment_instance_id, temporal_instance_id) VALUES ('42c2f4cc-8bb0-484f-a096-b7b658724063', '4829836b-ed6a-4563-a7e4-894b449c014c');


--
-- Data for Name: facility; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.facility (instance_id, meta_id, uid, version_id, identifier, description, title, type, keywords) VALUES ('06f0bb6e-5a21-4ea7-982a-f6092a7f69c0', '40427495-9c8f-4348-9f13-5ad546028396', 'file:///Facility/Test/1', '033399dd-e33a-455c-a0b1-fea0d207d7dc', 'Facility/Test/1', 'Facility Description 1', 'Facility Title 1', NULL, NULL);


--
-- Data for Name: facility_address; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.facility_address (facility_instance_id, address_instance_id) VALUES ('06f0bb6e-5a21-4ea7-982a-f6092a7f69c0', '88ece5d3-3343-4a4c-ad94-f3a1fd68a1ee');


--
-- Data for Name: facility_category; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.facility_category (category_instance_id, facility_instance_id) VALUES ('71f96085-f65c-463e-b616-55b3b2660246', '06f0bb6e-5a21-4ea7-982a-f6092a7f69c0');


--
-- Data for Name: facility_contactpoint; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.facility_contactpoint (facility_instance_id, contactpoint_instance_id) VALUES ('06f0bb6e-5a21-4ea7-982a-f6092a7f69c0', '635a9982-5011-46c1-ab2e-7063ae9397d3');


--
-- Data for Name: facility_element; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.facility_element (facility_instance_id, element_instance_id) VALUES ('06f0bb6e-5a21-4ea7-982a-f6092a7f69c0', 'e50e54a3-5d45-45c1-8e06-12797047c22a');


--
-- Data for Name: facility_ispartof; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: facility_spatial; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: mapping; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.mapping (instance_id, meta_id, uid, version_id, label, variable, required, range, defaultvalue, minvalue, maxvalue, property, valuepattern, read_only_value, multiple_values, ismappingof) VALUES ('47895724-5ca2-4bdc-8bc8-534360a4f562', '170d4011-aed3-4e97-82ed-f1f83b1d745c', '_:1782934bd2127936f84f63307a39e1e4', '0ba09d02-b2a2-40e0-816d-205f1a2c2172', 'Start of the timespan', 'starttime', true, 'xsd:dateTime', '2012-01-01T00:00:00', NULL, NULL, 'schema:startDate', 'YYYY-MM-DDThh:mm:ss', 'false', 'false', NULL);
INSERT INTO metadata_catalogue.mapping (instance_id, meta_id, uid, version_id, label, variable, required, range, defaultvalue, minvalue, maxvalue, property, valuepattern, read_only_value, multiple_values, ismappingof) VALUES ('c147fb35-1ecb-4e36-bfc8-509ef64ac7be', '6707aa99-9c17-4164-b2c5-a6d5cfd75038', '_:35a117a8786200d071846c53b104a2de', '17cf5f69-be82-45b9-be48-aea7db7d6111', 'End of the timespan', 'endtime', true, 'xsd:dateTime', '2012-02-01T00:00:00', NULL, NULL, 'schema:endDate', 'YYYY-MM-DDThh:mm:ss', 'false', 'false', NULL);
INSERT INTO metadata_catalogue.mapping (instance_id, meta_id, uid, version_id, label, variable, required, range, defaultvalue, minvalue, maxvalue, property, valuepattern, read_only_value, multiple_values, ismappingof) VALUES ('39f4f9a2-2f86-44cc-a765-9613051fd3ef', '9dafe2e0-4cda-42e5-acfc-4a73de058492', '_:cd5611721744018f33d02bea3b79c663', '70256117-36c8-4ebe-abf7-4bb9314b070e', 'Quality', 'quality', false, 'xsd:string', 'B', NULL, NULL, NULL, NULL, 'false', 'false', NULL);
INSERT INTO metadata_catalogue.mapping (instance_id, meta_id, uid, version_id, label, variable, required, range, defaultvalue, minvalue, maxvalue, property, valuepattern, read_only_value, multiple_values, ismappingof) VALUES ('14ec0153-f3cc-4330-9482-0b87ffc51817', '63df0336-830b-4ff8-a113-37314c994482', '_:89520aa2dacb14f5f75db0e93ec58d6b', '08230f03-4353-4190-8ba9-1597e9598096', 'Network code', 'network', false, 'xsd:string', 'BE', NULL, NULL, NULL, NULL, 'false', 'false', NULL);


--
-- Data for Name: mapping_element; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.mapping_element (mapping_instance_id, element_instance_id) VALUES ('39f4f9a2-2f86-44cc-a765-9613051fd3ef', '30290d4a-23da-46d5-8346-f046725189f5');
INSERT INTO metadata_catalogue.mapping_element (mapping_instance_id, element_instance_id) VALUES ('39f4f9a2-2f86-44cc-a765-9613051fd3ef', '6da4863f-1eae-42e1-988d-3f589f8e2364');


--
-- Data for Name: metadata_user; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: metadata_group_user; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: ontologies; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.ontologies (id, name, type, content) VALUES ('84e7d8c2-bdf8-4c86-ac5f-bdbebe876c31', 'EPOS-DCAT-AP-V1', 'BASE', 'QHByZWZpeCA6IDxodHRwczovL3d3dy5lcG9zLWV1Lm9yZy9lcG9zLWRjYXQtYXAjPiAuCkBwcmVmaXggYWRtczogPGh0dHA6Ly93d3cudzMub3JnL25zL2FkbXMjPiAuCkBwcmVmaXggZGFzaDogPGh0dHA6Ly9kYXRhc2hhcGVzLm9yZy9kYXNoIz4gLgpAcHJlZml4IGRjOiA8aHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8+IC4KQHByZWZpeCBkY2F0OiA8aHR0cDovL3d3dy53My5vcmcvbnMvZGNhdCM+IC4KQHByZWZpeCBkY3Q6IDxodHRwOi8vcHVybC5vcmcvZGMvdGVybXMvPiAuCkBwcmVmaXggZXBvczogPGh0dHBzOi8vd3d3LmVwb3MtZXUub3JnL2Vwb3MtZGNhdC1hcCM+IC4KQHByZWZpeCBmb2FmOiA8aHR0cDovL3htbG5zLmNvbS9mb2FmLzAuMS8+IC4KQHByZWZpeCBjbnQ6IDxodHRwOi8vd3d3LnczLm9yZy8yMDExL2NvbnRlbnQjPiAuCkBwcmVmaXggb2E6IDxodHRwOi8vd3d3LnczLm9yZy9ucy9vYSM+IC4KQHByZWZpeCBvcmc6IDxodHRwOi8vd3d3LnczLm9yZy9ucy9vcmcjPiAuCkBwcmVmaXggb3dsOiA8aHR0cDovL3d3dy53My5vcmcvMjAwMi8wNy9vd2wjPiAuCkBwcmVmaXggcmRmOiA8aHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIz4gLgpAcHJlZml4IHJkZnM6IDxodHRwOi8vd3d3LnczLm9yZy8yMDAwLzAxL3JkZi1zY2hlbWEjPiAuCkBwcmVmaXggc2NoZW1hOiA8aHR0cDovL3NjaGVtYS5vcmcvPiAuCkBwcmVmaXggc2g6IDxodHRwOi8vd3d3LnczLm9yZy9ucy9zaGFjbCM+IC4KQHByZWZpeCBza29zOiA8aHR0cDovL3d3dy53My5vcmcvMjAwNC8wMi9za29zL2NvcmUjPiAuCkBwcmVmaXggc3BkeDogPGh0dHA6Ly9zcGR4Lm9yZy9yZGYvdGVybXMjPiAuCkBwcmVmaXggdmNhcmQ6IDxodHRwOi8vd3d3LnczLm9yZy8yMDA2L3ZjYXJkL25zIz4gLgpAcHJlZml4IGh5ZHJhOiA8aHR0cDovL3d3dy53My5vcmcvbnMvaHlkcmEvY29yZSM+IC4KQHByZWZpeCB4c2Q6IDxodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSM+IC4KQHByZWZpeCBnZW86IDxodHRwOi8vd3d3LnczLm9yZy8yMDAzLzAxL2dlby93Z3M4NF9wb3MjPiAuCkBwcmVmaXggaHR0cDogPGh0dHA6Ly93d3cudzMub3JnLzIwMDYvaHR0cCM+IC4KQHByZWZpeCBsb2NuOiA8aHR0cDovL3d3dy53My5vcmcvbnMvbG9jbiM+IC4KQHByZWZpeCBnc3A6IDxodHRwOi8vd3d3Lm9wZW5naXMubmV0L29udC9nZW9zcGFycWwjPiAuCkBwcmVmaXggZHF2OiA8aHR0cDovL3d3dy53My5vcmcvbnMvZHF2Iz4gLgoKPGh0dHA6Ly93d3cuZXBvcy1ldS5vcmcvZXBvcy1kY2F0LWFwPgogIHJkZjp0eXBlIG93bDpPbnRvbG9neSA7CiAgZGN0OmFic3RyYWN0ICJFUE9TIERDQVQgQXBwbGljYXRpb24gUHJvZmlsZSBpcyBhbiBleHRlbnNpb24gb2YgRENBVC1BUCBmb3Igc29saWQtRWFydGggc2NpZW5jZXMgY29tbXVuaXRpZXMuIkBlbiAgOwogIGRjdDpjcmVhdG9yIFsgIGZvYWY6bmFtZSAiTHVjYSBUcmFuaSIgOyBdIDsKICBkY3Q6Y29udHJpYnV0b3IgW2ZvYWY6bmFtZSAiUm9zc2FuYSBQYWNpZWxsbyIgOyBdIDsKICBkY3Q6Y29udHJpYnV0b3IgW2ZvYWY6bmFtZSAiTWFudWVsYSBTYmFycmEiIDsgIF0gOwogIGRjdDpjb250cmlidXRvciBbZm9hZjpuYW1lICJEYW1pYW4gVWxicmljaHQiIDsgXSA7CiAgZGN0OmNvbnRyaWJ1dG9yIFtmb2FmOm5hbWUgIlN5bHZhaW4gR3JlbGxldCIgOyAgXSA7CiAgZGN0OmNvbnRyaWJ1dG9yIFtmb2FmOm5hbWUgIkFuZHkgUmlkZGljayIgOyAgXSA7CiAgZGN0OmNvbnRyaWJ1dG9yIFtmb2FmOm5hbWUgIlhpYW9saWFuZyBXYW5nIiA7IF0gOwogIGRjdDpjb250cmlidXRvciBbZm9hZjpuYW1lICJWYWxlcmlvIFZpbmNpYXJlbGxpIiA7IF0gOwogIGRjdDpjcmVhdGVkICIyMDE4LTAyLTA5Il5eeHNkOmRhdGUgOwogIGRjdDptb2RpZmllZCAiMjAyMS0wMy0xMCJeXnhzZDpkYXRlIDsKICBkY3Q6cmVsYXRpb24gPGh0dHBzOi8vam9pbnVwLmVjLmV1cm9wYS5ldS9ub2RlLzY5NTU5PiA7CiAgZGN0OnRpdGxlICJFUE9TIERDQVQgQXBwbGljYXRpb24gUHJvZmlsZSJAZW4gIDsKICByZGZzOmNvbW1lbnQgIlRoaXMgZG9jdW1lbnQgc3BlY2lmaWVzIHRoZSBzZXQgb2YgY2xhc3NlcywgcHJvcGVydGllcyBhbmQgc2hhcGVzIGdyYXBocyB1c2VkIGluIHRoZSBFUE9TIERDQVQgQXBwbGljYXRpb24gUHJvZmlsZS4iQGVuICA7CiAgcmRmczpsYWJlbCAiRVBPUy1EQ0FULUFwcGxpY2F0aW9uIFByb2ZpbGUiQGVuICA7CiAgb3dsOmltcG9ydHMgPGh0dHA6Ly9kYXRhc2hhcGVzLm9yZy9kYXNoPiA7CiAgI293bDppbXBvcnRzIDxodHRwOi8vd3d3LnNjaGVtYS5vcmc+IDsKICAjb3dsOmltcG9ydHMgPGh0dHA6Ly93d3cudzMub3JnLzIwMDQvMDIvc2tvcy9jb3JlPiA7CiAgI293bDppbXBvcnRzIDxodHRwOi8vd3d3LnczLm9yZy8yMDA2L3ZjYXJkL25zPiA7CiAgI293bDppbXBvcnRzIDxodHRwOi8vd3d3LnczLm9yZy8yMDA4LzA1L3Nrb3MteGw+IDsKICAjb3dsOmltcG9ydHMgPGh0dHA6Ly93d3cudzMub3JnL25zL2RjYXQ+IDsKICAjb3dsOmltcG9ydHMgPGh0dHA6Ly93d3cudzMub3JnL25zL29hIz4gOwogICNvd2w6aW1wb3J0cyA8aHR0cDovL3d3dy53My5vcmcvbnMvb3JnIz4gOwogICNvd2w6aW1wb3J0cyA8aHR0cDovL3htbG5zLmNvbS9mb2FmLzAuMS8+IDsKICBvd2w6dmVyc2lvbkluZm8gIjEuMCIgOwogIGZvYWY6aG9tZXBhZ2UgPGh0dHA6Ly93d3cuZXBvcy1ldS5vcmcvZXBvcy1kY2F0LWFwPiA7IC4KIyMjIwojIENsYXNzZXMKIyMjIwplcG9zOkVxdWlwbWVudAogIGEgb3dsOkNsYXNzIDsKICByZGZzOmNvbW1lbnQgIkEgZ2VuZXJpYyBlcXVpcG1lbnQuIEUuZy4gYSBHUFMgc2Vuc29yLCBhIHNlaXNtaWMgc3RhdGlvbidzIGNoYW5uZWwiQGVuICA7CiAgcmRmczppc0RlZmluZWRCeSA8aHR0cDovL3d3dy5lcG9zLWV1Lm9yZy9lcG9zLWRjYXQtYXA+IDsKICByZGZzOmxhYmVsICJFcXVpcG1lbnQiQGVuICA7CiAgcmRmczpzdWJDbGFzc09mIHJkZnM6UmVzb3VyY2UgOwogIHJkZnM6c3ViQ2xhc3NPZiBzY2hlbWE6UHJvZHVjdCA7Ci4KZXBvczpGYWNpbGl0eQogIGEgb3dsOkNsYXNzIDsKICByZGZzOmNvbW1lbnQgIkEgcmVzb3VyY2UgcmVwcmVzZW50aW5nIGEgRmFjaWxpdHkuIEUuZy4gYSBsYWJvcmF0b3J5LCBhIHNlaXNtaWMgc3RhdGlvbiJAZW4gIDsKICByZGZzOmlzRGVmaW5lZEJ5IDxodHRwOi8vd3d3LmVwb3MtZXUub3JnL2Vwb3MtZGNhdC1hcD4gOwogIHJkZnM6bGFiZWwgIkZhY2lsaXR5IkBlbiAgOwogIHJkZnM6c3ViQ2xhc3NPZiByZGZzOlJlc291cmNlIDsKLgplcG9zOlB1YmxpY2F0aW9uCiAgYSBvd2w6Q2xhc3MgOwogIHJkZnM6Y29tbWVudCAiRVBPUyBzcGVjaWFsaXNhdGlvbiBvZiBzY2hlbWE6Q3JlYXRpdmVXb3JrIkBlbiAgOwogIHJkZnM6aXNEZWZpbmVkQnkgPGh0dHA6Ly93d3cuZXBvcy1ldS5vcmcvZXBvcy1kY2F0LWFwPiA7CiAgcmRmczpsYWJlbCAiUHVibGljYXRpb24iQGVuICA7CiAgcmRmczpzdWJDbGFzc09mIHNjaGVtYTpDcmVhdGl2ZVdvcmsgOwouCmVwb3M6V2ViU2VydmljZQogIGEgb3dsOkNsYXNzIDsKICByZGZzOmNvbW1lbnQgIkEgc2VydmljZSBhY2Nlc3NpYmxlIHZpYSBhIFdlYiBBUEkgIkBlbiAgOwogIHJkZnM6c3ViQ2xhc3NPZiBzY2hlbWE6U2VydmljZTsKICByZGZzOnN1YkNsYXNzT2YgcmRmczpSZXNvdXJjZSA7CiAgcmRmczpsYWJlbCAiV2ViU2VydmljZSJAZW4gIDsKICByZGZzOmlzRGVmaW5lZEJ5IDxodHRwOi8vd3d3LmVwb3MtZXUub3JnL2Vwb3MtZGNhdC1hcD4gOwouCiMjQWxpZ25tZW50IHNjaGVtYTpPcmdhbml6YXRpb24gYW5kIGZvYWY6T3JnYW5pemF0aW9uIyMKc2NoZW1hOk9yZ2FuaXphdGlvbiBhIG93bDpDbGFzczsKICBvd2w6ZXF1aXZhbGVudENsYXNzIGZvYWY6T3JnYW5pemF0aW9uOwogIHJkZnM6bGFiZWwgIk9yZ2FuaXphdGlvbiJAZW47Ci4KIyNBbGlnbm1lbnQgc2NoZW1hOlBlcnNvbiBhbmQgZm9hZjpQZXJzb24jIwpzY2hlbWE6UGVyc29uIGEgb3dsOkNsYXNzOwogIG93bDplcXVpdmFsZW50Q2xhc3MgZm9hZjpQZXJzb247CiAgcmRmczpsYWJlbCAiUGVyc29uIkBlbjsKLgojI0FsaWdubWVudCBzY2hlbWE6Q29udGFjdFBvaW50IGFuZCB2Y2FyZDpLaW5kIyMKc2NoZW1hOkNvbnRhY3RQb2ludCBhIG93bDpDbGFzczsKICAgIG93bDplcXVpdmFsZW50Q2xhc3MgdmNhcmQ6S2luZDsKICAgIHJkZnM6bGFiZWwgIkNvbnRhY3RQb2ludCJAZW47Ci4KIyMjIwojIFByb3BlcnRpZXMKIyMjIwplcG9zOnJlc291cmNlCiAgcmRmOnR5cGUgb3dsOk9iamVjdFByb3BlcnR5IDsKICByZGZzOmRvbWFpbiBkY2F0OkNhdGFsb2cgOwogIHJkZnM6cmFuZ2UgcmRmczpSZXNvdXJjZTsKLgojI0FsaWdubWVudCBkY2F0OmNvbnRhY3RQb2ludCBhbmQgc2NoZW1hOmNvbnRhY3RQb2ludCMjCmRjYXQ6Y29udGFjdFBvaW50IG93bDplcXVpdmFsZW50UHJvcGVydHkgc2NoZW1hOmNvbnRhY3RQb2ludCAuCiMjQWxpZ25tZW50IGRjYXQ6a2V5d29yZCBhbmQgc2NoZW1hOmtleXdvcmRzIyMKZGNhdDprZXl3b3JkIG93bDplcXVpdmFsZW50UHJvcGVydHkgc2NoZW1hOmtleXdvcmRzIC4KIyNFeHRlbmRpbmcgcmFuZ2UgYW5kIGRvbWFpbiBvZiBkY2F0OmNvbnRhY3RQb2ludCMjCmRjYXQ6Y29udGFjdFBvaW50CiAgcmRmOnR5cGUgb3dsOk9iamVjdFByb3BlcnR5IDsKICByZGZzOmRvbWFpbiBbIHJkZjp0eXBlIG93bDpDbGFzcyA7CiAgb3dsOnVuaW9uT2YgKGRjYXQ6RGF0YXNldCBzY2hlbWE6T3JnYW5pemF0aW9uIHNjaGVtYTpQZXJzb24gZXBvczpFcXVpcG1lbnQgc2NoZW1hOlNvZnR3YXJlQXBwbGljYXRpb24gc2NoZW1hOlNvZnR3YXJlU291cmNlQ29kZSBlcG9zOldlYlNlcnZpY2UgZm9hZjpQcm9qZWN0IGVwb3M6RmFjaWxpdHkpXTsKICByZGZzOnJhbmdlIFsgcmRmOnR5cGUgb3dsOkNsYXNzIDsKICBvd2w6dW5pb25PZiAodmNhcmQ6S2luZCBzY2hlbWE6Q29udGFjdFBvaW50KV07Ci4KZXBvczphc3NvY2lhdGVkUHJvamVjdAogIHJkZjp0eXBlIG93bDpPYmplY3RQcm9wZXJ0eTsKICByZGZzOmRvbWFpbiBzY2hlbWE6T3JnYW5pemF0aW9uIDsKICByZGZzOnJhbmdlIGZvYWY6UHJvamVjdCA7Ci4KZXBvczphbm5vdGF0aW9uCiAgcmRmOnR5cGUgb3dsOk9iamVjdFByb3BlcnR5IDsKICByZGZzOmRvbWFpbiBbcmRmOnR5cGUgb3dsOkNsYXNzIDsKICBvd2w6dW5pb25PZiAocmRmczpSZXNvdXJjZSBmb2FmOkFnZW50IGRjYXQ6RGlzdHJpYnV0aW9uKV0gOwogIHJkZnM6cmFuZ2Ugb2E6QW5ub3RhdGlvbiA7Ci4KIyNFeHRlbmRpbmcgdGhlIGRvbWFpbiBvZiBkY2F0OnRoZW1lIyMKZGNhdDp0aGVtZQogIHJkZjp0eXBlIG93bDpPYmplY3RQcm9wZXJ0eSA7CiAgcmRmczpjb21tZW50ICJUaGUgbWFpbiBjYXRlZ29yeS9kb21haW4gb2YgdGhlIHJlZmVycmVkIHJlc291cmNlLiJAZW4gIDsKICByZGZzOmRvbWFpbiBbcmRmOnR5cGUgb3dsOkNsYXNzIDsKICBvd2w6dW5pb25PZiAocmRmczpSZXNvdXJjZSBkY2F0OkRhdGFzZXQpXSA7CiAgcmRmczpyYW5nZSBza29zOkNvbmNlcHQgOwouCmVwb3M6ZHluYW1pY1JhbmdlCiAgcmRmOnR5cGUgb3dsOk9iamVjdFByb3BlcnR5IDsKICByZGZzOmNvbW1lbnQgIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGZ1bGwgc2NhbGUgbWVhc3VyaW5nIGFiaWxpdHksIGluIG5UICh1bml0IGFuZCB2YWx1ZSkiQGVuICA7CiAgcmRmczpkb21haW4gZXBvczpFcXVpcG1lbnQgOwogIHJkZnM6cmFuZ2Ugc2NoZW1hOlF1YW50aXRhdGl2ZVZhbHVlIDsKLgplcG9zOmZpbHRlcgogIHJkZjp0eXBlIG93bDpPYmplY3RQcm9wZXJ0eSA7CiAgcmRmczpjb21tZW50ICJUaGlzIHByb3BlcnR5IGRlc2NyaWJlcyB0aGUgZmlsdGVyIHRoYXQgYW4gaW5zdHJ1bWVudCBtaWdodCBhcHBseSB0byBwcm9kdWNlIGRhdGEiQGVuICA7CiAgcmRmczpkb21haW4gZXBvczpFcXVpcG1lbnQgOwogIHJkZnM6cmFuZ2UgcmRmczpMaXRlcmFsIDsKLgplcG9zOnNhbXBsZVBlcmlvZAogIHJkZjp0eXBlIG93bDpPYmplY3RQcm9wZXJ0eSA7CiAgcmRmczpjb21tZW50ICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBzYW1wbGUgcGVyaW9kIGluIG1zIkBlbiAgOwogIHJkZnM6ZG9tYWluIGVwb3M6RXF1aXBtZW50IDsKICByZGZzOnJhbmdlIHNjaGVtYTpRdWFudGl0YXRpdmVWYWx1ZSA7Ci4KZXBvczpvcmllbnRhdGlvbgogIHJkZjp0eXBlIG93bDpPYmplY3RQcm9wZXJ0eSA7CiAgcmRmczpjb21tZW50ICJUaGlzIHByb3BlcnR5IGRlc2NyaWJlcyBob3cgdGhlIGluc3RydW1lbnQgaXMgb3JpZW50ZWQuIkBlbiAgOwogIHJkZnM6ZG9tYWluIGVwb3M6RXF1aXBtZW50IDsKICByZGZzOnJhbmdlIHJkZnM6TGl0ZXJhbCA7Ci4KIyNTcGF0aWFsIHByb3BlcnRpZXMjIwplcG9zOm5vcnRoZXJubW9zdExhdGl0dWRlCiAgcmRmOnR5cGUgb3dsOkRhdGF0eXBlUHJvcGVydHkgOwogIHJkZnM6c3ViUHJvcGVydHlPZiBnZW86bGF0OwogIHJkZnM6Y29tbWVudCAiVGhlIFdHUzg0IHVwcGVyIGJvdW5kIChtYXgpIGxhdGl0dWRlIG9mIGEgU3BhdGlhbFRoaW5nIChkZWNpbWFsIGRlZ3JlZXMpIgouCmVwb3M6c291dGhlcm5tb3N0TGF0aXR1ZGUKICByZGY6dHlwZSBvd2w6RGF0YXR5cGVQcm9wZXJ0eSA7CiAgcmRmczpzdWJQcm9wZXJ0eU9mIGdlbzpsYXQ7CiAgcmRmczpjb21tZW50ICJUaGUgV0dTODQgbG93ZXIgYm91bmQgKG1pbikgbGF0aXR1ZGUgb2YgYSBTcGF0aWFsVGhpbmcgKGRlY2ltYWwgZGVncmVlcykiCi4KZXBvczp3ZXN0ZXJubW9zdExvbmdpdHVkZQogIHJkZjp0eXBlIG93bDpEYXRhdHlwZVByb3BlcnR5IDsKICByZGZzOnN1YlByb3BlcnR5T2YgZ2VvOmxvbmc7CiAgcmRmczpjb21tZW50ICJUaGUgV0dTODQgbG93ZXIgYm91bmQgKG1pbikgbG9uZ2l0dWRlIG9mIGEgU3BhdGlhbFRoaW5nIChkZWNpbWFsIGRlZ3JlZXMpIgouCmVwb3M6ZWFzdGVybm1vc3RMb25naXR1ZGUKICByZGY6dHlwZSBvd2w6RGF0YXR5cGVQcm9wZXJ0eSA7CiAgcmRmczpzdWJQcm9wZXJ0eU9mIGdlbzpsb25nOwogIHJkZnM6Y29tbWVudCAiVGhlIFdHUzg0IHVwcGVyIGJvdW5kIChtYXgpIGxvbmdpdHVkZSBvZiBhIFNwYXRpYWxUaGluZyAoZGVjaW1hbCBkZWdyZWVzKSIKLgojI0V4dGVuZGluZyB0aGUgcmFuZ2Ugb2Ygc2NoZW1hOm93bnMjIwpzY2hlbWE6b3ducwogcmRmOnR5cGUgb3dsOk9iamVjdFByb3BlcnR5IDsKICByZGZzOmRvbWFpbiBbcmRmOnR5cGUgb3dsOkNsYXNzIDsKICBvd2w6dW5pb25PZiAoc2NoZW1hOlBlcnNvbiBzY2hlbWE6T3JnYW5pemF0aW9uKV07CiAgcmRmczpyYW5nZSBbcmRmOnR5cGUgb3dsOkNsYXNzIDsKICBvd2w6dW5pb25PZiAoc2NoZW1hOk93bmVyc2hpcEluZm8gc2NoZW1hOlByb2R1Y3QgZXBvczpGYWNpbGl0eSldOwouCmVwb3M6cmVzb2x1dGlvbgogIHJkZjp0eXBlIG93bDpPYmplY3RQcm9wZXJ0eSA7CiAgcmRmczpjb21tZW50ICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSByZXNvbHV0aW9uIGluIG5UIkBlbiAgOwogIHJkZnM6ZG9tYWluIGVwb3M6RXF1aXBtZW50IDsKICByZGZzOnJhbmdlIHJkZnM6TGl0ZXJhbCA7Ci4KIyMjIwojIFNIQUNMIFNoYXBlcyBHcmFwaHMKIyMjIwplcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6ZGVzY3JpcHRpb24gIkl0IGNoZWNrcyB0aGF0IGEgZGF0YXR5cGUgcHJvcGVydHkgcmVjZWl2ZXMgYSBkYXRlIG9yIGEgZGF0ZVRpbWUgbGl0ZXJhbCJAZW4gIDsKICBzaDptZXNzYWdlICJUaGUgdmFsdWVzIG11c3QgYmUgZGF0YSB0eXBlZCBhcyBlaXRoZXIgeHNkOmRhdGUgb3IgeHNkOmRhdGVUaW1lIkBlbiAgOwogIHNoOm9yICggWyBzaDpkYXRhdHlwZSB4c2Q6ZGF0ZSA7IF0KICAgICAgICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmRhdGVUaW1lIDsgXSApIDsKLgplcG9zOkNvbnRhY3RQb2ludFR5cGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6ZGVzY3JpcHRpb24gIkEgdmNhcmQ6S2luZCBvciBzY2hlbWE6Q29udGFjdFBvaW50IkBlbiAgOwogIHNoOm1lc3NhZ2UgIlRoZSB2YWx1ZXMgbXVzdCBiZSBkYXRhIGVpdGhlciB2Y2FyZDpLaW5kIG9yIHNjaGVtYTpDb250YWN0UG9pbnQiQGVuICA7CiAgc2g6b3IgKCBbc2g6Y2xhc3MgdmNhcmQ6S2luZCA7IF0KICAgICAgWyBzaDpjbGFzcyBzY2hlbWE6Q29udGFjdFBvaW50IDsgXSkgOwouCmVwb3M6Q2F0YWxvZ1NoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIGRjYXQ6Q2F0YWxvZyA7CiMjIyMKIyBDYXRhbG9nIG1hbmRhdG9yeSBwcm9wZXJ0aWVzCiMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnRpdGxlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBuYW1lIGdpdmVuIHRvIHRoZSBDYXRhbG9ndWUuIFRoaXMgcHJvcGVydHkgY2FuIGJlIHJlcGVhdGVkIGZvciBwYXJhbGxlbCBsYW5ndWFnZSB2ZXJzaW9ucyBvZiB0aGUgbmFtZS4iIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmRlc2NyaXB0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBmcmVlLXRleHQgYWNjb3VudCBvZiB0aGUgQ2F0YWxvZ3VlLiBUaGlzIHByb3BlcnR5IGNhbiBiZSByZXBlYXRlZCBmb3IgcGFyYWxsZWwgbGFuZ3VhZ2UgdmVyc2lvbnMgb2YgdGhlIGRlc2NyaXB0aW9uLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpwdWJsaXNoZXIgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYW4gZW50aXR5IChvcmdhbmlzYXRpb24pIHJlc3BvbnNpYmxlIGZvciBtYWtpbmcgdGhlIENhdGFsb2d1ZSBhdmFpbGFibGUuIjsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgICBzaDpvciAoCiAgICAgICAgW3NoOmNsYXNzIGZvYWY6QWdlbnQgOyBdCiAgICAgICAgW3NoOmNsYXNzIHNjaGVtYTpPcmdhbml6YXRpb24gOyBdKSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDpkYXRhc2V0IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgbGlua3MgdGhlIENhdGFsb2d1ZSB3aXRoIGEgRGF0YXNldCB0aGF0IGlzIHBhcnQgb2YgdGhlIENhdGFsb2d1ZS4iOwogICAgICBzaDpjbGFzcyBkY2F0OkRhdGFzZXQgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgIF0gOwojIyMjCiMgQ2F0YWxvZyByZWNvbW1lbmRlZCBwcm9wZXJ0aWVzCiMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0Omlzc3VlZCA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJSZWxlYXNlIGRhdGUgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOm5vZGUgZXBvczpEYXRlT3JEYXRlVGltZURhdGFUeXBlIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0Omlzc3VlZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBkYXRlIG9mIGZvcm1hbCBpc3N1YW5jZSAoZS5nLiwgcHVibGljYXRpb24pIG9mIHRoZSBDYXRhbG9ndWUuIjsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOm5vZGUgZXBvczpEYXRlT3JEYXRlVGltZURhdGFUeXBlIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6bW9kaWZpZWQgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiVXBkYXRlL21vZGlmaWNhdGlvbiBkYXRlIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDptb2RpZmllZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtb3N0IHJlY2VudCBkYXRlIG9uIHdoaWNoIHRoZSBDYXRhbG9ndWUgd2FzIG1vZGlmaWVkLiI7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDp0aGVtZVRheG9ub215IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEga25vd2xlZGdlIG9yZ2FuaXphdGlvbiBzeXN0ZW0gdXNlZCB0byBjbGFzc2lmeSB0aGUgQ2F0YWxvZ3VlJ3MgRGF0YXNldHMuIjsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIlRoZW1lIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBmb2FmOmhvbWVwYWdlIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOmNsYXNzIGZvYWY6RG9jdW1lbnQgOwogICAgICBzaDptZXNzYWdlICJIb21lcGFnZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZm9hZjpob21lcGFnZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHdlYiBwYWdlIHRoYXQgYWN0cyBhcyB0aGUgbWFpbiBwYWdlIGZvciB0aGUgQ2F0YWxvZ3VlLiI7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgICBzaDpjbGFzcyBmb2FmOkRvY3VtZW50IDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6bGljZW5zZSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpjbGFzcyBkY3Q6TGljZW5zZURvY3VtZW50IDsKICAgICAgc2g6bWVzc2FnZSAiTGljZW5zZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmxpY2Vuc2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIGxpY2VuY2UgdW5kZXIgd2hpY2ggdGhlIENhdGFsb2d1ZSBjYW4gYmUgdXNlZCBvciByZXVzZWQuIjsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOmNsYXNzIGRjdDpMaWNlbnNlRG9jdW1lbnQgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpsYW5ndWFnZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGxhbmd1YWdlIHVzZWQgaW4gdGhlIHRleHR1YWwgbWV0YWRhdGEgZGVzY3JpYmluZyB0aXRsZXMsIGRlc2NyaXB0aW9ucywgZXRjLiBvZiB0aGUgRGF0YXNldHMgaW4gdGhlIENhdGFsb2d1ZS4gVGhpcyBwcm9wZXJ0eSBjYW4gYmUgcmVwZWF0ZWQgaWYgdGhlIG1ldGFkYXRhIGlzIHByb3ZpZGVkIGluIG11bHRpcGxlIGxhbmd1YWdlcy4iOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6Y2xhc3MgZGN0Okxpbmd1aXN0aWNTeXN0ZW0gOwogICAgICBzaDptZXNzYWdlICJMYW5ndWFnZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKIyMjIwojIENhdGFsb2cgb3B0aW9uYWwgcHJvcGVydGllcwojIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpoYXNQYXJ0IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgcmVsYXRlZCBDYXRhbG9ndWUgdGhhdCBpcyBwYXJ0IG9mIHRoZSBkZXNjcmliZWQgQ2F0YWxvZ3VlIjsKICAgICAgc2g6Y2xhc3MgZGNhdDpDYXRhbG9nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6aXNQYXJ0T2YgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSByZWxhdGVkIENhdGFsb2d1ZSBpbiB3aGljaCB0aGUgZGVzY3JpYmVkIENhdGFsb2d1ZSBpcyBwaHlzaWNhbGx5IG9yIGxvZ2ljYWxseSBpbmNsdWRlZC4iOwkgICAgICAKICAgICAgc2g6Y2xhc3MgZGNhdDpDYXRhbG9nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnJpZ2h0cyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHN0YXRlbWVudCB0aGF0IHNwZWNpZmllcyByaWdodHMgYXNzb2NpYXRlZCB3aXRoIHRoZSBDYXRhbG9ndWUuIjsJICAgICAgCiAgICAgIHNoOmNsYXNzIGRjdDpSaWdodHNTdGF0ZW1lbnQgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6c3BhdGlhbCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGdlb2dyYXBoaWNhbCBhcmVhIGNvdmVyZWQgYnkgdGhlIENhdGFsb2d1ZS4iOwkgICAgICAKICAgICAgc2g6Y2xhc3MgZGN0OkxvY2F0aW9uIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OnJlY29yZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIENhdGFsb2d1ZSBSZWNvcmQgdGhhdCBpcyBwYXJ0IG9mIHRoZSBDYXRhbG9ndWUiOyAgICAgIAogICAgICBzaDpjbGFzcyBkY2F0OkNhdGFsb2dSZWNvcmQgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGVwb3M6cmVzb3VyY2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBsaW5rcyB0aGUgQ2F0YWxvZ3VlIHdpdGggYSBSZXNvdXJjZS4iOwkgICAgICAKICAgICAgc2g6Y2xhc3MgcmRmczpSZXNvdXJjZSA7CiAgICBdIDsKLgplcG9zOkNhdGFsb2dSZWNvcmRTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBkY2F0OkNhdGFsb2dSZWNvcmQ7CiMjIyMKIyBDYXRhbG9nUmVjb3JkIG1hbmRhdG9yeSBwcm9wZXJ0aWVzCiMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZm9hZjpwcmltYXJ5VG9waWMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBsaW5rcyB0aGUgQ2F0YWxvZ3VlIFJlY29yZCB0byB0aGUgRGF0YXNldCBkZXNjcmliZWQgaW4gdGhlIHJlY29yZC4iOwkgICAgICAKICAgICAgc2g6Y2xhc3MgZGNhdDpEYXRhc2V0IDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDptb2RpZmllZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtb3N0IHJlY2VudCBkYXRlIG9uIHdoaWNoIHRoZSBDYXRhbG9nIFJlY29yZCB3YXMgbW9kaWZpZWQuIjsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICBdIDsKIyMjIwojIENhdGFsb2dSZWNvcmQgcmVjb21tZW5kZWQgcHJvcGVydGllcwojIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDppZGVudGlmaWVyIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm9yICggW3NoOmRhdGF0eXBlIHhzZDpzdHJpbmc7XQogICAgICAgIFtzaDpkYXRhdHlwZSB4c2Q6YW55VVJJOyBdICk7CiAgICAgIHNoOm1lc3NhZ2UgIklkZW50aWZpZXIgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDppZGVudGlmaWVyOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbWFpbiBpZGVudGlmaWVyIGZvciB0aGUgQ2F0YWxvZyBSZWNvcmQuIjsgICAJICAgICAgCiAgICAgIHNoOm9yICggW3NoOmRhdGF0eXBlIHhzZDpzdHJpbmc7IF0KICAgICAgICBbc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsgXSApOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6Y29uZm9ybXNUbyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhbiBBcHBsaWNhdGlvbiBQcm9maWxlIHRoYXQgdGhlIERhdGFzZXTigJlzIG1ldGFkYXRhIGNvbmZvcm1zIHRvIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmNvbmZvcm1zVG8gOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiQ29uZm9ybXNUbyBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggYWRtczpzdGF0dXMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIHR5cGUgb2YgdGhlIGxhdGVzdCByZXZpc2lvbiBvZiBhIERhdGFzZXQncyBlbnRyeSBpbiB0aGUgQ2F0YWxvZ3VlLiBJdCBNVVNUIHRha2Ugb25lIG9mIHRoZSB2YWx1ZXMgOmNyZWF0ZWQsIDp1cGRhdGVkIG9yIDpkZWxldGVkIGRlcGVuZGluZyBvbiB3aGV0aGVyIHRoaXMgbGF0ZXN0IHJldmlzaW9uIGlzIGEgcmVzdWx0IG9mIGEgY3JlYXRpb24sIHVwZGF0ZSBvciBkZWxldGlvbi4iOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBhZG1zOnN0YXR1cyA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJOwogICAgICBzaDptZXNzYWdlICJTdGF0dXMgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDppc3N1ZWQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgZGF0ZSBvbiB3aGljaCB0aGUgZGVzY3JpcHRpb24gb2YgdGhlIERhdGFzZXQgd2FzIGluY2x1ZGVkIGluIHRoZSBDYXRhbG9ndWUuIjsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOm5vZGUgZXBvczpEYXRlT3JEYXRlVGltZURhdGFUeXBlIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6aXNzdWVkIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm5vZGUgZXBvczpEYXRlT3JEYXRlVGltZURhdGFUeXBlIDsKICAgICAgc2g6bWVzc2FnZSAiSXNzdWVkIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwojIyMjCiMgQ2F0YWxvZ1JlY29yZCBvcHRpb25hbCBwcm9wZXJ0aWVzCiMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0Omxhbmd1YWdlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgbGFuZ3VhZ2UgdXNlZCBpbiB0aGUgdGV4dHVhbCBtZXRhZGF0YSBkZXNjcmliaW5nIHRpdGxlcywgZGVzY3JpcHRpb25zLCBldGMuIG9mIHRoZSBEYXRhc2V0LiBUaGlzIHByb3BlcnR5IGNhbiBiZSByZXBlYXRlZCBpZiB0aGUgbWV0YWRhdGEgaXMgcHJvdmlkZWQgaW4gbXVsdGlwbGUgbGFuZ3VhZ2VzLiI7CiAgICAgIHNoOmNsYXNzIGRjdDpMaW5ndWlzdGljU3lzdGVtIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6c291cmNlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBvcmlnaW5hbCBtZXRhZGF0YSB0aGF0IHdhcyB1c2VkIGluIGNyZWF0aW5nIG1ldGFkYXRhIGZvciB0aGUgRGF0YXNldCI7CiAgICAgIHNoOmNsYXNzIGRjYXQ6Q2F0YWxvZ1JlY29yZCA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDp0aXRsZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgbmFtZSBnaXZlbiB0byB0aGUgQ2F0YWxvZ3VlIFJlY29yZC4gVGhpcyBwcm9wZXJ0eSBjYW4gYmUgcmVwZWF0ZWQgZm9yIHBhcmFsbGVsIGxhbmd1YWdlIHZlcnNpb25zIG9mIHRoZSBuYW1lLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmRlc2NyaXB0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBmcmVlLXRleHQgYWNjb3VudCBvZiB0aGUgcmVjb3JkLiBUaGlzIHByb3BlcnR5IGNhbiBiZSByZXBlYXRlZCBmb3IgcGFyYWxsZWwgbGFuZ3VhZ2UgdmVyc2lvbnMgb2YgdGhlIGRlc2NyaXB0aW9uLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICBdIDsKLgplcG9zOlBlcnNvblNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIHNjaGVtYTpQZXJzb247CiMjIyMKIyBQZXJzb24gbWFuZGF0b3J5IHByb3BlcnRpZXMKIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6aWRlbnRpZmllciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtYWluIGlkZW50aWZpZXIgZm9yIHRoZSBQZXJzb24gKGUuZy4sT1JDSUQsIFNjb3B1c0lELCBldGMuKS4iOwogICAgICBzaDpvciAoW3NoOmRhdGF0eXBlIHhzZDpzdHJpbmc7XQogICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsgXQogICAgICAgIFtzaDpjbGFzcyBzY2hlbWE6UHJvcGVydHlWYWx1ZTtdKSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7CiMjIyMKIyBQZXJzb24gb3B0aW9uYWwgcHJvcGVydGllcwojIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpnaXZlbk5hbWUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgZmlyc3QgbmFtZSBvZiB0aGUgUGVyc29uLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpmYW1pbHlOYW1lIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGxhc3QgbmFtZSBvZiB0aGUgUGVyc29uLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpjb250YWN0UG9pbnQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIENvbnRhY3QgUG9pbnQgcm9sZSBkZWZpbmVkIGZvciB0aGUgUGVyc29uLiI7CiAgICAgIHNoOm5vZGUgZXBvczpDb250YWN0UG9pbnRUeXBlIDsKICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmFkZHJlc3MgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgcGh5c2ljYWwgYWRkcmVzcyBvZiB0aGUgUGVyc29uLiI7CiAgICAgIHNoOm9yIChbc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7XQogICAgICAgIFtzaDpjbGFzcyBzY2hlbWE6UG9zdGFsQWRkcmVzczsgXSApIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmVtYWlsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGVtYWlsIGFkZHJlc3Mgb2YgdGhlIFBlcnNvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpxdWFsaWZpY2F0aW9ucyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBzcGVjaWZpYyBxdWFsaWZpY2F0aW9ucyBvZiB0aGUgUGVyc29uLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTp0ZWxlcGhvbmUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgdGVsZXBob25lIG51bWJlciBvZiB0aGUgUGVyc29uLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnVybCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgVVJMIG9mIHRoZSBQZXJzb24gY3VycmljdWx1bSB2aXRhZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6YWZmaWxpYXRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIG9yZ2FuaXphdGlvbiB0byB3aGljaCB0aGUgcGVyc29uIGlzIGFmZmlsaWF0ZWQuIjsKICAgICAgc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbjsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBlcG9zOmFubm90YXRpb24gOwogICAgICBzaDpjbGFzcyBvYTpBbm5vdGF0aW9uOwogICAgXSA7Ci4KZXBvczpPcmdhbml6YXRpb25TaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uOwojIyMjCiMgT3JnYW5pemF0aW9uIG1hbmRhdG9yeSBwcm9wZXJ0aWVzCiMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmlkZW50aWZpZXIgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbWFpbiBpZGVudGlmaWVyIGZvciB0aGUgT3JnYW5pemF0aW9uIChlLmcuLFBJQywgSVNOSSwgZXRjLikuIjsKICAgICAgc2g6b3IgKFtzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOyBdCiAgICAgICAgW3NoOmRhdGF0eXBlIHhzZDphbnlVUkk7IF0KICAgICAgICBbc2g6Y2xhc3Mgc2NoZW1hOlByb3BlcnR5VmFsdWU7IF0gKSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7CiMjIyMKIyBPcmdhbml6YXRpb24gcmVjb21tZW5kZWQgcHJvcGVydGllcwojIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpsZWdhbE5hbWU7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBvZmZpY2lhbCBuYW1lIG9mIHRoZSBPcmdhbml6YXRpb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmxlZ2FsTmFtZTsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG9mZmljaWFsIG5hbWUgb2YgdGhlIE9yZ2FuaXphdGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiTGVnYWxOYW1lIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpsZWlDb2RlOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgT3JnYW5pemF0aW9uIGlkZW50aWZpZXIgdGhhdCB1bmlxdWVseSBpZGVudGlmaWVzIGEgbGVnYWwgZW50aXR5IGFzIGRlZmluZWQgaW4gSVNPIDE3NDQyLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpsZWlDb2RlOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiTGVpQ29kZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwojIyMjCiMgT3JnYW5pemF0aW9uIG9wdGlvbmFsIHByb3BlcnRpZXMKIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBlcG9zOmFubm90YXRpb24gOwogICAgICBzaDpjbGFzcyBvYTpBbm5vdGF0aW9uOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTphZGRyZXNzOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgcGh5c2ljYWwgYWRkcmVzcyBvZiB0aGUgT3JnYW5pemF0aW9uLiI7CiAgICAgIHNoOm9yICggW3NoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOyBdCiAgICAgICAgWyBzaDpjbGFzcyBzY2hlbWE6UG9zdGFsQWRkcmVzczsgXSApIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmxvZ28gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgVVJMIG9mIHRoZSBPcmdhbml6YXRpb24gbG9nby4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6dXJsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIFVSTCBvZiB0aGUgT3JnYW5pemF0aW9uIHdlYnNpdGUuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmVtYWlsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGVtYWlsIGFkZHJlc3Mgb2YgdGhlIE9yZ2FuaXphdGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTp0ZWxlcGhvbmUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgdGVsZXBob25lIG51bWJlciBvZiB0aGUgT3JnYW5pemF0aW9uLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmNvbnRhY3RQb2ludCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgQ29udGFjdCBQb2ludCBkZWZpbmVkIGZvciB0aGUgT3JnYW5pemF0aW9uLiI7CiAgICAgIHNoOm5vZGUgZXBvczpDb250YWN0UG9pbnRUeXBlIDsKICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm1lbWJlck9mOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYW4gT3JnYW5pemF0aW9uIHRvIHdoaWNoIHRoaXMgT3JnYW5pemF0aW9uIGJlbG9uZ3MuIjsKICAgICAgc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbjsKICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpvd25zOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBGYWNpbGl0eSBvciBFcXVpcG1lbnQgb2Ygd2hpY2ggaXQgaXMgdGhlIG93bmVyLiI7CiAgICAgIHNoOm9yICggW3NoOmNsYXNzIGVwb3M6RmFjaWxpdHk7IF0KICAgICAgICBbc2g6Y2xhc3MgZXBvczpFcXVpcG1lbnQ7IF0pOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGVwb3M6YXNzb2NpYXRlZFByb2plY3Q7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIFByb2plY3QgaW4gd2hpY2ggdGhlIE9yZ2FuaXphdGlvbiBpcyBpbnZvbHZlZC4iOwogICAgICBzaDpjbGFzcyBmb2FmOlByb2plY3Q7CiAgICBdOwouCgplcG9zOkNvbnRhY3RQb2ludFNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIHNjaGVtYTpDb250YWN0UG9pbnQ7CiMjIyMKIyBDb250YWN0UG9pbnQgcmVjb21tZW5kZWQgcHJvcGVydGllcwojIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmNvbnRhY3RUeXBlIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgImNvbnRhY3RUeXBlIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIChlLmcuIGxlZ2FsQ29udGFjdCwgZmluYW5jaWFsQ29udGFjdCwgc2NpZW50aWZpY0NvbnRhY3QsIG1hbmFnZXIpIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgICAgI3NoOmluICggImxlZ2FsQ29udGFjdCIgImZpbmFuY2lhbENvbnRhY3QiICJzY2llbnRpZmljQ29udGFjdCIgIm1hbmFnZXIiICk7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmNvbnRhY3RUeXBlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHJvbGUgb2YgdGhlIENvbnRhY3QgUG9pbnQuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKIyMjIwojIENvbnRhY3RQb2ludCBvcHRpb25hbCBwcm9wZXJ0aWVzCiMjIyMKIAogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6ZW1haWwgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgZW1haWwgYWRkcmVzcyBvZiB0aGUgQ29udGFjdCBQb2ludC4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTphdmFpbGFibGVMYW5ndWFnZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGluZm9ybWF0aW9uIGFib3V0IHRoZSBsYW5ndWFnZSB1c2VkIGJ5IHRoZSBDb250YWN0IFBvaW50LiBQbGVhc2UgdXNlIG9uZSBvZiB0aGUgbGFuZ3VhZ2UgY29kZXMgZnJvbSB0aGUgSUVURiBCQ1AgNDcgc3RhbmRhcmQuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6dGVsZXBob25lIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIHRlbGVwaG9uZSBudW1iZXIgb2YgdGhlIENvbnRhY3QgUG9pbnQuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgIF0gOwouCmVwb3M6V2ViU2VydmljZVNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIGVwb3M6V2ViU2VydmljZTsKIyMjIwojIFdlYlNlcnZpY2UgbWFuZGF0b3J5IHByb3BlcnRpZXMKIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6aWRlbnRpZmllciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtYWluIGlkZW50aWZpZXIgZm9yIHRoZSBXZWIgU2VydmljZS4iOwogICAgICBzaDpvciAoIFtzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOyBdCiAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsgXQogICAgICBbIHNoOmNsYXNzIHNjaGVtYTpQcm9wZXJ0eVZhbHVlOyBdICkgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgIF0gOwojIyMjCiMgV2ViU2VydmljZSByZWNvbW1lbmRlZCBwcm9wZXJ0aWVzCiMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmRlc2NyaXB0aW9uIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIkRlc2NyaXB0aW9uIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6ZGVzY3JpcHRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIGZyZWUtdGV4dCBkZXNjcmlwdGlvbiBvZiB0aGUgV2ViIFNlcnZpY2UuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgc2g6cGF0aCBkY2F0OnRoZW1lOwogICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGNhdGVnb3J5IG9mIHRoZSBXZWIgU2VydmljZS4gQSBXZWIgU2VydmljZSBtYXkgYmUgYXNzb2NpYXRlZCB3aXRoIG11bHRpcGxlIHRoZW1lcy4iOwogICAgIHNoOm9yICggWyBzaDpjbGFzcyBza29zOkNvbmNlcHQgOyBdCiAgICAgICAgWyBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsgXSApOwogICAgIHNoOm1pbkNvdW50IDEgOwogICAgIHNoOm1lc3NhZ2UgIlRoZW1lIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpuYW1lIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBuYW1lIGdpdmVuIHRvIHRoZSBXZWIgU2VydmljZS4iOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgIF0gOwogc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpuYW1lIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1lc3NhZ2UgIk5hbWUgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGh5ZHJhOmVudHJ5cG9pbnQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIEFQSSBkZWZpbml0aW9ucyAoZS5nLiwgV1NETCwgV0FETCkiOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBoeWRyYTplbnRyeXBvaW50IDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDphbnlVUkk7CiAgICAgIHNoOm1lc3NhZ2UgIkVudHJ5cG9pbnQgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDpjb250YWN0UG9pbnQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBjb250YWN0IGluZm9ybWF0aW9uIHRoYXQgY2FuIGJlIHVzZWQgZm9yIHNlbmRpbmcgY29tbWVudHMgYWJvdXQgdGhlIFdlYiBTZXJ2aWNlLiI7CiAgICAgIHNoOm5vZGUgZXBvczpDb250YWN0UG9pbnRUeXBlIDsKICAgICAgc2g6bWluQ291bnQgMTsKICAgICAgc2g6bWVzc2FnZSAiQ29udGFjdCBQb2ludCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICAKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnByb3ZpZGVyOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYW4gT3JnYW5pc2F0aW9uIHJlc3BvbnNpYmxlIGZvciBtYWtpbmcgdGhlIFdlYiBTZXJ2aWNlIGF2YWlsYWJsZS4iOwogICAgICBzaDpvciAoIFtzaDpjbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uIDsgXQogICAgICAgIFsgc2g6Y2xhc3Mgc2NoZW1hOlBlcnNvbiA7IF0gKTsKICAgICAgc2g6bWF4Q291bnQgMTsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6cHJvdmlkZXI7CiAgICAgIHNoOm9yICggWyBzaDpjbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uIDsgXQogICAgICAgIFsgc2g6Y2xhc3Mgc2NoZW1hOlBlcnNvbiA7IF0gKTsKICAgICAgc2g6bWluQ291bnQgMTsKICAgICAgc2g6bWVzc2FnZSAiUHJvdmlkZXIgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpkYXRlUHVibGlzaGVkOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bm9kZSBlcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUgOwogICAgICBzaDptZXNzYWdlICJkYXRlUHVibGlzaGVkIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6ZGF0ZVB1Ymxpc2hlZDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGRhdGUgb2YgcHVibGljYXRpb24gb2YgdGhlIFdlYiBTZXJ2aWNlLiI7CiAgICAgIHNoOm1heENvdW50IDE7CiAgICAgIHNoOm5vZGUgZXBvczpEYXRlT3JEYXRlVGltZURhdGFUeXBlIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6ZGF0ZU1vZGlmaWVkIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm5vZGUgZXBvczpEYXRlT3JEYXRlVGltZURhdGFUeXBlIDsKICAgICAgc2g6bWVzc2FnZSAiTW9kaWZpZWQgZGF0ZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmRhdGVNb2RpZmllZDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG1vc3QgcmVjZW50IGRhdGUgb24gd2hpY2ggdGhlIFdlYiBTZXJ2aWNlIHdhcyBtb2RpZmllZC4iOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICAgIHNoOm1heENvdW50IDE7CiAgICBdIDsKIyMjIwojIFdlYlNlcnZpY2Ugb3B0aW9uYWwgcHJvcGVydGllcwojIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpzcGF0aWFsIDsKICAgICAgc2g6Y2xhc3MgZGN0OkxvY2F0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgZ2VvZ3JhcGhpY2FsIGFyZWEgY292ZXJlZCBieSB0aGUgV2ViIFNlcnZpY2UuIjsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBoeWRyYTpzdXBwb3J0ZWRPcGVyYXRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSB3ZWIgc2VydmljZSBvcGVyYXRpb24gc3VwcG9ydGVkIGJ5IHRoZSBXZWIgU2VydmljZS4iOwogICAgICBzaDpjbGFzcyBoeWRyYTpPcGVyYXRpb24gOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpjb25mb3Jtc1RvIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBBUEkgZG9jdW1lbnRhdGlvbi4iOwogICAgICBzaDpjbGFzcyBoeWRyYTpBcGlEb2N1bWVudGF0aW9uIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6a2V5d29yZHM7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBrZXl3b3JkcyB1c2VkIHRvIGRlc2NyaWJlIHRoZSBXZWIgU2VydmljZS4gTXVsdGlwbGUgZW50cmllcyBpbiBhIGtleXdvcmRzIGxpc3QgYXJlIHR5cGljYWxseSBkZWxpbWl0ZWQgYnkgY29tbWFzLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpsaWNlbnNlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBsaWNlbmNlIHVuZGVyIHdoaWNoIHRoZSBXZWIgU2VydmljZSBjYW4gYmUgdXNlZCBvciByZXVzZWQuIjsKICAgICAgc2g6b3IgKCBbc2g6Y2xhc3MgZGN0OkxpY2Vuc2VEb2N1bWVudCA7IF0KICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdICk7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDp0ZW1wb3JhbCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHRlbXBvcmFsIHBlcmlvZCB0aGF0IHRoZSBXZWIgU2VydmljZSBjb3ZlcnMuIjsKICAgICAgc2g6Y2xhc3MgZGN0OlBlcmlvZE9mVGltZSA7CiAgICBdIDsKLgplcG9zOk9wZXJhdGlvblNoYXBlCmEgc2g6Tm9kZVNoYXBlIDsKc2g6dGFyZ2V0Q2xhc3MgaHlkcmE6T3BlcmF0aW9uOwoKIyMjIwojIE9wZXJhdGlvbiAgcmVjb21tZW5kZWQgcHJvcGVydGllcwojIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGh5ZHJhOnByb3BlcnR5IDsKICAgICAgc2g6Y2xhc3MgaHlkcmE6SXJpVGVtcGxhdGUgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiSVJJIHRlbXBsYXRlIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGh5ZHJhOnByb3BlcnR5IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBJcmlUZW1wbGF0ZSBvZiB0aGUgV2ViIFNlcnZpY2Ugb3BlcmF0aW9uLiBUaGlzIGRlc2NyaWJlcyB0aGUgZW5kcG9pbnQgYW5kIHBhcmFtZXRlcnMgbWFwcGluZyBmb3IgdGhlIG9wZXJhdGlvbi4iOwogICAgICBzaDpjbGFzcyBoeWRyYTpJcmlUZW1wbGF0ZSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGh5ZHJhOnJldHVybnMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBpcyB1c2VkIHRvIHNwZWNpZnkgdGhlIG91dHB1dCBmb3JtYXQgb2YgdGhlIE9wZXJhdGlvbi4gVGhlIHBvc3NpYmxlIHZhbHVlcyBhcmUgbGlzdGVkIGhlcmU6IGh0dHBzOi8vd3d3LmlhbmEub3JnL2Fzc2lnbm1lbnRzL21lZGlhLXR5cGVzL21lZGlhLXR5cGVzLnhodG1sIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgInJldHVybnMgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdOwogIAojIyMjCiMgT3BlcmF0aW9uIG9wdGlvbmFsIHByb3BlcnRpZXMKIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBoeWRyYTptZXRob2QgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhlIEhUVFAgbWV0aG9kIjsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgXTsKLgoKZXBvczpJcmlUZW1wbGF0ZVNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIGh5ZHJhOklyaVRlbXBsYXRlIDsKIyMjIwojIElyaVRlbXBsYXRlIG1hbmRhdG9yeSBwcm9wZXJ0aWVzCiMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggaHlkcmE6dGVtcGxhdGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhlIHN5bnRheCBvZiB0aGUgdGVtcGxhdGUgbGl0ZXJhbCBpcyBzcGVjaWZpZWQgYnkgdGhlIFsgUkZDNjU3MF0gVVJJIFRlbXBsYXRlIHN5bnRheC4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiMjIyMKIyBJcmlUZW1wbGF0ZSBvcHRpb25hbCBwcm9wZXJ0aWVzCiMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggaHlkcmE6bWFwcGluZyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJBIHZhcmlhYmxlLXRvLXByb3BlcnR5IG1hcHBpbmcgb2YgdGhlIElSSSB0ZW1wbGF0ZS4iOwogICAgICBzaDpjbGFzcyBoeWRyYTpJcmlUZW1wbGF0ZU1hcHBpbmcgOwogICAgXSA7Ci4KCmVwb3M6SXJpVGVtcGxhdGVNYXBwaW5nU2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3MgaHlkcmE6SXJpVGVtcGxhdGVNYXBwaW5nIDsKIyMjIwojIElyaVRlbXBsYXRlTWFwcGluZyBtYW5kYXRvcnkgcHJvcGVydGllcwojIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGh5ZHJhOnZhcmlhYmxlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG5hbWUgb2YgdGhlIHBhcmFtZXRlciBhcyByZXF1aXJlZCBieSB3ZWIgc2VydmljZSBzcGVjaWZpY2F0aW9ucy4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHJkZnM6bGFiZWwgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIHNob3J0IHN0cmluZyB1c2VkIHRvIGRlc2NyaWJlIHRoZSBtZWFuaW5nIG9mIHRoZSBwYXJhbWV0ZXIuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBoeWRyYTpyZXF1aXJlZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRydWUgaWYgdGhlIHByb3BlcnR5IGlzIHJlcXVpcmVkLCBmYWxzZSBvdGhlcndpc2UuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmJvb2xlYW4gOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggcmRmczpyYW5nZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSB0eXBlIG9mIHBhcmFtZXRlciAoZS5nLiwgeHNkOnN0cmluZywgeHNkOkJvb2xlYW4sIHhzZDpkYXRlLCB4c2Q6ZGF0ZVRpbWUpLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKIyMjIwojIElyaVRlbXBsYXRlTWFwcGluZyBvcHRpb25hbCBwcm9wZXJ0aWVzCiMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmRlZmF1bHRWYWx1ZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBkZWZhdWx0IHZhbHVlIG9mIHRoZSBwYXJhbWV0ZXIuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTptaW5WYWx1ZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtaW5pbXVtIHZhbHVlIG9mIHRoZSBwYXJhbWV0ZXIuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTptYXhWYWx1ZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtYXhpbXVtIHZhbHVlIG9mIHRoZSBwYXJhbWV0ZXIuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggaHR0cDpwYXJhbVZhbHVlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgb25lIG9mIHRoZSBwb3NzaWJsZSB2YWx1ZXMgd2hpY2ggc2hvdWxkIGJlIHVzZWQgaW4gdGhlIHdlYiBzZXJ2aWNlIHF1ZXJ5LiBJdCBjb3VsZCBiZSByZXBlYXRlZCBhcyBtYW55IHRpbWVzIGFzIG5lZWRlZC4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6bXVsdGlwbGVWYWx1ZXMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiV2hldGhlciBtdWx0aXBsZSB2YWx1ZXMgYXJlIGFsbG93ZWQgZm9yIHRoZSBwcm9wZXJ0eS4gRGVmYXVsdCBpcyBmYWxzZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6Ym9vbGVhbiA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnJlYWRvbmx5VmFsdWUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiV2hldGhlciBvciBub3QgYSBwcm9wZXJ0eSBpcyBtdXRhYmxlLiBEZWZhdWx0IGlzIGZhbHNlLiBTcGVjaWZ5aW5nIHRoaXMgZm9yIGEgcHJvcGVydHkgdGhhdCBhbHNvIGhhcyBhIHZhbHVlIG1ha2VzIGl0IGFjdCBzaW1pbGFyIHRvIGEgaGlkZGVuIGlucHV0IGluIGFuIEhUTUwgZm9ybS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6Ym9vbGVhbiA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnZhbHVlUGF0dGVybiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSByZWd1bGFyIGV4cHJlc3Npb24gZm9yIHRlc3RpbmcgdmFsdWVzIGFjY29yZGluZyB0byB0aGUgcGFyYW1ldGVyJ3Mgc3BlY2lmaWNhdGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggaHlkcmE6cHJvcGVydHkgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgdm9jYWJ1bGFyeSB0ZXJtIHdoaWNoIGluZGljYXRlcyB0aGUgc2VtYW50aWMgZGVzY3JpcHRpb24gb2YgcGFyYW1ldGVyLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwouCgplcG9zOlNlcnZpY2VTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBzY2hlbWE6U2VydmljZTsKIyMjIwojIFNlcnZpY2UgTWFuZGF0b3J5IHByb3BlcnRpZXMKIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6aWRlbnRpZmllciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtYWluIGlkZW50aWZpZXIgZm9yIHRoZSBTZXJ2aWNlLiI7CiAgICAgIHNoOm9yICggWyBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOyBdCiAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsgXQogICAgICBbIHNoOmNsYXNzIHNjaGVtYTpQcm9wZXJ0eVZhbHVlOyBdICkgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgIF0gOwojIyMjCiMgU2VydmljZSByZWNvbW1lbmRlZCBwcm9wZXJ0aWVzCiMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm5hbWUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbmFtZSBvZiB0aGUgU2VydmljZS4iOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6bmFtZSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptZXNzYWdlICJOYW1lIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF07CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpjb250YWN0UG9pbnQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIENvbnRhY3QgUG9pbnQgZGVmaW5lZCBmb3IgdGhlIFNlcnZpY2UuIjsKICAgICAgc2g6bm9kZSBlcG9zOkNvbnRhY3RQb2ludFR5cGUgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiQ29udGFjdCBwb2ludCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmRlc2NyaXB0aW9uOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWVzc2FnZSAiRGVzY3JpcHRpb24gaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpkZXNjcmlwdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgU2VydmljZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6cHJvdmlkZXI7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhbiBPcmdhbmlzYXRpb24gb3IgUGVyc29uIHJlc3BvbnNpYmxlIGZvciBtYWtpbmcgdGhlIFNlcnZpY2UgYXZhaWxhYmxlLiI7CiAgICAgIHNoOm9yICggWyBzaDpjbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uIDsgXQogICAgICAgIFsgc2g6Y2xhc3Mgc2NoZW1hOlBlcnNvbiA7IF0gKTsKICAgICAgc2g6bWF4Q291bnQgMTsKICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnByb3ZpZGVyOwogICAgICBzaDpvciAoIFsgc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbiA7IF0KICAgICAgICBbIHNoOmNsYXNzIHNjaGVtYTpQZXJzb24gOyBdICk7CiAgICAgIHNoOm1pbkNvdW50IDE7CiAgICAgIHNoOm1lc3NhZ2UgIlByb3ZpZGVyIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwojIyMjCiMgU2VydmljZSBvcHRpb25hbCBwcm9wZXJ0aWVzCiMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6c2VydmljZVR5cGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgdHlwZSBvZiBzZXJ2aWNlIGJlaW5nIG9mZmVyZWQuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMTsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6a2V5d29yZHMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUga2V5d29yZHMgdXNlZCB0byBkZXNjcmliZSB0aGUgU2VydmljZS4gTXVsdGlwbGUgZW50cmllcyBpbiBhIGtleXdvcmRzIGxpc3QgYXJlIHR5cGljYWxseSBkZWxpbWl0ZWQgYnkgY29tbWFzLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1heENvdW50IDE7CiAgICBdOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OnRoZW1lOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBjYXRlZ29yeSBvZiB0aGUgU2VydmljZS4gQSBTZXJ2aWNlIG1heSBiZSBhc3NvY2lhdGVkIHdpdGggbXVsdGlwbGUgdGhlbWVzLiI7CiAgICAgIHNoOmNsYXNzIHNrb3M6Q29uY2VwdCA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnRlbXBvcmFsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgdGVtcG9yYWwgcGVyaW9kIHRoYXQgdGhlIFNlcnZpY2UgY292ZXJzLiI7CiAgICAgIHNoOmNsYXNzIGRjdDpQZXJpb2RPZlRpbWUgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpzcGF0aWFsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgZ2VvZ3JhcGhpY2FsIGFyZWEgY292ZXJlZCBieSB0aGUgU2VydmljZS4iOwogICAgICBzaDpjbGFzcyBkY3Q6TG9jYXRpb24gOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTp1cmwgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIFVSTCBvZiB0aGUgU2VydmljZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwouCgplcG9zOkVxdWlwbWVudFNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIGVwb3M6RXF1aXBtZW50OwojIyMjCiMgRXF1aXBtZW50IG1hbmRhdG9yeSBwcm9wZXJ0aWVzCiMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmRlc2NyaXB0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBmcmVlLXRleHQgZGVzY3JpcHRpb24gb2YgdGhlIEVxdWlwbWVudC4iOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmlkZW50aWZpZXIgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbWFpbiBpZGVudGlmaWVyIGZvciB0aGUgRXF1aXBtZW50LiI7CiAgICAgIHNoOm9yICggWyBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsgXQogICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7IF0gKTsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpuYW1lIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBuYW1lIGdpdmVuIHRvIHRoZSBFcXVpcG1lbnQuIjsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgIF0gOwojIyMjCiMgRXF1aXBtZW50IHJlY29tbWVuZGVkIHByb3BlcnRpZXMKIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dHlwZSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7IF0KICAgICAgICBbIHNoOmNsYXNzIHNrb3M6Q29uY2VwdCA7IF0gKSA7CiAgICAgIHNoOm1lc3NhZ2UgIlR5cGUgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDp0eXBlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSB0eXBlIG9mIHRoZSBFcXVpcG1lbnQuIjsKICAgICAgc2g6b3IgKCBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdCiAgICAgICAgWyBzaDpjbGFzcyBza29zOkNvbmNlcHQgOyBdICkgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6bWFudWZhY3R1cmVyIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGFuIE9yZ2FuaXNhdGlvbiByZXNwb25zaWJsZSBmb3IgbWFudWZhY3R1cmluZyB0aGUgRXF1aXBtZW50LiI7CiAgICAgIHNoOmNsYXNzIHNjaGVtYTpPcmdhbml6YXRpb24gOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6bWFudWZhY3R1cmVyIDsKICAgICAgc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbiA7CiAgICAgIHNoOm1pbkNvdW50IDE7CiAgICAgIHNoOm1lc3NhZ2UgIk1hbnVmYWN0dXJlciBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6c2VyaWFsTnVtYmVyIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIHNlcmlhbCBudW1iZXIgZm9yIHRoZSBFcXVpcG1lbnQuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnNlcmlhbE51bWJlciA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiU2VyaWFsTnVtYmVyIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiMjIyMKIyBFcXVpcG1lbnQgb3B0aW9uYWwgcHJvcGVydGllcwojIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDppc1BhcnRPZiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhbiBFcXVpcG1lbnQgb3IgYSBGYWNpbGl0eSBpbiB3aGljaCB0aGUgZGVzY3JpYmVkIEVxdWlwbWVudCBpcyBpbmNsdWRlZC4iOwogICAgICBzaDpvciAoIFsgc2g6Y2xhc3MgZXBvczpFcXVpcG1lbnQ7IF0KICAgICAgICBbIHNoOmNsYXNzIGVwb3M6RmFjaWxpdHk7IF0gKTsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBlcG9zOmZpbHRlciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGRlc2NyaWJlcyB0aGUgZmlsdGVyIHRoYXQgdGhlIGluc3RydW1lbnQgdXNlcyB0byBwcm9kdWNlIGRhdGEuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGVwb3M6ZHluYW1pY1JhbmdlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGZ1bGwtc2NhbGUgbWVhc3VyaW5nIGFiaWxpdHksIGluIG5UICh1bml0IGFuZCB2YWx1ZSkuIjsKICAgICAgc2g6Y2xhc3Mgc2NoZW1hOlF1YW50aXRhdGl2ZVZhbHVlIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZXBvczpvcmllbnRhdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGRlc2NyaWJlcyBob3cgdGhlIGluc3RydW1lbnQgaXMgb3JpZW50ZWQuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGVwb3M6cmVzb2x1dGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSByZXNvbHV0aW9uIGluIG5ULiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBlcG9zOnNhbXBsZVBlcmlvZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBzYW1wbGUgcGVyaW9kIGluIG1TICh1bml0IGFuZCB2YWx1ZSkiOwogICAgICBzaDpjbGFzcyBzY2hlbWE6UXVhbnRpdGF0aXZlVmFsdWUgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmNvbnRhY3RQb2ludCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGNvbnRhY3QgaW5mb3JtYXRpb24gdGhhdCBjYW4gYmUgdXNlZCBmb3Igc2VuZGluZyBjb21tZW50cyBhYm91dCB0aGUgRXF1aXBtZW50LiI7CiAgICAgIHNoOm5vZGUgZXBvczpDb250YWN0UG9pbnRUeXBlIDsKICAgIF07CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpzcGF0aWFsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgZ2VvZ3JhcGhpY2FsIGxvY2F0aW9uIG9mIHRoZSBFcXVpcG1lbnQuIjsKICAgICAgc2g6Y2xhc3MgZGN0OkxvY2F0aW9uIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZXBvczphbm5vdGF0aW9uIDsKICAgICAgc2g6Y2xhc3Mgb2E6QW5ub3RhdGlvbiA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnRlbXBvcmFsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIHN0YXJ0IGFuZCB0aGUgZW5kIG9mIHRoZSBwZXJpb2QuICI7CiAgICAgIHNoOmNsYXNzIGRjdDpQZXJpb2RPZlRpbWUgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpyZWxhdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHJlbGF0ZWQgcmVzb3VyY2UgKGUuZy4sIERhdGFzZXQsIFdlYlNlcnZpY2UsIGV0Yy4pLiI7CiAgICAgIHNoOm9yICggWyBzaDpjbGFzcyByZGZzOlJlc291cmNlIDsgXQogICAgICAgIFsgc2g6Y2xhc3MgZGNhdDpEYXRhc2V0IDsgXQoJWyBzaDpjbGFzcyBzY2hlbWE6U2VydmljZSA7IF0KCVsgc2g6Y2xhc3MgZXBvczpXZWJTZXJ2aWNlIDsgXSApOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgIHNoOnBhdGggZGNhdDp0aGVtZSA7CiAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgY2F0ZWdvcnkgb2YgdGhlIEVxdWlwbWVudC4gQW4gRXF1aXBtZW50IG1heSBiZSBhc3NvY2lhdGVkIHdpdGggbXVsdGlwbGUgdGhlbWVzLiI7CiAgICAgc2g6Y2xhc3Mgc2tvczpDb25jZXB0IDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBmb2FmOnBhZ2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSB3ZWIgcGFnZSBhYm91dCB0aGlzIEVxdWlwbWVudC4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsKICAgIF07Ci4KCmVwb3M6RGF0YXNldFNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIGRjYXQ6RGF0YXNldCA7CiMjIyMKIyBEYXRhc2V0IG1hbmRhdG9yeSBwcm9wZXJ0aWVzCiMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmRlc2NyaXB0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBmcmVlLXRleHQgYWNjb3VudCBvZiB0aGUgRGF0YXNldC4gVGhpcyBwcm9wZXJ0eSBjYW4gYmUgcmVwZWF0ZWQgZm9yIHBhcmFsbGVsIGxhbmd1YWdlIHZlcnNpb25zIG9mIHRoZSBkZXNjcmlwdGlvbiI7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6aWRlbnRpZmllciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtYWluIGlkZW50aWZpZXIgZm9yIHRoZSBEYXRhc2V0LCBlLmcuIHRoZSBVUkkgb3Igb3RoZXIgdW5pcXVlIGlkZW50aWZpZXIgaW4gdGhlIGNvbnRleHQgb2YgdGhlIENhdGFsb2d1ZS4iOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7IF0KICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdICk7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dGl0bGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIG5hbWUgZ2l2ZW4gdG8gdGhlIERhdGFzZXQuIFRoaXMgcHJvcGVydHkgY2FuIGJlIHJlcGVhdGVkIGZvciBwYXJhbGxlbCBsYW5ndWFnZSB2ZXJzaW9ucyBvZiB0aGUgbmFtZS4iOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICBdIDsKIyMjIwojIERhdGFzZXQgcmVjb21tZW5kZWQgcHJvcGVydGllcwojIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6ZGlzdHJpYnV0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgbGlua3MgdGhlIERhdGFzZXQgdG8gYW4gYXZhaWxhYmxlIERpc3RyaWJ1dGlvbi4iOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6Y2xhc3MgZGNhdDpEaXN0cmlidXRpb247CiAgICAgIHNoOm1lc3NhZ2UgIkRpc3RyaWJ1dGlvbiBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDpjb250YWN0UG9pbnQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBjb250YWN0IGluZm9ybWF0aW9uIHRoYXQgY2FuIGJlIHVzZWQgZm9yIHNlbmRpbmcgY29tbWVudHMgYWJvdXQgdGhlIERhdGFzZXQuIjsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm5vZGUgZXBvczpDb250YWN0UG9pbnRUeXBlIDsKICAgICAgc2g6bWVzc2FnZSAiQ29udGFjdCBwb2ludCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnB1Ymxpc2hlciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhbiBlbnRpdHkgKG9yZ2FuaXNhdGlvbikgcmVzcG9uc2libGUgZm9yIG1ha2luZyB0aGUgRGF0YXNldCBhdmFpbGFibGUuIjsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm9yICggWyBzaDpjbGFzcyBmb2FmOkFnZW50IDsgXQogICAgICBbIHNoOmNsYXNzIHNjaGVtYTpPcmdhbml6YXRpb24gOyBdICkgOwogICAgICBzaDptZXNzYWdlICJQdWJsaXNoZXIgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6a2V5d29yZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEga2V5d29yZCBvciB0YWcgZGVzY3JpYmluZyB0aGUgRGF0YXNldC4iOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1lc3NhZ2UgIktleXdvcmQgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6dGhlbWUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBjYXRlZ29yeSBvZiB0aGUgRGF0YXNldC4gQSBEYXRhc2V0IG1heSBiZSBhc3NvY2lhdGVkIHdpdGggbXVsdGlwbGUgdGhlbWVzLiI7CiAgICAgIHNoOm9yICggWyBzaDpjbGFzcyBza29zOkNvbmNlcHQgOyBdCiAgICAgICAgWyBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsgXSApOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiVGhlbWUgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwpdIDsKIyMjIwojIERhdGFzZXQgb3B0aW9uYWwgcHJvcGVydGllcwojIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpjcmVhdGVkIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGRhdGUgb24gd2hpY2ggdGhlIERhdGFzZXQgd2FzIGNyZWF0ZWQuIjsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOm5vZGUgZXBvczpEYXRlT3JEYXRlVGltZURhdGFUeXBlIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dHlwZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgdHlwZSBvZiB0aGUgRGF0YXNldC4gQSBjb250cm9sbGVkIHZvY2FidWxhcnkgZm9yIHRoZSB2YWx1ZXMgaGFzIG5vdCBiZWVuIGVzdGFibGlzaGVkLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6YWNjZXNzUmlnaHRzIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGluZm9ybWF0aW9uIHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIERhdGFzZXQgaXMgb3BlbiBkYXRhLCBoYXMgYWNjZXNzIHJlc3RyaWN0aW9ucyBvciBpcyBub3QgcHVibGljLiBBIGNvbnRyb2xsZWQgdm9jYWJ1bGFyeSB3aXRoIHRocmVlIG1lbWJlcnMgKDpwdWJsaWMsIDpyZXN0cmljdGVkLCA6bm9uLXB1YmxpYykgd2lsbCBiZSBjcmVhdGVkIGFuZCBtYWludGFpbmVkIGJ5IHRoZSBQdWJsaWNhdGlvbnMgT2ZmaWNlIG9mIHRoZSBFVS4iOwogICAgICBzaDpjbGFzcyBkY3Q6UmlnaHRzU3RhdGVtZW50IDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmFjY3J1YWxQZXJpb2RpY2l0eSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgZnJlcXVlbmN5IGF0IHdoaWNoIHRoZSBEYXRhc2V0IGlzIHVwZGF0ZWQuIjsKICAgICAgI3NoOmNsYXNzIGRjdDpGcmVxdWVuY3kgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmNvbmZvcm1zVG8gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYW4gaW1wbGVtZW50aW5nIHJ1bGUgb3Igb3RoZXIgc3BlY2lmaWNhdGlvbi4iOwogICAgICBzaDpjbGFzcyBkY3Q6U3RhbmRhcmQgOwogIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6aGFzVmVyc2lvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHJlbGF0ZWQgRGF0YXNldCB0aGF0IGlzIGEgdmVyc2lvbiwgZWRpdGlvbiwgb3IgYWRhcHRhdGlvbiBvZiB0aGUgZGVzY3JpYmVkIERhdGFzZXQuIjsKICAgICAgc2g6Y2xhc3MgZGNhdDpEYXRhc2V0IDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6aXNWZXJzaW9uT2YgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSByZWxhdGVkIERhdGFzZXQgb2Ygd2hpY2ggdGhlIGRlc2NyaWJlZCBEYXRhc2V0IGlzIGEgdmVyc2lvbiwgZWRpdGlvbiwgb3IgYWRhcHRhdGlvbi4iOwogICAgICBzaDpjbGFzcyBkY2F0OkRhdGFzZXQgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDppc3N1ZWQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgZGF0ZSBvZiBmb3JtYWwgaXNzdWFuY2UgKGUuZy4sIHB1YmxpY2F0aW9uKSBvZiB0aGUgRGF0YXNldC4iOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6bm9kZSBlcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDptb2RpZmllZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtb3N0IHJlY2VudCBkYXRlIG9uIHdoaWNoIHRoZSBEYXRhc2V0IHdhcyBjaGFuZ2VkIG9yIG1vZGlmaWVkLiI7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0Omxhbmd1YWdlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgbGFuZ3VhZ2Ugb2YgdGhlIERhdGFzZXQuIFRoaXMgcHJvcGVydHkgY2FuIGJlIHJlcGVhdGVkIGlmIHRoZXJlIGFyZSBtdWx0aXBsZSBsYW5ndWFnZXMgaW4gdGhlIERhdGFzZXQuIjsKICAgICAgc2g6Y2xhc3MgZGN0Okxpbmd1aXN0aWNTeXN0ZW0gOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpwcm92ZW5hbmNlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBzdGF0ZW1lbnQgYWJvdXQgdGhlIGxpbmVhZ2Ugb2YgYSBEYXRhc2V0LiI7CiAgICAgIHNoOmNsYXNzIGRjdDpQcm92ZW5hbmNlU3RhdGVtZW50IDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6cmVsYXRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSByZWxhdGVkIHJlc291cmNlLiI7CiAgICAgIHNoOmNsYXNzIHJkZnM6UmVzb3VyY2UgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpzb3VyY2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSByZWxhdGVkIERhdGFzZXQgZnJvbSB3aGljaCB0aGUgZGVzY3JpYmVkIERhdGFzZXQgaXMgZGVyaXZlZC4iOwogICAgICBzaDpjbGFzcyBkY2F0OkRhdGFzZXQgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpzcGF0aWFsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgZ2VvZ3JhcGhpYyByZWdpb24gdGhhdCBpcyBjb3ZlcmVkIGJ5IHRoZSBEYXRhc2V0LiI7CiAgICAgIHNoOmNsYXNzIGRjdDpMb2NhdGlvbiA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnRlbXBvcmFsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgdGVtcG9yYWwgcGVyaW9kIHRoYXQgdGhlIERhdGFzZXQgY292ZXJzLiI7CiAgICAgIHNoOmNsYXNzIGRjdDpQZXJpb2RPZlRpbWUgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIG93bDp2ZXJzaW9uSW5mbyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgdmVyc2lvbiBudW1iZXIgb3Igb3RoZXIgdmVyc2lvbiBkZXNpZ25hdGlvbiBvZiB0aGUgRGF0YXNldC4iOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBhZG1zOmlkZW50aWZpZXIgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBzZWNvbmRhcnkgaWRlbnRpZmllciBvZiB0aGUgRGF0YXNldCwgc3VjaCBhcyBNQVNUL0FEUywgRGF0YUNpdGUsIERPSSwgRVpJRCBvciBXM0lELiI7CiAgICAgIHNoOmNsYXNzIGFkbXM6SWRlbnRpZmllciA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggYWRtczpzYW1wbGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBzYW1wbGUgZGlzdHJpYnV0aW9uIG9mIHRoZSBkYXRhc2V0IjsKICAgICAgc2g6Y2xhc3MgZGNhdDpEaXN0cmlidXRpb24gOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6bGFuZGluZ1BhZ2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSB3ZWIgcGFnZSB0aGF0IHByb3ZpZGVzIGFjY2VzcyB0byB0aGUgRGF0YXNldCwgaXRzIERpc3RyaWJ1dGlvbnMgYW5kL29yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24uIEl0IGlzIGludGVuZGVkIHRvIHBvaW50IHRvIGEgbGFuZGluZyBwYWdlIGF0IHRoZSBvcmlnaW5hbCBkYXRhIHByb3ZpZGVyLCBub3QgdG8gYSBwYWdlIG9uIGEgc2l0ZSBvZiBhIHRoaXJkIHBhcnR5LCBzdWNoIGFzIGFuIGFnZ3JlZ2F0b3IuIjsKICAgICAgc2g6Y2xhc3MgZm9hZjpEb2N1bWVudCA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZm9hZjpwYWdlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgcGFnZSBvciBkb2N1bWVudCBhYm91dCB0aGlzIERhdGFzZXQuIjsKICAgICAgc2g6Y2xhc3MgZm9hZjpEb2N1bWVudCA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggYWRtczp2ZXJzaW9uTm90ZXMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIGRlc2NyaXB0aW9uIG9mIHRoZSBkaWZmZXJlbmNlcyBiZXR3ZWVuIHRoaXMgdmVyc2lvbiBhbmQgYSBwcmV2aW91cyB2ZXJzaW9uIG9mIHRoZSBEYXRhc2V0LiBUaGlzIHByb3BlcnR5IGNhbiBiZSByZXBlYXRlZCBmb3IgcGFyYWxsZWwgbGFuZ3VhZ2UgdmVyc2lvbnMgb2YgdGhlIHZlcnNpb24gbm90ZXMuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICBdIDsKIyMgU3VwcG9ydCBmb3IgY29sbGVjdGlvbnMgb2YgZGF0YXNldHMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmlzUGFydE9mIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgcmVsYXRlZCBEYXRhc2V0IGluIHdoaWNoIHRoZSBkZXNjcmliZWQgRGF0YXNldCBpcyBwaHlzaWNhbGx5IG9yIGxvZ2ljYWxseSBpbmNsdWRlZC4iOwogICAgICBzaDpjbGFzcyBkY2F0OkRhdGFzZXQgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpoYXNQYXJ0IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgcmVsYXRlZCBEYXRhc2V0IHRoYXQgaXMgcGFydCBvZiB0aGUgZGVzY3JpYmVkIERhdGFzZXQuIjsKICAgICAgc2g6Y2xhc3MgZGNhdDpEYXRhc2V0IDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkcXY6aGFzUXVhbGl0eUFubm90YXRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBzdGF0ZW1lbnQgcmVsYXRlZCB0byBxdWFsaXR5IG9mIHRoZSBEYXRhc2V0LCBpbmNsdWRpbmcgcmF0aW5nLCBxdWFsaXR5IGNlcnRpZmljYXRlIHRoYXQgY2FuIGJlIGFzc29jaWF0ZWQgdG8gdGhlIERhdGFzZXQuICI7CiAgICAgIHNoOmNsYXNzIG9hOkFubm90YXRpb24gOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGVwb3M6YW5ub3RhdGlvbiA7CiAgICAgIHNoOmNsYXNzIG9hOkFubm90YXRpb24gOwogICAgXSA7Ci4KZXBvczpGYWNpbGl0eVNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIGVwb3M6RmFjaWxpdHkgOwojIyMjCiMgRmFjaWxpdHkgbWFuZGF0b3J5IHByb3BlcnRpZXMKIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6ZGVzY3JpcHRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIGZyZWUtdGV4dCBkZXNjcmlwdGlvbiBvZiB0aGUgRmFjaWxpdHkuIjsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6aWRlbnRpZmllciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtYWluIGlkZW50aWZpZXIgZm9yIHRoZSBGYWNpbGl0eS4iOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7IF0KICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdICk7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dGl0bGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIG5hbWUgZ2l2ZW4gdG8gdGhlIEZhY2lsaXR5LiI7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICBdIDsKIyMjIwojIEZhY2lsaXR5IHJlY29tbWVuZGVkIHByb3BlcnRpZXMKIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dHlwZSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7IF0KICAgICAgICBbIHNoOmNsYXNzIHNrb3M6Q29uY2VwdCA7IF0gKSA7CiAgICAgIHNoOm1lc3NhZ2UgIlR5cGUgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDp0eXBlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSB0eXBlIG9mIHRoZSBGYWNpbGl0eS4iOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7IF0KICAgICAgICBbIHNoOmNsYXNzIHNrb3M6Q29uY2VwdCA7IF0gKSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6dGhlbWU7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGNhdGVnb3J5IG9mIHRoZSBGYWNpbGl0eS4gQSBGYWNpbGl0eSBtYXkgYmUgYXNzb2NpYXRlZCB3aXRoIG11bHRpcGxlIHRoZW1lcy4iOwogICAgICBzaDpjbGFzcyBza29zOkNvbmNlcHQgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiVGhlbWUgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgIyMjIwogICMgRmFjaWxpdHkgb3B0aW9uYWwgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmlzUGFydE9mIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgRmFjaWxpdHkgaW4gd2hpY2ggdGhlIGRlc2NyaWJlZCBGYWNpbGl0eSBpcyBpbmNsdWRlZC4iOwogICAgICBzaDpjbGFzcyBlcG9zOkZhY2lsaXR5IDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCB2Y2FyZDpoYXNBZGRyZXNzIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIHBoeXNpY2FsIGFkZHJlc3Mgb2YgdGhlIEZhY2lsaXR5LiI7CiAgICAgIHNoOmNsYXNzIHZjYXJkOkFkZHJlc3MgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBmb2FmOnBhZ2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBwYWdlIG9yIGRvY3VtZW50IGFib3V0IHRoaXMgRmFjaWxpdHkuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDpjb250YWN0UG9pbnQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBjb250YWN0IGluZm9ybWF0aW9uIHRoYXQgY2FuIGJlIHVzZWQgZm9yIHNlbmRpbmcgY29tbWVudHMgYWJvdXQgdGhlIEZhY2lsaXR5LiI7CiAgICAgIHNoOm5vZGUgZXBvczpDb250YWN0UG9pbnRUeXBlIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6cmVsYXRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSByZWxhdGVkIHJlc291cmNlIChlLmcuLCBEYXRhc2V0LCBXZWJTZXJ2aWNlLCBldGMpLiI7CiAgICAgIHNoOm9yICggWyBzaDpjbGFzcyByZGZzOlJlc291cmNlIDsgXQogICAgICAgIFsgc2g6Y2xhc3MgZGNhdDpEYXRhc2V0IDsgXQoJWyBzaDpjbGFzcyBzY2hlbWE6U2VydmljZSA7IF0KCVsgc2g6Y2xhc3MgZXBvczpXZWJTZXJ2aWNlIDsgXSApOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGVwb3M6YW5ub3RhdGlvbiA7CiAgICAgIHNoOmNsYXNzIG9hOkFubm90YXRpb247CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnNwYXRpYWwgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIGdlb2dyYXBoaWNhbCBjb29yZGluYXRlcyBvZiB0aGUgZmFjaWxpdHkuIjsKICAgICAgc2g6Y2xhc3MgZGN0OkxvY2F0aW9uIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgXSA7Ci4KZXBvczpEaXN0cmlidXRpb25TaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBkY2F0OkRpc3RyaWJ1dGlvbjsKICAjIyMjCiAgIyBEaXN0cmlidXRpb24gbWFuZGF0b3J5IHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDppZGVudGlmaWVyIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG1haW4gaWRlbnRpZmllciBmb3IgdGhlIERpc3RyaWJ1dGlvbi4iOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7IF0KICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdICk7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmFjY2Vzc1VSTCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgVVJMIHRoYXQgZ2l2ZXMgYWNjZXNzIHRvIGEgRGlzdHJpYnV0aW9uIG9mIHRoZSBEYXRhc2V0LiBUaGUgcmVzb3VyY2UgYXQgdGhlIGFjY2VzcyBVUkwgbWF5IGNvbnRhaW4gaW5mb3JtYXRpb24gYWJvdXQgaG93IHRvIGdldCB0aGUgRGF0YXNldC4iOwogICAgICBzaDpvciAoIFsgc2g6Y2xhc3MgcmRmczpSZXNvdXJjZSA7IF0KICAgICAgICBbIHNoOmNsYXNzIGh5ZHJhOk9wZXJhdGlvbiA7IF0KICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdICkgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgIF0gOwogICMjIyMKICAjIERpc3RyaWJ1dGlvbiByZWNvbW1lbmRlZCBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6Y29uZm9ybXNUbyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhbiBlc3RhYmxpc2hlZCBzY2hlbWEgdG8gd2hpY2ggdGhlIGRlc2NyaWJlZCBEaXN0cmlidXRpb24gY29uZm9ybXMuIjsKICAgICAgc2g6b3IgKCBbIHNoOmNsYXNzIGRjdDpTdGFuZGFyZCA7IF0KICAgICAgICBbIHNoOmNsYXNzIGVwb3M6V2ViU2VydmljZSA7IF0gKSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJjb25mb3Jtc1RvIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dHlwZSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJOwogICAgICBzaDptZXNzYWdlICJUeXBlIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dHlwZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgdHlwZSBvZiB0aGUgRGlzdHJpYnV0aW9uLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6ZGVzY3JpcHRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIGZyZWUtdGV4dCBhY2NvdW50IG9mIHRoZSBEaXN0cmlidXRpb24uIFRoaXMgcHJvcGVydHkgY2FuIGJlIHJlcGVhdGVkIGZvciBwYXJhbGxlbCBsYW5ndWFnZSB2ZXJzaW9ucyBvZiB0aGUgZGVzY3JpcHRpb24uIjsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptZXNzYWdlICJEZXNjcmlwdGlvbiBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmZvcm1hdCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgZmlsZSBmb3JtYXQgb2YgdGhlIERpc3RyaWJ1dGlvbi4iOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7IF0KICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdICk7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpmb3JtYXQgOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7IF0KICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdICk7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJGb3JtYXQgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgIyMjIwogICMgRGlzdHJpYnV0aW9uIG9wdGlvbmFsIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDppc3N1ZWQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgZGF0ZSBvZiBmb3JtYWwgaXNzdWFuY2UgKGUuZy4sIHB1YmxpY2F0aW9uKSBvZiB0aGUgRGlzdHJpYnV0aW9uLiI7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0Omxhbmd1YWdlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgbGFuZ3VhZ2UgdXNlZCBpbiB0aGUgRGlzdHJpYnV0aW9uLiBUaGlzIHByb3BlcnR5IGNhbiBiZSByZXBlYXRlZCBpZiB0aGUgbWV0YWRhdGEgaXMgcHJvdmlkZWQgaW4gbXVsdGlwbGUgbGFuZ3VhZ2VzLiI7CiAgICAgIHNoOmNsYXNzIGRjdDpMaW5ndWlzdGljU3lzdGVtIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6bGljZW5zZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgbGljZW5jZSB1bmRlciB3aGljaCB0aGUgRGlzdHJpYnV0aW9uIGlzIG1hZGUgYXZhaWxhYmxlLiI7CiAgICAgIHNoOm9yICggWyBzaDpjbGFzcyBkY3Q6TGljZW5zZURvY3VtZW50IDsgXQogICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7IF0gKTsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0Om1vZGlmaWVkIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG1vc3QgcmVjZW50IGRhdGUgb24gd2hpY2ggdGhlIERpc3RyaWJ1dGlvbiB3YXMgY2hhbmdlZCBvciBtb2RpZmllZC4iOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6bm9kZSBlcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpyaWdodHMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBzdGF0ZW1lbnQgdGhhdCBzcGVjaWZpZXMgcmlnaHRzIGFzc29jaWF0ZWQgd2l0aCB0aGUgRGlzdHJpYnV0aW9uLiI7CiAgICAgIHNoOmNsYXNzIGRjdDpSaWdodHNTdGF0ZW1lbnQgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dGl0bGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIG5hbWUgZ2l2ZW4gdG8gdGhlIERpc3RyaWJ1dGlvbi4gVGhpcyBwcm9wZXJ0eSBjYW4gYmUgcmVwZWF0ZWQgZm9yIHBhcmFsbGVsIGxhbmd1YWdlIHZlcnNpb25zIG9mIHRoZSBkZXNjcmlwdGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsgIAogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNwZHg6Y2hlY2tzdW0gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBwcm92aWRlcyBhIG1lY2hhbmlzbSB0aGF0IGNhbiBiZSB1c2VkIHRvIHZlcmlmeSB0aGF0IHRoZSBjb250ZW50cyBvZiBhIGRpc3RyaWJ1dGlvbiBoYXZlIG5vdCBjaGFuZ2VkIjsKICAgICAgc2g6Y2xhc3Mgc3BkeDpDaGVja3N1bSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGFkbXM6c3RhdHVzIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBtYXR1cml0eSBvZiB0aGUgRGlzdHJpYnV0aW9uIjsKICAgICAgc2g6Y2xhc3Mgc2tvczpDb25jZXB0IDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDpieXRlU2l6ZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBzaXplIG9mIGEgRGlzdHJpYnV0aW9uIGluIGJ5dGVzLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpkZWNpbWFsIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDpkb3dubG9hZFVSTCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgVVJMIHRoYXQgaXMgYSBkaXJlY3QgbGluayB0byBhIGRvd25sb2FkYWJsZSBmaWxlIGluIGEgZ2l2ZW4gZm9ybWF0LiI7CiAgICAgICNzaDpjbGFzcyByZGZzOlJlc291cmNlIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDptZWRpYVR5cGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIG1lZGlhIHR5cGUgb2YgdGhlIERpc3RyaWJ1dGlvbiBhcyBkZWZpbmVkIGluIHRoZSBvZmZpY2lhbCByZWdpc3RlciBvZiBtZWRpYSB0eXBlcyBtYW5hZ2VkIGJ5IElBTkEuIjsKICAgICAgc2g6Y2xhc3MgZGN0Ok1lZGlhVHlwZU9yRXh0ZW50IDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZm9hZjpwYWdlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgcGFnZSBvciBkb2N1bWVudCBhYm91dCB0aGlzIERpc3RyaWJ1dGlvbi4iOwogICAgICBzaDpjbGFzcyBmb2FmOkRvY3VtZW50IDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBlcG9zOmFubm90YXRpb24gOwogICAgICBzaDpjbGFzcyBvYTpBbm5vdGF0aW9uIDsKICAgIF0gOwouCmVwb3M6UHJvamVjdFNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIGZvYWY6UHJvamVjdDsKICAjIyMjCiAgIyBQcm9qZWN0IG1hbmRhdG9yeSBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6aWRlbnRpZmllciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtYWluIGlkZW50aWZpZXIgZm9yIHRoZSBQcm9qZWN0LiI7CiAgICAgIHNoOm9yICggWyBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsgXQogICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7IF0gKTsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDp0aXRsZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSB0aXRsZSBvZiB0aGUgUHJvamVjdC4iOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgXSA7CiAgIyMjIwogICMgUHJvamVjdCByZWNvbW1lbmRlZCBwcm9wZXJ0aWVzCiAgIyMjIwoKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDpjb250YWN0UG9pbnQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIENvbnRhY3QgUG9pbnQgZGVmaW5lZCBmb3IgdGhlIFByb2plY3QuIjsKICAgICAgc2g6bm9kZSBlcG9zOkNvbnRhY3RQb2ludFR5cGUgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiQ29udGFjdCBwb2ludCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmRlc2NyaXB0aW9uIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1lc3NhZ2UgIkRlc2NyaXB0aW9uIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6ZGVzY3JpcHRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgZGVzY3JpcHRpb24gb2YgdGhlIFByb2plY3QuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgIyMjIwogICMgUHJvamVjdCBvcHRpb25hbCBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBmb2FmOmhvbWVwYWdlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgd2ViIHBhZ2UgdGhhdCBhY3RzIGFzIHRoZSBtYWluIHBhZ2UgZm9yIHRoZSBQcm9qZWN0LiI7CiAgICAgIHNoOmNsYXNzIGZvYWY6RG9jdW1lbnQgOwogICAgICBzaDptYXhDb3VudCAxIDsKICBdIDsKLgplcG9zOlB1YmxpY2F0aW9uU2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3MgZXBvczpQdWJsaWNhdGlvbjsKICAjIyMjCiAgIyBQdWJsaWNhdGlvbiBtYW5kYXRvcnkgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmlkZW50aWZpZXIgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbWFpbiBpZGVudGlmaWVyIGZvciB0aGUgUHVibGljYXRpb24uIjsKICAgICAgc2g6b3IgKCBbIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOyBdCiAgICAgICAgWyBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsgXQogICAgICAgIFsgc2g6Y2xhc3Mgc2NoZW1hOlByb3BlcnR5VmFsdWUgOyBdICkgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6bmFtZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBuYW1lIG9mIHRoZSBQdWJsaWNhdGlvbi4iOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgXSA7CiAgIyMjIwogICMgUHVibGljYXRpb24gcmVjb21tZW5kZWQgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmRhdGVQdWJsaXNoZWQgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bm9kZSBlcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUgOwogICAgICBzaDptZXNzYWdlICJQdWJsaXNoZWQgZGF0ZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmRhdGVQdWJsaXNoZWQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgZGF0ZSBvZiBmaXJzdCBQdWJsaWNhdGlvbi4iOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6bm9kZSBlcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpwdWJsaXNoZXIgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYW4gb3JnYW5pemF0aW9uIG9yIHBlcnNvbiBvciBhZ2VudCB3aGljaCBpcyB0aGUgcHVibGlzaGVyIG9mIHRoZSBQdWJsaWNhdGlvbi4iOwogICAgICBzaDpvciAoIFsgc2g6Y2xhc3Mgc2NoZW1hOlBlcnNvbiA7IF0KICAgICAgWyBzaDpjbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uIDsgXQogICAgICBbIHNoOmNsYXNzIGZvYWY6QWdlbnQgOyBdICkgOwogICAgICBzaDptYXhDb3VudCAxOwogICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6cHVibGlzaGVyIDsKICAgICAgc2g6b3IgKCBbIHNoOmNsYXNzIHNjaGVtYTpQZXJzb24gOyBdCiAgICAgIFsgc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbiA7IF0KICAgICAgWyBzaDpjbGFzcyBmb2FmOkFnZW50IDsgXSApIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIlB1Ymxpc2hlciBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDphYnN0cmFjdCA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptZXNzYWdlICJBYnN0cmFjdCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmFic3RyYWN0IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGFic3RyYWN0IG9mIHRoZSBQdWJsaWNhdGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6YXV0aG9yIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgUGVyc29uIHdoaWNoIGlzIHRoZSBhdXRob3Igb2YgdGhlIFB1YmxpY2F0aW9uLiI7CiAgICAgIHNoOmNsYXNzIHNjaGVtYTpQZXJzb247CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTphdXRob3IgOwogICAgICBzaDpjbGFzcyBzY2hlbWE6UGVyc29uOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiQXV0aG9yIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6Y29udHJpYnV0b3IgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBQZXJzb24gd2hpY2ggaXMgYSBjb250cmlidXRvciBvZiB0aGUgUHVibGljYXRpb24uIjsKICAgICAgc2g6Y2xhc3Mgc2NoZW1hOlBlcnNvbjsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIkNvbnRyaWJ1dG9yIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogICMjIyMKICAjIFB1YmxpY2F0aW9uIG9wdGlvbmFsIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpsaWNlbnNlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIFVSTCBvZiB0aGUgbGljZW5zZSBkb2N1bWVudCB0aGF0IGFwcGxpZXMgdG8gdGhlIFB1YmxpY2F0aW9uLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDphbnlVUkk7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTprZXl3b3JkczsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGtleXdvcmRzIHVzZWQgdG8gZGVzY3JpYmUgdGhlIFB1YmxpY2F0aW9uLiBNdWx0aXBsZSBlbnRyaWVzIGluIGEga2V5d29yZHMgbGlzdCBhcmUgdHlwaWNhbGx5IGRlbGltaXRlZCBieSBjb21tYXMuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTppc3NuIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIEludGVybmF0aW9uYWwgU3RhbmRhcmQgU2VyaWFsIE51bWJlciAoSVNTTikgdGhhdCBpZGVudGlmaWVzIHRoZSBQdWJsaWNhdGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm51bWJlck9mUGFnZXMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbnVtYmVyIG9mIHBhZ2VzIG9mIHRoZSBQdWJsaWNhdGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6aW50ZWdlcjsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnZvbHVtZU51bWJlciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSB2b2x1bWUgaWRlbnRpZmllciBvZiB0aGUgUHVibGljYXRpb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgc2g6cGF0aCBkY2F0OnRoZW1lOwogICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGNhdGVnb3J5IG9mIHRoZSBQdWJsaWNhdGlvbi4gQSBQdWJsaWNhdGlvbiBtYXkgYmUgYXNzb2NpYXRlZCB3aXRoIG11bHRpcGxlIHRoZW1lcy4iOwogICAgIHNoOmNsYXNzIHNrb3M6Q29uY2VwdCA7CiAgXSA7Ci4KZXBvczpTb2Z0d2FyZUFwcGxpY2F0aW9uU2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3Mgc2NoZW1hOlNvZnR3YXJlQXBwbGljYXRpb247CiAgIyMjIwogICMgU29mdHdhcmVBcHBsaWNhdGlvbiBtYW5kYXRvcnkgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmlkZW50aWZpZXIgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbWFpbiBpZGVudGlmaWVyIGZvciB0aGUgU29mdHdhcmUgQXBwbGljYXRpb24uIjsKICAgICAgc2g6b3IgKCBbIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7IF0KICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkk7IF0KICAgICAgICBbc2g6Y2xhc3Mgc2NoZW1hOlByb3BlcnR5VmFsdWU7IF0gKSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7CiAgIyMjIwogICMgU29mdHdhcmVBcHBsaWNhdGlvbiByZWNvbW1lbmRlZCBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6bmFtZSA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJOYW1lIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6bmFtZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBuYW1lIG9mIHRoZSBTb2Z0d2FyZSBBcHBsaWNhdGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6Y29udGFjdFBvaW50IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBDb250YWN0IFBvaW50IGRlZmluZWQgZm9yIHRoZSBTb2Z0d2FyZSBBcHBsaWNhdGlvbi4iOwogICAgICBzaDpub2RlIGVwb3M6Q29udGFjdFBvaW50VHlwZSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJDb250YWN0IHBvaW50IGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogICMjIyMKICAjIFNvZnR3YXJlQXBwbGljYXRpb24gb3B0aW9uYWwgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmRlc2NyaXB0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBTb2Z0d2FyZSBBcHBsaWNhdGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmRvd25sb2FkVXJsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIklmIHRoZSBTb2Z0d2FyZSBBcHBsaWNhdGlvbiBjYW4gYmUgZG93bmxvYWRlZCB0aGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBVUkwgdG8gZG93bmxvYWQgaXQuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmxpY2Vuc2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgVVJMIG9mIHRoZSBsaWNlbnNlIGRvY3VtZW50IHRoYXQgYXBwbGllcyB0byB0aGUgU29mdHdhcmUgQXBwbGljYXRpb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnNvZnR3YXJlVmVyc2lvbjsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIHZlcnNpb24gb2YgdGhlIFNvZnR3YXJlIEFwcGxpY2F0aW9uIGluc3RhbmNlLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6c29mdHdhcmVSZXF1aXJlbWVudHMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiQ29tcG9uZW50IGRlcGVuZGVuY3kgcmVxdWlyZW1lbnRzIGZvciBhcHBsaWNhdGlvbi4gVGhpcyBpbmNsdWRlcyBydW50aW1lIGVudmlyb25tZW50cyBhbmQgc2hhcmVkIGxpYnJhcmllcyB0aGF0IGFyZSBub3QgaW5jbHVkZWQgaW4gdGhlIGFwcGxpY2F0aW9uIGRpc3RyaWJ1dGlvbiBwYWNrYWdlLCBidXQgcmVxdWlyZWQgdG8gcnVuIHRoZSBhcHBsaWNhdGlvbi4iOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7IF0KICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdICk7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpwb3RlbnRpYWxBY3Rpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBkZXNjcmliZXMgdGhlIG9iamVjdCB1cG9uIHdoaWNoIHRoZSBhY3Rpb24gaXMgY2FycmllZCBvdXQgYW5kIHRoZSByZXN1bHQgcHJvZHVjZWQgaW4gdGhlIGFjdGlvbi4iOwogICAgICBzaDpjbGFzcyBzY2hlbWE6Q29udHJvbEFjdGlvbiA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpyZWxhdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgV2ViU2VydmljZSBPcGVyYXRpb24gbGlua2VkIHRvIHRoZSBhcHBsaWNhdGlvbi4iOwogICAgICBzaDpjbGFzcyBoeWRyYTpPcGVyYXRpb24gOwogICAgXSA7IAogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6aW5zdGFsbFVybCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBVUkwgYXQgd2hpY2ggdGhlIGFwcGxpY2F0aW9uIG1heSBiZSBpbnN0YWxsZWQuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm1haW5FbnRpdHlPZlBhZ2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIHdlYiBwYWdlIFVSTCB3aGljaCBkZXNjcmliZXMgdGhlIFNvZnR3YXJlIEFwcGxpY2F0aW9uLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6a2V5d29yZHMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUga2V5d29yZHMgdXNlZCB0byBkZXNjcmliZSB0aGUgU29mdHdhcmUgQXBwbGljYXRpb24uIE11bHRpcGxlIGVudHJpZXMgaW4gYSBrZXl3b3JkcyBsaXN0IGFyZSB0eXBpY2FsbHkgZGVsaW1pdGVkIGJ5IGNvbW1hcy4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OnRoZW1lOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBjYXRlZ29yeSBvZiB0aGUgU29mdHdhcmUgQXBwbGljYXRpb24uIEEgU29mdHdhcmUgbWF5IGJlIGFzc29jaWF0ZWQgd2l0aCBtdWx0aXBsZSB0aGVtZXMuIjsKICAgICAgc2g6Y2xhc3Mgc2tvczpDb25jZXB0IDsgICAgCiAgICBdIDsKLgoKZXBvczpDb250cm9sQWN0aW9uU2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3Mgc2NoZW1hOkNvbnRyb2xBY3Rpb24gOwogICMjIyMKICAjIENvbnRyb2xBY3Rpb24gb3B0aW9uYWwgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm9iamVjdCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGUgb2JqZWN0IHVwb24gd2hpY2ggdGhlIGFjdGlvbiBpcyBjYXJyaWVkIG91dCwgd2hvc2Ugc3RhdGUgaXMga2VwdCBpbnRhY3Qgb3IgY2hhbmdlZC4gQWxzbyBrbm93biBhcyB0aGUgc2VtYW50aWMgcm9sZXMgcGF0aWVudCwgYWZmZWN0ZWQgb3IgdW5kZXJnb2VyICh3aGljaCBjaGFuZ2UgdGhlaXIgc3RhdGUpIG9yIHRoZW1lICh3aGljaCBkb2Vzbid0KS4gZS5nLiBKb2huIHJlYWQgYSBib29rLiI7CiAgICAgIHNoOmNsYXNzIHNjaGVtYTpDcmVhdGl2ZVdvcmsgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpyZXN1bHQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhlIHJlc3VsdCBwcm9kdWNlZCBpbiB0aGUgYWN0aW9uLiBlLmcuIEpvaG4gd3JvdGUgYSBib29rLiI7IAkgICAgICAKICAgICAgc2g6Y2xhc3Mgc2NoZW1hOkNyZWF0aXZlV29yayA7CiAgICBdIDsgCi4KCmVwb3M6Q3JlYXRpdmVXb3JrU2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3Mgc2NoZW1hOkNyZWF0aXZlV29yayA7CiAgIyMjIwogICMgQ3JlYXRpdmVXb3JrIG9wdGlvbmFsIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTplbmNvZGluZ0Zvcm1hdCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJNZWRpYSB0eXBlIHR5cGljYWxseSBleHByZXNzZWQgdXNpbmcgYSBNSU1FIGZvcm1hdCAoc2VlIElBTkEgc2l0ZSBhbmQgTUROIHJlZmVyZW5jZSkgZS5nLiBhcHBsaWNhdGlvbi96aXAgZm9yIGEgU29mdHdhcmVBcHBsaWNhdGlvbiBiaW5hcnksIGF1ZGlvL21wZWcgZm9yIC5tcDMgZXRjLikuIjsKICAgICAgc2g6b3IgKCBbIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOyBdCiAgICAgICAgWyBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsgXSApOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpjb25mb3Jtc1RvIDsKICAgICAgI3NoOmRlc2NyaXB0aW9uICIiOwkgICAgICAKICAgICAgc2g6b3IgKCBbIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOyBdCiAgICAgICAgWyBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsgXSApOwogICAgXSA7IAouCgplcG9zOlNvZnR3YXJlU291cmNlQ29kZVNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIHNjaGVtYTpTb2Z0d2FyZVNvdXJjZUNvZGU7CiAgIyMjIwogICMgU29mdHdhcmVTb3VyY2VDb2RlIG1hbmRhdG9yeSBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6aWRlbnRpZmllciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtYWluIGlkZW50aWZpZXIgZm9yIHRoZSBTb2Z0d2FyZSBTb3VyY2UgQ29kZS4iOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsgXQogICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsgXQogICAgICAgIFtzaDpjbGFzcyBzY2hlbWE6UHJvcGVydHlWYWx1ZTsgXSApIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICBdIDsKICAjIyMjCiAgIyBTb2Z0d2FyZVNvdXJjZUNvZGUgcmVjb21tZW5kZWQgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm5hbWUgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiTmFtZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm5hbWUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbmFtZSBvZiB0aGUgU29mdHdhcmUgU291cmNlIENvZGUuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmNvbnRhY3RQb2ludCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgQ29udGFjdCBQb2ludCBkZWZpbmVkIGZvciB0aGUgU29mdHdhcmUgU291cmNlIENvZGUuIjsKICAgICAgc2g6bm9kZSBlcG9zOkNvbnRhY3RQb2ludFR5cGUgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiQ29udGFjdCBwb2ludCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICAjIyMjCiAgIyBTb2Z0d2FyZVNvdXJjZUNvZGUgb3B0aW9uYWwgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmRlc2NyaXB0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBTb2Z0d2FyZSBTb3VyY2UgQ29kZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmNvZGVSZXBvc2l0b3J5IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGxpbmsgdG8gdGhlIHJlcG9zaXRvcnkgd2hlcmUgdGhlIHVuY29tcGlsZWQsIGh1bWFuIHJlYWRhYmxlIGNvZGUgYW5kIHJlbGF0ZWQgY29kZSBpcyBsb2NhdGVkIChTVk4sIEdpdEh1YiwgQ29kZVBsZXgpLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6bGljZW5zZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBVUkwgb2YgdGhlIGxpY2Vuc2UgZG9jdW1lbnQgdGhhdCBhcHBsaWVzIHRvIHRoZSBTb2Z0d2FyZSBTb3VyY2UgQ29kZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnNvZnR3YXJlVmVyc2lvbjsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIHZlcnNpb24gb2YgdGhlIFNvZnR3YXJlIFNvdXJjZSBDb2RlIGluc3RhbmNlLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6cHJvZ3JhbW1pbmdMYW5ndWFnZTsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGNvbXB1dGVyIHByb2dyYW1taW5nIGxhbmd1YWdlIHVzZWQgdG8gZGV2ZWxvcCB0aGUgU29mdHdhcmUgU291cmNlIENvZGUuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnJ1bnRpbWVQbGF0Zm9ybSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgcnVudGltZSBwbGF0Zm9ybSBvciBzY3JpcHQgaW50ZXJwcmV0ZXIgZGVwZW5kZW5jaWVzIChFeGFtcGxlIC0gSmF2YSB2MSwgUHl0aG9uMi4zLCAuTmV0IEZyYW1ld29yayAzLjApLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6dGFyZ2V0UHJvZHVjdCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0aGUgdGFyZ2V0IE9wZXJhdGluZyBTeXN0ZW0gLyBQcm9kdWN0IHRvIHdoaWNoIHRoZSBjb2RlIGFwcGxpZXMuIElmIGFwcGxpZXMgdG8gc2V2ZXJhbCB2ZXJzaW9ucywganVzdCB0aGUgcHJvZHVjdCBuYW1lIGNhbiBiZSB1c2VkLiI7CiAgICAgIHNoOmNsYXNzIHNjaGVtYTpTb2Z0d2FyZUFwcGxpY2F0aW9uIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6bWFpbkVudGl0eU9mUGFnZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgd2ViIHBhZ2UgVVJMIHdoaWNoIGRlc2NyaWJlcyB0aGUgU29mdHdhcmUgU291cmNlIENvZGUuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTprZXl3b3JkcyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBrZXl3b3JkcyB1c2VkIHRvIGRlc2NyaWJlIHRoZSBTb2Z0d2FyZSBTb3VyY2UgQ29kZS4gTXVsdGlwbGUgZW50cmllcyBpbiBhIGtleXdvcmRzIGxpc3QgYXJlIHR5cGljYWxseSBkZWxpbWl0ZWQgYnkgY29tbWFzLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgIHNoOnBhdGggZGNhdDp0aGVtZTsKICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBjYXRlZ29yeSBvZiB0aGUgU29mdHdhcmUgU291cmNlIENvZGUuIEEgU29mdHdhcmUgbWF5IGJlIGFzc29jaWF0ZWQgd2l0aCBtdWx0aXBsZSB0aGVtZXMuIjsKICAgICBzaDpjbGFzcyBza29zOkNvbmNlcHQgOwogICAgXSA7Ci4KCmVwb3M6UGVyaW9kT2ZUaW1lU2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3MgZGN0OlBlcmlvZE9mVGltZSA7CiAjIyMjCiAjIFBlcmlvZE9mVGltZSBwcm9wZXJ0aWVzCiAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpzdGFydERhdGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgc3RhcnQgb2YgdGhlIHBlcmlvZC4iICA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmVuZERhdGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgZW5kIG9mIHRoZSBwZXJpb2QuIiAgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6bm9kZSBlcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUgOwogICAgXSA7Ci4KCmVwb3M6UG9zdGFsQWRkcmVzc1NoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIHNjaGVtYTpQb3N0YWxBZGRyZXNzOwogIyMjIwogIyBQb3N0YWxBZGRyZXNzIHByb3BlcnRpZXMKICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnN0cmVldEFkZHJlc3MgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhlIHN0cmVldCBhZGRyZXNzLiBGb3IgZXhhbXBsZSwgMTYwMCBBbXBoaXRoZWF0cmUgUGt3eS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmFkZHJlc3NMb2NhbGl0eSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGUgbG9jYWxpdHkgaW4gd2hpY2ggdGhlIHN0cmVldCBhZGRyZXNzIGlzLCBhbmQgd2hpY2ggaXMgaW4gdGhlIHJlZ2lvbi4gRm9yIGV4YW1wbGUsIE1vdW50YWluIFZpZXcuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpwb3N0YWxDb2RlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoZSBwb3N0YWwgY29kZS4gRm9yIGV4YW1wbGUsIDk0MDQzLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6YWRkcmVzc0NvdW50cnkgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhlIGNvdW50cnkuIEZvciBleGFtcGxlLCBVU0EuIFlvdSBjYW4gYWxzbyBwcm92aWRlIHRoZSB0d28tbGV0dGVyIElTTyAzMTY2LTEgYWxwaGEtMiBjb3VudHJ5IGNvZGUuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogXTsKLgoKZXBvczpRdWFudGl0YXRpdmVWYWx1ZVNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIHNjaGVtYTpRdWFudGl0YXRpdmVWYWx1ZSA7CiAgIyMjIwogICMgUXVhbnRpdGF0aXZlVmFsdWUgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnVuaXRDb2RlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoZSB1bml0IG9mIG1lYXN1cmVtZW50IGdpdmVuIHVzaW5nIHRoZSBVTi9DRUZBQ1QgQ29tbW9uIENvZGUgKDMgY2hhcmFjdGVycykgb3IgYSBVUkwuIE90aGVyIGNvZGVzIHRoYW4gdGhlIFVOL0NFRkFDVCBDb21tb24gQ29kZSBtYXkgYmUgdXNlZCB3aXRoIGEgcHJlZml4IGZvbGxvd2VkIGJ5IGEgY29sb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTp2YWx1ZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGUgdmFsdWUgb2YgdGhlIHF1YW50aXRhdGl2ZSB2YWx1ZSBvciBwcm9wZXJ0eSB2YWx1ZSBub2RlLlRoZSByZWNvbW1lbmRlZCB0eXBlIGZvciB2YWx1ZXMgaXMgJ051bWJlcicuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmRvdWJsZTsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7Ci4KCmVwb3M6TG9jYXRpb25TaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBkY3Q6TG9jYXRpb24gOwojIyMjCiMgTG9jYXRpb24gcHJvcGVydGllcwojIyMjCiAgc2g6cHJvcGVydHkgWwogICAgIHNoOnBhdGggbG9jbjpnZW9tZXRyeSA7CiAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgYXNzb2NpYXRlcyBhbnkgcmVzb3VyY2Ugd2l0aCB0aGUgY29ycmVzcG9uZGluZyBnZW9tZXRyeS4iOwogICAgIHNoOmRhdGF0eXBlIGdzcDp3a3RMaXRlcmFsOwogICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7Ci4KCmVwb3M6SWRlbnRpZmllclNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIGFkbXM6SWRlbnRpZmllcjsKIyMjIwojIElkZW50aWZpZXIgcHJvcGVydGllcwojIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGFkbXM6c2NoZW1lQWdlbmN5IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRoZSBpZGVudGlmaWVyIHNjaGVtZSByZWZlcmVuY2VkIGJ5IGl0cyBkYXRhdHlwZSAoZS5nLiwgRERTUy1JRCwgRE9JLCBldGMuKS4iOyAJICAgICAgCiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBza29zOm5vdGF0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBzdHJpbmcgdGhhdCBpcyBhbiBpZGVudGlmaWVyIGluIHRoZSBjb250ZXh0IG9mIHRoZSBpZGVudGlmaWVyIHNjaGVtZSByZWZlcmVuY2VkIGJ5IGl0cyBkYXRhdHlwZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKLgoKZXBvczpQcm9wZXJ0eVZhbHVlU2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3Mgc2NoZW1hOlByb3BlcnR5VmFsdWUgOwojIyMjCiMgUHJvcGVydHlWYWx1ZSBwcm9wZXJ0aWVzCiMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnByb3BlcnR5SUQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiQSBjb21tb25seSB1c2VkIGlkZW50aWZpZXIgZm9yIHRoZSBjaGFyYWN0ZXJpc3RpYyByZXByZXNlbnRlZCBieSB0aGUgcHJvcGVydHksIGUuZy4gYSBtYW51ZmFjdHVyZXIgb3IgYSBzdGFuZGFyZCBjb2RlIGZvciBhIHByb3BlcnR5LiBwcm9wZXJ0eUlEIGNhbiBiZSAoMSkgYSBwcmVmaXhlZCBzdHJpbmcsIG1haW5seSBtZWFudCB0byBiZSB1c2VkIHdpdGggc3RhbmRhcmRzIGZvciBwcm9kdWN0IHByb3BlcnRpZXM7ICgyKSBhIHNpdGUtc3BlY2lmaWMsIG5vbi1wcmVmaXhlZCBzdHJpbmcgKGUuZy4gdGhlIHByaW1hcnkga2V5IG9mIHRoZSBwcm9wZXJ0eSBvciB0aGUgdmVuZG9yLXNwZWNpZmljIGlkIG9mIHRoZSBwcm9wZXJ0eSksIG9yICgzKSBhIFVSTCBpbmRpY2F0aW5nIHRoZSB0eXBlIG9mIHRoZSBwcm9wZXJ0eSwgZWl0aGVyIHBvaW50aW5nIHRvIGFuIGV4dGVybmFsIHZvY2FidWxhcnksIG9yIGEgV2ViIHJlc291cmNlIHRoYXQgZGVzY3JpYmVzIHRoZSBwcm9wZXJ0eSAoZS5nLiBhIGdsb3NzYXJ5IGVudHJ5KS4gU3RhbmRhcmRzIGJvZGllcyBzaG91bGQgcHJvbW90ZSBhIHN0YW5kYXJkIHByZWZpeCBmb3IgdGhlIGlkZW50aWZpZXJzIG9mIHByb3BlcnRpZXMgZnJvbSB0aGVpciBzdGFuZGFyZHMuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6dmFsdWUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhlIHZhbHVlIG9mIHRoZSBxdWFudGl0YXRpdmUgdmFsdWUgb3IgcHJvcGVydHkgdmFsdWUgbm9kZS4gVGhlIHJlY29tbWVuZGVkIHR5cGUgZm9yIHZhbHVlcyBpcyAnTnVtYmVyJy4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgXSA7Ci4KCmVwb3M6Q29uY2VwdFNjaGVtZVNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIHNrb3M6Q29uY2VwdFNjaGVtZSA7CiMjIyMKIyBDb25jZXB0U2NoZW1lIHByb3BlcnRpZXMKIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dGl0bGUgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiVGl0bGUgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDp0aXRsZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgc2NoZW1lLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpkZXNjcmlwdGlvbiA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJEZXNjcmlwdGlvbiBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmRlc2NyaXB0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBkZXNjcmlwdGlvbiBvZiB0aGUgY2F0ZWdvcnkgc2NoZW1lLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAuCmVwb3M6Q29uY2VwdFNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIHNrb3M6Q29uY2VwdCA7CiMjIyMKIyBDb25jZXB0IHByb3BlcnRpZXMKIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBza29zOmRlZmluaXRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIHN0YXRlbWVudCBvciBmb3JtYWwgZXhwbGFuYXRpb24gb2YgdGhlIG1lYW5pbmcgb2YgYSBjb25jZXB0LiIgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNrb3M6cHJlZkxhYmVsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBwcmVmZXJyZWQgbGFiZWwgb2YgdGhlIGNhdGVnb3J5LiBUaGlzIHByb3BlcnR5IGNhbiBiZSByZXBlYXRlZCBmb3IgcGFyYWxsZWwgbGFuZ3VhZ2UgdmVyc2lvbnMgb2YgdGhlIGxhYmVsLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2tvczppblNjaGVtZTsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlJlbGF0ZXMgYSByZXNvdXJjZSAoZm9yIGV4YW1wbGUgYSBjb25jZXB0KSB0byBhIGNvbmNlcHQgc2NoZW1lIGluIHdoaWNoIGl0IGlzIGluY2x1ZGVkLiIgOwogICAgICBzaDpjbGFzcyBza29zOkNvbmNlcHRTY2hlbWUgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICBdIDsKLgplcG9zOkFkZHJlc3NTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyB2Y2FyZDpBZGRyZXNzOwojIyMjCiMgQWRkcmVzcyBwcm9wZXJ0aWVzCiMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgc2g6cGF0aCB2Y2FyZDpjb3VudHJ5LW5hbWUgOwogICAgIHNoOmRlc2NyaXB0aW9uICJUaGUgY291bnRyeSBuYW1lIGFzc29jaWF0ZWQgd2l0aCB0aGUgYWRkcmVzcyBvZiB0aGUgb2JqZWN0IjsKICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgIHNoOm1pbkNvdW50IDEgOwogICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHZjYXJkOmxvY2FsaXR5IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoZSBsb2NhbGl0eSAoZS5nLiBjaXR5IG9yIHRvd24pIGFzc29jaWF0ZWQgd2l0aCB0aGUgYWRkcmVzcyBvZiB0aGUgb2JqZWN0IjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICAgc2g6cGF0aCB2Y2FyZDpwb3N0YWwtY29kZSA7CiAgICAgICBzaDpkZXNjcmlwdGlvbiAiVGhlIHBvc3RhbCBjb2RlIGFzc29jaWF0ZWQgd2l0aCB0aGUgYWRkcmVzcyBvZiB0aGUgb2JqZWN0IjsKICAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICAgIHNoOnBhdGggdmNhcmQ6c3RyZWV0LWFkZHJlc3MgOwogICAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGUgc3RyZWV0IGFkZHJlc3MgYXNzb2NpYXRlZCB3aXRoIHRoZSBhZGRyZXNzIG9mIHRoZSBvYmplY3QiOwoJc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwouCgplcG9zOkFwaURvY3VtZW50YXRpb25TaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBoeWRyYTpBcGlEb2N1bWVudGF0aW9uOwojIyMjCiNBcGlEb2N1bWVudGF0aW9uIHByb3BlcnRpZXMKIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICBzaDpwYXRoIGh5ZHJhOnRpdGxlIDsKICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgdGl0bGUgb2YgdGhlIEFwaSBkb2N1bWVudGF0aW9uLiI7CiAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICBzaDptaW5Db3VudCAxIDsKICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBoeWRyYTpkZXNjcmlwdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgZGVzY3JpcHRpb24gb2YgdGhlIEFwaSBkb2N1bWVudGF0aW9uLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgIHNoOnBhdGggaHlkcmE6ZW50cnlwb2ludCA7CiAgICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIEFQSSBlbnRyeSBwb2ludC4iOwogICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7CiAgICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKIC4KCmVwb3M6QWdlbnRTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBmb2FmOkFnZW50OwojIyMjCiMgQWdlbnQgcHJvcGVydGllcwojIyMjCiAgc2g6cHJvcGVydHkgWwogICAgIHNoOnBhdGggZm9hZjpuYW1lIDsKICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbmFtZSBvZiBBZ2VudC4iOwogICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgc2g6bWF4Q291bnQgMSA7CiAgIF0gOwogICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnR5cGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSB0eXBlIG9mIHRoZSBhZ2VudCB0aGF0IG1ha2VzIHRoZSBDYXRhbG9ndWUgb3IgRGF0YXNldCBhdmFpbGFibGUiOwogICAgICBzaDpjbGFzcyBza29zOkNvbmNlcHQgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiVHlwZSBvZiB0aGUgYWdlbnQgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICBdIDsKICAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDp0eXBlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgdHlwZSBvZiB0aGUgYWdlbnQgdGhhdCBtYWtlcyB0aGUgQ2F0YWxvZ3VlIG9yIERhdGFzZXQgYXZhaWxhYmxlIjsKICAgICAgc2g6Y2xhc3Mgc2tvczpDb25jZXB0IDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgIF0gOwogLgoKZXBvczpBbm5vdGF0aW9uU2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3Mgb2E6QW5ub3RhdGlvbjsKCiMgIyMgTWFuZGF0b3J5IHByb3BlcnRpZXMKCiAgc2g6cHJvcGVydHkgWwogICAgIHNoOnBhdGggb2E6aGFzQm9keSA7CiAgICAgc2g6ZGVzY3JpcHRpb24gIlRoZSBvYmplY3Qgb2YgdGhlIHJlbGF0aW9uc2hpcCBpcyBhIHJlc291cmNlIHRoYXQgaXMgYSBib2R5IG9mIHRoZSBBbm5vdGF0aW9uLiI7CiAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsKICAgICBzaDptaW5Db3VudCAxIDsKICAgXSA7CiMgIyMgT3B0aW9uYWwgcHJvcGVydGllcwogICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggb2E6aGFzVGFyZ2V0IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiBhbiBBbm5vdGF0aW9uIGFuZCBpdHMgVGFyZ2V0LiI7CiAgICAgIHNoOmNsYXNzIGRjYXQ6RGF0YXNldCA7CiAgIF0gOwogICAKIC4K');
INSERT INTO metadata_catalogue.ontologies (id, name, type, content) VALUES ('400e75d2-3be8-4689-a352-b15a0a70b09f', 'EPOS-DCAT-AP-V3', 'BASE', 'QHByZWZpeCA6IDxodHRwczovL3d3dy5lcG9zLWV1Lm9yZy9lcG9zLWRjYXQtYXAjPiAuCkBwcmVmaXggYWRtczogPGh0dHA6Ly93d3cudzMub3JnL25zL2FkbXMjPiAuCkBwcmVmaXggY250OiA8aHR0cDovL3d3dy53My5vcmcvMjAxMS9jb250ZW50Iz4gLgpAcHJlZml4IGRhc2g6IDxodHRwOi8vZGF0YXNoYXBlcy5vcmcvZGFzaCM+IC4KQHByZWZpeCBkYzogPGh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvPiAuCkBwcmVmaXggZGNhdDogPGh0dHA6Ly93d3cudzMub3JnL25zL2RjYXQjPiAuCkBwcmVmaXggZGNhdGFwOiA8aHR0cDovL2RhdGEuZXVyb3BhLmV1L3I1cj4gLgpAcHJlZml4IGRjdDogPGh0dHA6Ly9wdXJsLm9yZy9kYy90ZXJtcy8+IC4KQHByZWZpeCBkcXY6IDxodHRwOi8vd3d3LnczLm9yZy9ucy9kcXYjPiAuCkBwcmVmaXggZXBvczogPGh0dHBzOi8vd3d3LmVwb3MtZXUub3JnL2Vwb3MtZGNhdC1hcCM+IC4KQHByZWZpeCBmb2FmOiA8aHR0cDovL3htbG5zLmNvbS9mb2FmLzAuMS8+IC4KQHByZWZpeCBnZW86IDxodHRwOi8vd3d3LnczLm9yZy8yMDAzLzAxL2dlby93Z3M4NF9wb3MjPiAuCkBwcmVmaXggZ3NwOiA8aHR0cDovL3d3dy5vcGVuZ2lzLm5ldC9vbnQvZ2Vvc3BhcnFsIz4gLgpAcHJlZml4IGh0dHA6IDxodHRwOi8vd3d3LnczLm9yZy8yMDA2L2h0dHAjPiAuCkBwcmVmaXggaHlkcmE6IDxodHRwOi8vd3d3LnczLm9yZy9ucy9oeWRyYS9jb3JlIz4gLgpAcHJlZml4IGxvY246IDxodHRwOi8vd3d3LnczLm9yZy9ucy9sb2NuIz4gLgpAcHJlZml4IG9hOiA8aHR0cDovL3d3dy53My5vcmcvbnMvb2EjPiAuCkBwcmVmaXggb2RybDogPGh0dHA6Ly93d3cudzMub3JnL25zL29kcmwvMi8+IC4KQHByZWZpeCBvcmc6IDxodHRwOi8vd3d3LnczLm9yZy9ucy9vcmcjPiAuCkBwcmVmaXggb3dsOiA8aHR0cDovL3d3dy53My5vcmcvMjAwMi8wNy9vd2wjPiAuCkBwcmVmaXggcHJvdjogPGh0dHA6Ly93d3cudzMub3JnL25zL3Byb3YjPiAuCkBwcmVmaXggcmRmOiA8aHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIz4gLgpAcHJlZml4IHJkZnM6IDxodHRwOi8vd3d3LnczLm9yZy8yMDAwLzAxL3JkZi1zY2hlbWEjPiAuCkBwcmVmaXggc2NoZW1hOiA8aHR0cDovL3NjaGVtYS5vcmcvPiAuCkBwcmVmaXggc2g6IDxodHRwOi8vd3d3LnczLm9yZy9ucy9zaGFjbCM+IC4KQHByZWZpeCBza29zOiA8aHR0cDovL3d3dy53My5vcmcvMjAwNC8wMi9za29zL2NvcmUjPiAuCkBwcmVmaXggc3BkeDogPGh0dHA6Ly9zcGR4Lm9yZy9yZGYvdGVybXMjPiAuCkBwcmVmaXggdGltZTogPGh0dHA6Ly93d3cudzMub3JnLzIwMDYvdGltZSM+IC4KQHByZWZpeCB2Y2FyZDogPGh0dHA6Ly93d3cudzMub3JnLzIwMDYvdmNhcmQvbnMjPiAuCkBwcmVmaXggeHNkOiA8aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEjPiAuCgo8aHR0cDovL3d3dy5lcG9zLWV1Lm9yZy9lcG9zLWRjYXQtYXA+CiAgcmRmOnR5cGUgb3dsOk9udG9sb2d5IDsKICBkY3Q6YWJzdHJhY3QgIkVQT1MgRENBVCBBcHBsaWNhdGlvbiBQcm9maWxlIGlzIGFuIGV4dGVuc2lvbiBvZiBEQ0FULUFQIGZvciBzb2xpZC1FYXJ0aCBzY2llbmNlcyBjb21tdW5pdGllcy4iQGVuICA7CiAgZGN0OmNyZWF0b3IgW2ZvYWY6bmFtZSAiUm9zc2FuYSBQYWNpZWxsbyIgOyBdIDsKICBkY3Q6Y3JlYXRvciBbZm9hZjpuYW1lICJNYW51ZWxhIFNiYXJyYSIgOyAgXSA7CiAgZGN0OmNvbnRyaWJ1dG9yIFtmb2FmOm5hbWUgIlZhbGVyaW8gVmluY2lhcmVsbGkiIDsgXSA7CiAgZGN0OmNyZWF0ZWQgIjIwMjItMDEtMDkiXl54c2Q6ZGF0ZSA7CiAgZGN0Om1vZGlmaWVkICIyMDIyLTAxLTEwIl5eeHNkOmRhdGUgOwogIGRjdDpyZWxhdGlvbiA8aHR0cHM6Ly9qb2ludXAuZWMuZXVyb3BhLmV1L2NvbGxlY3Rpb24vc2VtYW50aWMtaW50ZXJvcGVyYWJpbGl0eS1jb21tdW5pdHktc2VtaWMvc29sdXRpb24vZGNhdC1hcHBsaWNhdGlvbi1wcm9maWxlLWRhdGEtcG9ydGFscy1ldXJvcGUvcmVsZWFzZS8yMTA+IDsKICBkY3Q6dGl0bGUgIkVQT1MgRENBVCBBcHBsaWNhdGlvbiBQcm9maWxlIkBlbiAgOwogIHJkZnM6Y29tbWVudCAiVGhpcyBkb2N1bWVudCBzcGVjaWZpZXMgdGhlIHNldCBvZiBjbGFzc2VzLCBwcm9wZXJ0aWVzIGFuZCBzaGFwZXMgZ3JhcGhzIHVzZWQgaW4gdGhlIEVQT1MgRENBVCBBcHBsaWNhdGlvbiBQcm9maWxlLiJAZW4gIDsKICByZGZzOmxhYmVsICJFUE9TLURDQVQtQXBwbGljYXRpb24gUHJvZmlsZSJAZW4gIDsKICBvd2w6aW1wb3J0cyA8aHR0cDovL2RhdGFzaGFwZXMub3JnL2Rhc2g+IDsKICAjb3dsOmltcG9ydHMgPGh0dHA6Ly93d3cuc2NoZW1hLm9yZz4gOwogICNvd2w6aW1wb3J0cyA8aHR0cDovL3d3dy53My5vcmcvMjAwNC8wMi9za29zL2NvcmU+IDsKICAjb3dsOmltcG9ydHMgPGh0dHA6Ly93d3cudzMub3JnLzIwMDYvdmNhcmQvbnM+IDsKICAjb3dsOmltcG9ydHMgPGh0dHA6Ly93d3cudzMub3JnLzIwMDgvMDUvc2tvcy14bD4gOwogICNvd2w6aW1wb3J0cyA8aHR0cDovL3d3dy53My5vcmcvbnMvZGNhdD4gOwogICNvd2w6aW1wb3J0cyA8aHR0cDovL3d3dy53My5vcmcvbnMvb2EjPiA7CiAgI293bDppbXBvcnRzIDxodHRwOi8vd3d3LnczLm9yZy9ucy9vcmcjPiA7CiAgI293bDppbXBvcnRzIDxodHRwOi8veG1sbnMuY29tL2ZvYWYvMC4xLz4gOwogIG93bDp2ZXJzaW9uSW5mbyAiMi4wIiA7CiAgZm9hZjpob21lcGFnZSA8aHR0cDovL3d3dy5lcG9zLWV1Lm9yZy9lcG9zLWRjYXQtYXA+IDsgLgoKIyMjIwojIEFkZGl0aW9uYWwgRVBPUy1EQ0FULUFQIENsYXNzZXMKIyMjIwogIGVwb3M6RXF1aXBtZW50CiAgICBhIG93bDpDbGFzcyA7CiAgICByZGZzOmNvbW1lbnQgIkEgZ2VuZXJpYyBlcXVpcG1lbnQuIEUuZy4gYSBHUFMgc2Vuc29yLCBhIHNlaXNtaWMgc3RhdGlvbidzIGNoYW5uZWwiQGVuICA7CiAgICByZGZzOmlzRGVmaW5lZEJ5IDxodHRwOi8vd3d3LmVwb3MtZXUub3JnL2Vwb3MtZGNhdC1hcD4gOwogICAgcmRmczpsYWJlbCAiRXF1aXBtZW50IkBlbiAgOwogICAgcmRmczpzdWJDbGFzc09mIHJkZnM6UmVzb3VyY2UgOwogIC4KICBlcG9zOkZhY2lsaXR5CiAgICBhIG93bDpDbGFzcyA7CiAgICByZGZzOmNvbW1lbnQgIkEgcmVzb3VyY2UgcmVwcmVzZW50aW5nIGEgRmFjaWxpdHkuIEUuZy4gYSBsYWJvcmF0b3J5LCBhIHNlaXNtaWMgc3RhdGlvbiJAZW4gIDsKICAgIHJkZnM6aXNEZWZpbmVkQnkgPGh0dHA6Ly93d3cuZXBvcy1ldS5vcmcvZXBvcy1kY2F0LWFwPiA7CiAgICByZGZzOmxhYmVsICJGYWNpbGl0eSJAZW4gIDsKICAgIHJkZnM6c3ViQ2xhc3NPZiByZGZzOlJlc291cmNlIDsKICAuCiAgZXBvczpQdWJsaWNhdGlvbgogICAgYSBvd2w6Q2xhc3MgOwogICAgcmRmczpjb21tZW50ICJBIHRleHQgcHVibGljYXRpb24gaXMgYSByZXNvdXJjZSByZWxhdGluZyB0byBhIGRhdGFzZXQsIGRhdGEgcHJvZHVjdCBvciBvdGhlci4gSXQgaXMgYSBzdWJjbGFzcyBvZiBzY2hlbWE6Q3JlYXRpdmVXb3JrIkBlbiAgOwogICAgcmRmczppc0RlZmluZWRCeSA8aHR0cDovL3d3dy5lcG9zLWV1Lm9yZy9lcG9zLWRjYXQtYXA+IDsKICAgIHJkZnM6bGFiZWwgIlB1YmxpY2F0aW9uIkBlbiAgOwogICAgcmRmczpzdWJDbGFzc09mIHNjaGVtYTpDcmVhdGl2ZVdvcmsgOwogIC4KCiMjIyMKIyBFcXVpdmFsZW50IGNsYXNzZXMvcHJvcGVydGllcyBmb3IgRVBPUy1EQ0FULUFQCiMjIyMKIyBDbGFzc2VzICMjIyMKICAjI0FsaWdubWVudCBzY2hlbWE6Q29udGFjdFBvaW50IGFuZCB2Y2FyZDpLaW5kIyMKICBzY2hlbWE6Q29udGFjdFBvaW50IGEgb3dsOkNsYXNzOwogICAgb3dsOmVxdWl2YWxlbnRDbGFzcyB2Y2FyZDpLaW5kOwogICAgcmRmczpsYWJlbCAiQ29udGFjdFBvaW50IkBlbjsKICAuCiAgIyNBbGlnbm1lbnQgc2NoZW1hOk9yZ2FuaXphdGlvbiBhbmQgZm9hZjpPcmdhbml6YXRpb24jIwogIHNjaGVtYTpPcmdhbml6YXRpb24gYSBvd2w6Q2xhc3M7CiAgICBvd2w6ZXF1aXZhbGVudENsYXNzIGZvYWY6T3JnYW5pemF0aW9uOwogICAgcmRmczpsYWJlbCAiT3JnYW5pemF0aW9uIkBlbjsKICAuCiAgIyNBbGlnbm1lbnQgc2NoZW1hOlBlcnNvbiBhbmQgZm9hZjpQZXJzb24jIwogIHNjaGVtYTpQZXJzb24gYSBvd2w6Q2xhc3M7CiAgICBvd2w6ZXF1aXZhbGVudENsYXNzIGZvYWY6UGVyc29uOwogICAgcmRmczpsYWJlbCAiUGVyc29uIkBlbjsKICAuCiMgUHJvcGVydGllcyAjIyMjCiAgIyNBbGlnbm1lbnQgZGNhdDpjb250YWN0UG9pbnQgYW5kIHNjaGVtYTpjb250YWN0UG9pbnQjIwogIGRjYXQ6Y29udGFjdFBvaW50IG93bDplcXVpdmFsZW50UHJvcGVydHkgc2NoZW1hOmNvbnRhY3RQb2ludCAuCgogICMjQWxpZ25tZW50IGRjYXQ6a2V5d29yZCBhbmQgc2NoZW1hOmtleXdvcmRzIyMKICBkY2F0OmtleXdvcmQgb3dsOmVxdWl2YWxlbnRQcm9wZXJ0eSBzY2hlbWE6a2V5d29yZHMgLgoKIyMjIwojIEV4dGVuZGluZyByYW5nZSBhbmQgZG9tYWluIGZvciBFUE9TLURDQVQtQVAKIyMjIwojIEV4dGVuZGluZyByYW5nZSBhbmQgZG9tYWluIG9mIGRjYXQ6Y29udGFjdFBvaW50IyMKICBkY2F0OmNvbnRhY3RQb2ludAogICAgcmRmOnR5cGUgb3dsOk9iamVjdFByb3BlcnR5IDsKICAgIHJkZnM6ZG9tYWluIFsgcmRmOnR5cGUgb3dsOkNsYXNzIDsKICAgIAlvd2w6dW5pb25PZiAoZGNhdDpEYXRhc2V0IHNjaGVtYTpPcmdhbml6YXRpb24gc2NoZW1hOlBlcnNvbiBlcG9zOkVxdWlwbWVudCBzY2hlbWE6U29mdHdhcmVBcHBsaWNhdGlvbiBzY2hlbWE6U29mdHdhcmVTb3VyY2VDb2RlIGRjYXQ6RGF0YVNlcnZpY2UgZm9hZjpQcm9qZWN0IGVwb3M6RmFjaWxpdHkpXTsKICAgIHJkZnM6cmFuZ2UgWyByZGY6dHlwZSBvd2w6Q2xhc3MgOwogICAgCW93bDp1bmlvbk9mICh2Y2FyZDpLaW5kIHNjaGVtYTpDb250YWN0UG9pbnQpXTsKICAuCiMgRXh0ZW5kaW5nIHRoZSBkb21haW4gb2YgZGNhdDp0aGVtZSMjCiAgZGNhdDp0aGVtZQogICAgcmRmOnR5cGUgb3dsOk9iamVjdFByb3BlcnR5IDsKICAgIHJkZnM6Y29tbWVudCAiVGhlIG1haW4gY2F0ZWdvcnkvZG9tYWluIG9mIHRoZSByZWZlcnJlZCByZXNvdXJjZS4iQGVuICA7CiAgICByZGZzOmRvbWFpbiBbcmRmOnR5cGUgb3dsOkNsYXNzIDsKICAgIAlvd2w6dW5pb25PZiAocmRmczpSZXNvdXJjZSBkY2F0OkRhdGFzZXQpXSA7CiAgICByZGZzOnJhbmdlIHNrb3M6Q29uY2VwdCA7CiAgLgojIEV4dGVuZGluZyB0aGUgcmFuZ2Ugb2Ygc2NoZW1hOm93bnMjIwogIHNjaGVtYTpvd25zCiAgICByZGY6dHlwZSBvd2w6T2JqZWN0UHJvcGVydHkgOwogICAgcmRmczpkb21haW4gW3JkZjp0eXBlIG93bDpDbGFzcyA7CiAgICAJb3dsOnVuaW9uT2YgKHNjaGVtYTpQZXJzb24gc2NoZW1hOk9yZ2FuaXphdGlvbildOwogICAgcmRmczpyYW5nZSBbcmRmOnR5cGUgb3dsOkNsYXNzIDsKICAgIAlvd2w6dW5pb25PZiAoc2NoZW1hOk93bmVyc2hpcEluZm8gc2NoZW1hOlByb2R1Y3QgZXBvczpGYWNpbGl0eSldOwogIC4KCiMjIyMKIyBFUE9TIFByb3BlcnRpZXMgZGVmaW5pdGlvbgojIyMjCiMgT3JnYW5pemF0aW9uIHByb3BlcnRpZXMKICBlcG9zOmFzc29jaWF0ZWRQcm9qZWN0CiAgICByZGY6dHlwZSBvd2w6T2JqZWN0UHJvcGVydHk7CiAgICByZGZzOmNvbW1lbnQgIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgUHJvamVjdCBpbiB3aGljaCB0aGUgT3JnYW5pemF0aW9uIGlzIGludm9sdmVkLiJAZW4gIDsKICAgIHJkZnM6ZG9tYWluIHNjaGVtYTpPcmdhbml6YXRpb24gOwogICAgcmRmczpyYW5nZSBmb2FmOlByb2plY3QgOwogIC4KIyBFcXVpcG1lbnQgcHJvcGVydGllcwogIGVwb3M6ZHluYW1pY1JhbmdlCiAgICByZGY6dHlwZSBvd2w6T2JqZWN0UHJvcGVydHkgOwogICAgcmRmczpjb21tZW50ICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBmdWxsIHNjYWxlIG1lYXN1cmluZyBhYmlsaXR5LCBpbiBuVCAodW5pdCBhbmQgdmFsdWUpIkBlbiAgOwogICAgcmRmczpkb21haW4gZXBvczpFcXVpcG1lbnQgOwogICAgcmRmczpyYW5nZSByZGZzOkxpdGVyYWwgOwogIC4KICBlcG9zOmZpbHRlcgogICAgcmRmOnR5cGUgb3dsOk9iamVjdFByb3BlcnR5IDsKICAgIHJkZnM6Y29tbWVudCAiVGhpcyBwcm9wZXJ0eSBkZXNjcmliZXMgdGhlIGZpbHRlciB0aGF0IGFuIGluc3RydW1lbnQgbWlnaHQgYXBwbHkgdG8gcHJvZHVjZSBkYXRhIkBlbiAgOwogICAgcmRmczpkb21haW4gZXBvczpFcXVpcG1lbnQgOwogICAgcmRmczpyYW5nZSByZGZzOkxpdGVyYWwgOwogIC4KICBlcG9zOm9yaWVudGF0aW9uCiAgICByZGY6dHlwZSBvd2w6T2JqZWN0UHJvcGVydHkgOwogICAgcmRmczpjb21tZW50ICJUaGlzIHByb3BlcnR5IGRlc2NyaWJlcyBob3cgdGhlIGluc3RydW1lbnQgaXMgb3JpZW50ZWQuIkBlbiAgOwogICAgcmRmczpkb21haW4gZXBvczpFcXVpcG1lbnQgOwogICAgcmRmczpyYW5nZSByZGZzOkxpdGVyYWwgOwogIC4KICBlcG9zOnJlc29sdXRpb24KICAgIHJkZjp0eXBlIG93bDpPYmplY3RQcm9wZXJ0eSA7CiAgICByZGZzOmNvbW1lbnQgIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIHJlc29sdXRpb24iQGVuICA7CiAgICByZGZzOmRvbWFpbiBlcG9zOkVxdWlwbWVudCA7CiAgICByZGZzOnJhbmdlIHJkZnM6TGl0ZXJhbCA7CiAgLgogIGVwb3M6c2FtcGxlUGVyaW9kCiAgICByZGY6dHlwZSBvd2w6T2JqZWN0UHJvcGVydHkgOwogICAgcmRmczpjb21tZW50ICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBzYW1wbGUgcGVyaW9kIkBlbiAgOwogICAgcmRmczpkb21haW4gZXBvczpFcXVpcG1lbnQgOwogICAgcmRmczpyYW5nZSByZGZzOkxpdGVyYWwgOwogIC4KIyBTcGF0aWFsIHByb3BlcnRpZXMjIwogIGVwb3M6bm9ydGhlcm5tb3N0TGF0aXR1ZGUKICAgIHJkZjp0eXBlIG93bDpEYXRhdHlwZVByb3BlcnR5IDsKICAgIHJkZnM6c3ViUHJvcGVydHlPZiBnZW86bGF0OwogICAgcmRmczpjb21tZW50ICJUaGUgV0dTODQgdXBwZXIgYm91bmQgKG1heCkgbGF0aXR1ZGUgb2YgYSBTcGF0aWFsVGhpbmcgKGRlY2ltYWwgZGVncmVlcykiCiAgLgogIGVwb3M6c291dGhlcm5tb3N0TGF0aXR1ZGUKICAgIHJkZjp0eXBlIG93bDpEYXRhdHlwZVByb3BlcnR5IDsKICAgIHJkZnM6c3ViUHJvcGVydHlPZiBnZW86bGF0OwogICAgcmRmczpjb21tZW50ICJUaGUgV0dTODQgbG93ZXIgYm91bmQgKG1pbikgbGF0aXR1ZGUgb2YgYSBTcGF0aWFsVGhpbmcgKGRlY2ltYWwgZGVncmVlcykiCiAgLgogIGVwb3M6d2VzdGVybm1vc3RMb25naXR1ZGUKICAgIHJkZjp0eXBlIG93bDpEYXRhdHlwZVByb3BlcnR5IDsKICAgIHJkZnM6c3ViUHJvcGVydHlPZiBnZW86bG9uZzsKICAgIHJkZnM6Y29tbWVudCAiVGhlIFdHUzg0IGxvd2VyIGJvdW5kIChtaW4pIGxvbmdpdHVkZSBvZiBhIFNwYXRpYWxUaGluZyAoZGVjaW1hbCBkZWdyZWVzKSIKICAuCiAgZXBvczplYXN0ZXJubW9zdExvbmdpdHVkZQogICAgcmRmOnR5cGUgb3dsOkRhdGF0eXBlUHJvcGVydHkgOwogICAgcmRmczpzdWJQcm9wZXJ0eU9mIGdlbzpsb25nOwogICAgcmRmczpjb21tZW50ICJUaGUgV0dTODQgdXBwZXIgYm91bmQgKG1heCkgbG9uZ2l0dWRlIG9mIGEgU3BhdGlhbFRoaW5nIChkZWNpbWFsIGRlZ3JlZXMpIgogIC4KCiMjIyMKIyBTSEFDTCBTaGFwZXMgR3JhcGhzCiMjIyMKZXBvczpEY2F0UmVzb3VyY2VTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDpkZXNjcmlwdGlvbiAiVGhlIHVuaW9uIG9mIENhdGFsb2csIERhdGFzZXQgYW5kIERhdGFTZXJ2aWNlIiA7CiAgc2g6bWVzc2FnZSAiVGhlIG5vZGUgaXMgZWl0aGVyIGEgQ2F0YWxvZywgRGF0YXNldCBvciBhIERhdGFTZXJ2aWNlIiA7CiAgc2g6b3IgKFsgc2g6Y2xhc3MgZGNhdDpDYXRhbG9nIF0KICAgICAgICAgWyBzaDpjbGFzcyBkY2F0OkRhdGFzZXQgXQogICAgICAgICBbIHNoOmNsYXNzIGRjYXQ6RGF0YVNlcnZpY2UgXQogICkKLgplcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6ZGVzY3JpcHRpb24gIkl0IGNoZWNrcyB0aGF0IGEgZGF0YXR5cGUgcHJvcGVydHkgcmVjZWl2ZXMgYSBkYXRlIG9yIGEgZGF0ZVRpbWUgbGl0ZXJhbCJAZW4gIDsKICBzaDptZXNzYWdlICJUaGUgdmFsdWVzIG11c3QgYmUgZGF0YSB0eXBlZCBhcyBlaXRoZXIgeHNkOmRhdGUsIHhzZDpkYXRlVGltZSwgeHNkOmdZZWFyIG9yIHhzZDpnWWVhck1vbnRoIkBlbiAgOwogIHNoOm9yICggWyBzaDpkYXRhdHlwZSB4c2Q6ZGF0ZSA7IF0KICAgICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmRhdGVUaW1lIDsgXQoJICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDpnWWVhciA7IF0KICAgICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmdZZWFyTW9udGggOyBdCiApIDsKLgplcG9zOkNvbnRhY3RQb2ludFR5cGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6ZGVzY3JpcHRpb24gIkEgdmNhcmQ6S2luZCBvciBzY2hlbWE6Q29udGFjdFBvaW50IkBlbiAgOwogIHNoOm1lc3NhZ2UgIlRoZSB2YWx1ZXMgbXVzdCBiZSBkYXRhIGVpdGhlciB2Y2FyZDpLaW5kIG9yIHNjaGVtYTpDb250YWN0UG9pbnQiQGVuICA7CiAgc2g6b3IgKCBbc2g6Y2xhc3MgdmNhcmQ6S2luZCA7IF0KICAgICAgWyBzaDpjbGFzcyBzY2hlbWE6Q29udGFjdFBvaW50IDsgXSkgOwouCmVwb3M6Q2F0YWxvZ1NoYXBlCiAgICBhIHNoOk5vZGVTaGFwZSA7CiAgICBzaDp0YXJnZXRDbGFzcyBkY2F0OkNhdGFsb2cgOwogICMjIyMKICAjIENhdGFsb2cgbWFuZGF0b3J5IHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpkZXNjcmlwdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgZnJlZS10ZXh0IGFjY291bnQgb2YgdGhlIENhdGFsb2cuIFRoaXMgcHJvcGVydHkgY2FuIGJlIHJlcGVhdGVkIGZvciBwYXJhbGxlbCBsYW5ndWFnZSB2ZXJzaW9ucyBvZiB0aGUgZGVzY3JpcHRpb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnB1Ymxpc2hlciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhbiBlbnRpdHkgKG9yZ2FuaXNhdGlvbikgcmVzcG9uc2libGUgZm9yIG1ha2luZyB0aGUgQ2F0YWxvZyBhdmFpbGFibGUuIjsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgICBzaDpvciAoCiAgICAgICAgW3NoOmNsYXNzIGZvYWY6QWdlbnQgOyBdCiAgICAgICAgW3NoOmNsYXNzIHNjaGVtYTpPcmdhbml6YXRpb24gOyBdKSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnRpdGxlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBuYW1lIGdpdmVuIHRvIHRoZSBDYXRhbG9nLiBUaGlzIHByb3BlcnR5IGNhbiBiZSByZXBlYXRlZCBmb3IgcGFyYWxsZWwgbGFuZ3VhZ2UgdmVyc2lvbnMgb2YgdGhlIG5hbWUuIiA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7CiAgIyMjIwogICMgQ2F0YWxvZyByZWNvbW1lbmRlZCBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmRhdGFzZXQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBsaW5rcyB0aGUgQ2F0YWxvZyB3aXRoIGEgRGF0YXNldCB0aGF0IGlzIHBhcnQgb2YgdGhlIENhdGFsb2cuIjsKICAgICAgc2g6Y2xhc3MgZGNhdDpEYXRhc2V0IDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIkRhdGFzZXQgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDppc3N1ZWQgOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJJc3N1ZWQgZGF0ZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0Omlzc3VlZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBkYXRlIG9mIGZvcm1hbCBpc3N1YW5jZSAoZS5nLiwgcHVibGljYXRpb24pIG9mIHRoZSBDYXRhbG9nLiI7CiAgICAgIHNoOm5vZGUgZXBvczpEYXRlT3JEYXRlVGltZURhdGFUeXBlIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZm9hZjpob21lcGFnZSA7CiAgICAgIHNoOmNsYXNzIGZvYWY6RG9jdW1lbnQgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiSG9tZXBhZ2UgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGZvYWY6aG9tZXBhZ2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSB3ZWIgcGFnZSB0aGF0IGFjdHMgYXMgdGhlIG1haW4gcGFnZSBmb3IgdGhlIENhdGFsb2cuIjsKICAgICAgc2g6Y2xhc3MgZm9hZjpEb2N1bWVudCA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpsYW5ndWFnZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGxhbmd1YWdlIHVzZWQgaW4gdGhlIHRleHR1YWwgbWV0YWRhdGEgZGVzY3JpYmluZyB0aXRsZXMsIGRlc2NyaXB0aW9ucywgZXRjLiBvZiB0aGUgRGF0YXNldHMgaW4gdGhlIENhdGFsb2cuIFRoaXMgcHJvcGVydHkgY2FuIGJlIHJlcGVhdGVkIGlmIHRoZSBtZXRhZGF0YSBpcyBwcm92aWRlZCBpbiBtdWx0aXBsZSBsYW5ndWFnZXMuIjsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOmNsYXNzIGRjdDpMaW5ndWlzdGljU3lzdGVtIDsKICAgICAgc2g6bWVzc2FnZSAiTGFuZ3VhZ2UgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpsaWNlbnNlIDsKICAgICAgc2g6Y2xhc3MgZGN0OkxpY2Vuc2VEb2N1bWVudCA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJMaWNlbnNlIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6bGljZW5zZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgbGljZW5jZSB1bmRlciB3aGljaCB0aGUgQ2F0YWxvZyBjYW4gYmUgdXNlZCBvciByZXVzZWQuIjsKICAgICAgc2g6Y2xhc3MgZGN0OkxpY2Vuc2VEb2N1bWVudCA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDptb2RpZmllZCA7CiAgICAgIHNoOm5vZGUgZXBvczpEYXRlT3JEYXRlVGltZURhdGFUeXBlIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIlVwZGF0ZS9tb2RpZmljYXRpb24gZGF0ZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0Om1vZGlmaWVkIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG1vc3QgcmVjZW50IGRhdGUgb24gd2hpY2ggdGhlIENhdGFsb2cgd2FzIG1vZGlmaWVkLiI7CiAgICAgIHNoOm5vZGUgZXBvczpEYXRlT3JEYXRlVGltZURhdGFUeXBlIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnNwYXRpYWwgOwogICAgICBzaDpjbGFzcyBkY3Q6TG9jYXRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBnZW9ncmFwaGljYWwgYXJlYSBjb3ZlcmVkIGJ5IHRoZSBDYXRhbG9nLiI7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OnNlcnZpY2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBzaXRlIG9yIGVuZC1wb2ludCAoRGF0YSBTZXJ2aWNlKSB0aGF0IGlzIGxpc3RlZCBpbiB0aGUgQ2F0YWxvZy4gQXMgZW1wdHkgQ2F0YWxvZyBhcmUgdXN1YWxseSBpbmRpY2F0aW9ucyBvZiBwcm9ibGVtcywgdGhpcyBwcm9wZXJ0eSBzaG91bGQgYmUgY29tYmluZWQgd2l0aCB0aGUgcHJldmlvdXMgcHJvcGVydHkgZGF0YXNldCB0byBpbXBsZW1lbnQgYW4gZW1wdHkgQ2F0YWxvZyBjaGVjay4iOwogICAgICBzaDpjbGFzcyBkY2F0OkRhdGFTZXJ2aWNlIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIlNlcnZpY2UgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OnRoZW1lVGF4b25vbXkgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBnZW9ncmFwaGljIGFyZWEgY292ZXJlZCBieSB0aGUgQ2F0YWxvZydzIERhdGFzZXRzLiI7CiAgICAgIHNoOmNsYXNzIHNrb3M6Q29uY2VwdFNjaGVtZSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJ0aGVtZVRheG9ub215IGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogICMjIyMKICAjIENhdGFsb2cgb3B0aW9uYWwgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDpjYXRhbG9nOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBjYXRhbG9nIHdob3NlIGNvbnRlbnRzIGFyZSBvZiBpbnRlcmVzdCBpbiB0aGUgY29udGV4dCBvZiB0aGlzIGNhdGFsb2cgIjsKICAgICAgc2g6Y2xhc3MgZGNhdDpDYXRhbG9nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6Y3JlYXRvcjsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBBZ2VudCBwcmltYXJpbHkgcmVzcG9uc2libGUgZm9yIHByb2R1Y2luZyB0aGUgY2F0YWxvZy4gIjsKICAgICAgc2g6Y2xhc3MgZm9hZjpBZ2VudDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0Omhhc1BhcnQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSByZWxhdGVkIENhdGFsb2cgdGhhdCBpcyBwYXJ0IG9mIHRoZSBkZXNjcmliZWQgQ2F0YWxvZyI7CiAgICAgIHNoOmNsYXNzIGRjYXQ6Q2F0YWxvZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmlzUGFydE9mIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgcmVsYXRlZCBDYXRhbG9nIGluIHdoaWNoIHRoZSBkZXNjcmliZWQgQ2F0YWxvZyBpcyBwaHlzaWNhbGx5IG9yIGxvZ2ljYWxseSBpbmNsdWRlZC4iOwogICAgICBzaDpjbGFzcyBkY2F0OkNhdGFsb2cgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OnJlY29yZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIENhdGFsb2cgUmVjb3JkIHRoYXQgaXMgcGFydCBvZiB0aGUgQ2F0YWxvZyI7CiAgICAgIHNoOmNsYXNzIGRjYXQ6Q2F0YWxvZ1JlY29yZCA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnJpZ2h0cyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHN0YXRlbWVudCB0aGF0IHNwZWNpZmllcyByaWdodHMgYXNzb2NpYXRlZCB3aXRoIHRoZSBDYXRhbG9nLiI7CiAgICAgIHNoOmNsYXNzIGRjdDpSaWdodHNTdGF0ZW1lbnQgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dGVtcG9yYWwgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSB0ZW1wb3JhbCBwZXJpb2QgdGhhdCB0aGUgQ2F0YWxvZyBjb3ZlcnMuIjsKICAgICAgc2g6Y2xhc3MgZGN0OlBlcmlvZE9mVGltZSA7CiAgICBdIDsKLgplcG9zOkNhdGFsb2dSZWNvcmRTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBkY2F0OkNhdGFsb2dSZWNvcmQ7CiAgIyMjIwogICMgQ2F0YWxvZ1JlY29yZCBtYW5kYXRvcnkgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0Om1vZGlmaWVkIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG1vc3QgcmVjZW50IGRhdGUgb24gd2hpY2ggdGhlIENhdGFsb2cgUmVjb3JkIHdhcyBtb2RpZmllZC4iOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBmb2FmOnByaW1hcnlUb3BpYyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGxpbmtzIHRoZSBDYXRhbG9nIFJlY29yZCB0byB0aGUgRGF0YXNldCBkZXNjcmliZWQgaW4gdGhlIHJlY29yZC4iOwogICAgICBzaDpub2RlIGVwb3M6RGNhdFJlc291cmNlU2hhcGUgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICBdIDsKICAjIyMjCiAgIyBDYXRhbG9nUmVjb3JkIHJlY29tbWVuZGVkIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpjb25mb3Jtc1RvIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhbiBBcHBsaWNhdGlvbiBQcm9maWxlIHRoYXQgdGhlIERhdGFzZXTigJlzIG1ldGFkYXRhIGNvbmZvcm1zIHRvIjsKICAgICAgc2g6bWVzc2FnZSAiQ29uZm9ybXNUbyBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmlkZW50aWZpZXIgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6b3IgKCBbc2g6ZGF0YXR5cGUgeHNkOnN0cmluZztdCiAgICAgICAgW3NoOmRhdGF0eXBlIHhzZDphbnlVUkk7IF0gKTsKICAgICAgc2g6bWVzc2FnZSAiSWRlbnRpZmllciBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmlkZW50aWZpZXI7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtYWluIGlkZW50aWZpZXIgZm9yIHRoZSBDYXRhbG9nIFJlY29yZC4iOwogICAgICBzaDpvciAoIFtzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOyBdCiAgICAgICAgW3NoOmRhdGF0eXBlIHhzZDphbnlVUkk7IF0gKTsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0Omlzc3VlZCA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICAgIHNoOm1lc3NhZ2UgIklzc3VlZCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0Omlzc3VlZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBkYXRlIG9uIHdoaWNoIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgRGF0YXNldCB3YXMgaW5jbHVkZWQgaW4gdGhlIENhdGFsb2cuIjsKICAgICAgc2g6bm9kZSBlcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBhZG1zOnN0YXR1cyA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDphbnlVUkk7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJTdGF0dXMgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGFkbXM6c3RhdHVzIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSB0eXBlIG9mIHRoZSBsYXRlc3QgcmV2aXNpb24gb2YgQ2F0YWxvZyBSZWNvcmQuIjsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICAjIyMjCiAgIyBDYXRhbG9nUmVjb3JkIG9wdGlvbmFsIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpkZXNjcmlwdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgZnJlZS10ZXh0IGFjY291bnQgb2YgdGhlIHJlY29yZC4gVGhpcyBwcm9wZXJ0eSBjYW4gYmUgcmVwZWF0ZWQgZm9yIHBhcmFsbGVsIGxhbmd1YWdlIHZlcnNpb25zIG9mIHRoZSBkZXNjcmlwdGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpsYW5ndWFnZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGxhbmd1YWdlIHVzZWQgaW4gdGhlIHRleHR1YWwgbWV0YWRhdGEgZGVzY3JpYmluZyB0aXRsZXMsIGRlc2NyaXB0aW9ucywgZXRjLiBvZiB0aGUgQ2F0YWxvZyBSZWNvcmQuIFRoaXMgcHJvcGVydHkgY2FuIGJlIHJlcGVhdGVkIGlmIHRoZSBtZXRhZGF0YSBpcyBwcm92aWRlZCBpbiBtdWx0aXBsZSBsYW5ndWFnZXMuIjsKICAgICAgc2g6Y2xhc3MgZGN0Okxpbmd1aXN0aWNTeXN0ZW0gOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpzb3VyY2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIG9yaWdpbmFsIG1ldGFkYXRhIHRoYXQgd2FzIHVzZWQgaW4gY3JlYXRpbmcgdGhlIENhdGFsb2cgUmVjb3JkLiAiOwogICAgICBzaDpjbGFzcyBkY2F0OkNhdGFsb2dSZWNvcmQgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dGl0bGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIG5hbWUgZ2l2ZW4gdG8gdGhlIENhdGFsb2cgUmVjb3JkLiBUaGlzIHByb3BlcnR5IGNhbiBiZSByZXBlYXRlZCBmb3IgcGFyYWxsZWwgbGFuZ3VhZ2UgdmVyc2lvbnMgb2YgdGhlIG5hbWUuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgIF0gOwouCmVwb3M6RGF0YVNlcnZpY2VTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBkY2F0OkRhdGFTZXJ2aWNlOwogICMjIyMKICAjIERhdGFTZXJ2aWNlIG1hbmRhdG9yeSBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmVuZHBvaW50VVJMIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIiBUaGUgcm9vdCBsb2NhdGlvbiBvciBwcmltYXJ5IGVuZHBvaW50IG9mIHRoZSBzZXJ2aWNlIChhbiBJUkkpLiI7CiAgICAgIHNoOm9yICggWyBzaDpjbGFzcyByZGZzOlJlc291cmNlIDsgXQogICAgICAgICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSBdICkgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6aWRlbnRpZmllciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtYWluIGlkZW50aWZpZXIgZm9yIHRoZSBEYXRhIFNlcnZpY2UuIjsKICAgICAgc2g6b3IgKCBbc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsgXQogICAgICAgICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsgXSApIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDp0aXRsZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICIgVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIG5hbWUgZ2l2ZW4gdG8gdGhlIERhdGEgU2VydmljZS4gVGhpcyBwcm9wZXJ0eSBjYW4gYmUgcmVwZWF0ZWQgZm9yIHBhcmFsbGVsIGxhbmd1YWdlIHZlcnNpb25zIG9mIHRoZSBuYW1lLiAiOyAgICAgICAgICAgICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7CiAgIyMjIwogICMgRGF0YVNlcnZpY2UgcmVjb21tZW5kZWQgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmNvbmZvcm1zVG8gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIERhdGEgU2VydmljZSBBUEkgRGVmaW5pdGlvbiBVUkwuIEUuZy4gaHR0cDovL3d3dy5vcGVuZ2lzLm5ldC9kZWYvc2VydmljZVR5cGUvb2djL3dmcy8xLjAuMC4iOwogICAgICBzaDpvciAoIFsgc2g6Y2xhc3MgZGN0OlN0YW5kYXJkIDsgXQogICAgICAgICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7IF0gKTsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmNvbnRhY3RQb2ludCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGNvbnRhY3QgaW5mb3JtYXRpb24gdGhhdCBjYW4gYmUgdXNlZCBmb3Igc2VuZGluZyBjb21tZW50cyBhYm91dCB0aGUgRGF0YSBTZXJ2aWNlLiI7CiAgICAgIHNoOm5vZGUgZXBvczpDb250YWN0UG9pbnRUeXBlIDsKICAgICAgc2g6bWluQ291bnQgMTsKICAgICAgc2g6bWVzc2FnZSAiQ29udGFjdCBQb2ludCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmRlc2NyaXB0aW9uIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICIgVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIGZyZWUtdGV4dCBhY2NvdW50IG9mIHRoZSBEYXRhIFNlcnZpY2UuIFRoaXMgcHJvcGVydHkgY2FuIGJlIHJlcGVhdGVkIGZvciBwYXJhbGxlbCBsYW5ndWFnZSB2ZXJzaW9ucyBvZiB0aGUgZGVzY3JpcHRpb24uIjsKICAgICAgc2g6bWVzc2FnZSAiRGVzY3JpcHRpb24gaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6ZW5kcG9pbnREZXNjcmlwdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgZGVzY3JpcHRpb24gb2YgdGhlIHNlcnZpY2VzIGF2YWlsYWJsZSB2aWEgdGhlIGVuZC1wb2ludHMsIGluY2x1ZGluZyB0aGVpciBvcGVyYXRpb25zLCBwYXJhbWV0ZXJzIGV0Yy4gVGhlIHByb3BlcnR5IGdpdmVzIHNwZWNpZmljIGRldGFpbHMgb2YgdGhlIGFjdHVhbCBlbmRwb2ludCBpbnN0YW5jZXMsIHdoaWxlIGRjdDpjb25mb3Jtc1RvIGlzIHVzZWQgdG8gaW5kaWNhdGUgdGhlIGdlbmVyYWwgc3RhbmRhcmQgb3Igc3BlY2lmaWNhdGlvbiB0aGF0IHRoZSBlbmRwb2ludHMgaW1wbGVtZW50LiAiOwogICAgICBzaDpvciAoIFsgIHNoOmNsYXNzIHJkZnM6UmVzb3VyY2UgOyBdCiAgICAgICAgICAgIFsgIHNoOmNsYXNzIGh5ZHJhOk9wZXJhdGlvbiA7IF0gKTsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgImVuZHBvaW50RGVzY3JpcHRpb24gaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDppc3N1ZWQ7CiAgICAgIHNoOm5vZGUgZXBvczpEYXRlT3JEYXRlVGltZURhdGFUeXBlIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIklzc3VlZCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0Omlzc3VlZDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIiBUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBkYXRlIG9mIHB1YmxpY2F0aW9uIG9mIHRoZSBEYXRhIFNlcnZpY2UuIjsKICAgICAgc2g6bm9kZSBlcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUgOwogICAgICBzaDptYXhDb3VudCAxOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6a2V5d29yZDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIiBUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEga2V5d29yZCBvciB0YWcgZGVzY3JpYmluZyB0aGUgRGF0YSBTZXJ2aWNlLiAiOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6bW9kaWZpZWQgOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJNb2RpZmllZCBkYXRlIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6bW9kaWZpZWQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiIFRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG1vc3QgcmVjZW50IGRhdGUgb24gd2hpY2ggdGhlIERhdGEgU2VydmljZSB3YXMgbW9kaWZpZWQuIjsKICAgICAgc2g6bm9kZSBlcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUgOwogICAgICBzaDptYXhDb3VudCAxOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpwdWJsaXNoZXIgOwogICAgICBzaDpjbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIlB1Ymxpc2hlciBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnB1Ymxpc2hlciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhbiBPcmdhbmlzYXRpb24gcmVzcG9uc2libGUgZm9yIG1ha2luZyB0aGUgRGF0YSBTZXJ2aWNlIGF2YWlsYWJsZS4iOwogICAgICBzaDpjbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uIDsKICAgICAgc2g6bWF4Q291bnQgMTsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OnNlcnZlc0RhdGFzZXQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBjb2xsZWN0aW9uIG9mIGRhdGEgdGhhdCB0aGlzIGRhdGEgc2VydmljZSBjYW4gZGlzdHJpYnV0ZS4iOwogICAgICBzaDpjbGFzcyBkY2F0OkRhdGFzZXQ7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICIgc2VydmVzRGF0YXNldCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDp0aGVtZTsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgY2F0ZWdvcnkgb2YgdGhlIERhdGEgU2VydmljZS4gQSBEYXRhIFNlcnZpY2UgbWF5IGJlIGFzc29jaWF0ZWQgd2l0aCBtdWx0aXBsZSB0aGVtZXMuIjsKICAgICAgc2g6Y2xhc3Mgc2tvczpDb25jZXB0IDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIlRoZW1lIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogICMjIyMKICAjIERhdGFTZXJ2aWNlIG9wdGlvbmFsIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDphY2Nlc3NSaWdodCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IE1BWSBpbmNsdWRlIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBhY2Nlc3Mgb3IgcmVzdHJpY3Rpb25zIGJhc2VkIG9uIHByaXZhY3ksIHNlY3VyaXR5LCBvciBvdGhlciBwb2xpY2llcy4iOwogICAgICBzaDpjbGFzcyBkY3Q6UmlnaHRzU3RhdGVtZW50OwogICAgICBzaDptYXhDb3VudCAxOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpmb3JtYXQ7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgc3RydWN0dXJlIHRoYXQgY2FuIGJlIHJldHVybmVkIGJ5IHF1ZXJ5aW5nIHRoZSBlbmRwb2ludFVSTC4gIjsKICAgICAgc2g6b3IgKCBbIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOyBdCiAgICAgICAgICAgICAgWyBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsgXSApOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgIHNoOnBhdGggZGNhdDpsYW5kaW5nUGFnZSA7CiAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgd2ViIHBhZ2UgdGhhdCBwcm92aWRlcyBhY2Nlc3MgdG8gdGhlIERhdGEgU2VydmljZSBhbmQvb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbi4gSXQgaXMgaW50ZW5kZWQgdG8gcG9pbnQgdG8gYSBsYW5kaW5nIHBhZ2UgYXQgdGhlIG9yaWdpbmFsIGRhdGEgc2VydmljZSBwcm92aWRlciwgbm90IHRvIGEgcGFnZSBvbiBhIHNpdGUgb2YgYSB0aGlyZCBwYXJ0eSwgc3VjaCBhcyBhbiBhZ2dyZWdhdG9yLiI7CiAgICAgc2g6Y2xhc3MgZm9hZjpEb2N1bWVudCA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmxpY2Vuc2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIGxpY2Vuc2UgdW5kZXIgd2hpY2ggdGhlIERhdGEgU2VydmljZSBjYW4gYmUgdXNlZCBvciByZXVzZWQuIjsKICAgICAgc2g6b3IgKCBbc2g6Y2xhc3MgZGN0OkxpY2Vuc2VEb2N1bWVudCA7IF0KICAgICAgICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdICk7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpzcGF0aWFsIDsKICAgICAgc2g6Y2xhc3MgZGN0OkxvY2F0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgZ2VvZ3JhcGhpY2FsIGFyZWEgY292ZXJlZCBieSB0aGUgRGF0YSBTZXJ2aWNlLiI7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnRlbXBvcmFsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgdGVtcG9yYWwgcGVyaW9kIHRoYXQgdGhlIERhdGEgU2VydmljZSBjb3ZlcnMuIjsKICAgICAgc2g6Y2xhc3MgZGN0OlBlcmlvZE9mVGltZSA7CiAgICBdIDsKLgplcG9zOkRhdGFzZXRTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBkY2F0OkRhdGFzZXQgOwogICMjIyMKICAjIERhdGFzZXQgbWFuZGF0b3J5IHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpkZXNjcmlwdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgZnJlZS10ZXh0IGFjY291bnQgb2YgdGhlIERhdGFzZXQuIFRoaXMgcHJvcGVydHkgY2FuIGJlIHJlcGVhdGVkIGZvciBwYXJhbGxlbCBsYW5ndWFnZSB2ZXJzaW9ucyBvZiB0aGUgZGVzY3JpcHRpb24iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmlkZW50aWZpZXIgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbWFpbiBpZGVudGlmaWVyIGZvciB0aGUgRGF0YXNldCwgZS5nLiB0aGUgVVJJIG9yIG90aGVyIHVuaXF1ZSBpZGVudGlmaWVyIGluIHRoZSBjb250ZXh0IG9mIHRoZSBDYXRhbG9nLiI7CiAgICAgIHNoOm9yICggWyBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsgXQogICAgICAgICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7IF0gKTsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDp0aXRsZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgbmFtZSBnaXZlbiB0byB0aGUgRGF0YXNldC4gVGhpcyBwcm9wZXJ0eSBjYW4gYmUgcmVwZWF0ZWQgZm9yIHBhcmFsbGVsIGxhbmd1YWdlIHZlcnNpb25zIG9mIHRoZSBuYW1lLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgIF0gOwogICMjIyMKICAjIERhdGFzZXQgcmVjb21tZW5kZWQgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDpjb250YWN0UG9pbnQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBjb250YWN0IGluZm9ybWF0aW9uIHRoYXQgY2FuIGJlIHVzZWQgZm9yIHNlbmRpbmcgY29tbWVudHMgYWJvdXQgdGhlIERhdGFzZXQuIjsKICAgICAgc2g6bm9kZSBlcG9zOkNvbnRhY3RQb2ludFR5cGUgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiQ29udGFjdCBwb2ludCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDpkaXN0cmlidXRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBsaW5rcyB0aGUgRGF0YXNldCB0byBhbiBhdmFpbGFibGUgRGlzdHJpYnV0aW9uLiI7CiAgICAgIHNoOmNsYXNzIGRjYXQ6RGlzdHJpYnV0aW9uOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiRGlzdHJpYnV0aW9uIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmtleXdvcmQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIGtleXdvcmQgb3IgdGFnIGRlc2NyaWJpbmcgdGhlIERhdGFzZXQuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJLZXl3b3JkIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6cHVibGlzaGVyIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGFuIGVudGl0eSAoT3JnYW5pc2F0aW9uKSByZXNwb25zaWJsZSBmb3IgbWFraW5nIHRoZSBEYXRhc2V0IGF2YWlsYWJsZS4iOwogICAgICBzaDpvciAoIFsgc2g6Y2xhc3MgZm9hZjpBZ2VudCA7IF0KICAgICAgICAgICAgICBbIHNoOmNsYXNzIHNjaGVtYTpPcmdhbml6YXRpb24gOyBdICkgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiUHVibGlzaGVyIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6c3BhdGlhbCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGdlb2dyYXBoaWMgcmVnaW9uIHRoYXQgaXMgY292ZXJlZCBieSB0aGUgRGF0YXNldC4iOwogICAgICBzaDpjbGFzcyBkY3Q6TG9jYXRpb24gOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnRlbXBvcmFsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgdGVtcG9yYWwgcGVyaW9kIHRoYXQgdGhlIERhdGFzZXQgY292ZXJzLiI7CiAgICAgIHNoOmNsYXNzIGRjdDpQZXJpb2RPZlRpbWUgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDp0aGVtZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGNhdGVnb3J5IG9mIHRoZSBEYXRhc2V0LiBBIERhdGFzZXQgbWF5IGJlIGFzc29jaWF0ZWQgd2l0aCBtdWx0aXBsZSB0aGVtZXMuIjsKICAgICAgc2g6Y2xhc3Mgc2tvczpDb25jZXB0IDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIlRoZW1lIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogICMjIyMKICAjIERhdGFzZXQgb3B0aW9uYWwgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmFjY2Vzc1JpZ2h0cyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBpbmZvcm1hdGlvbiB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBEYXRhc2V0IGlzIG9wZW4gZGF0YSwgaGFzIGFjY2VzcyByZXN0cmljdGlvbnMgb3IgaXMgbm90IHB1YmxpYy4gQSBjb250cm9sbGVkIHZvY2FidWxhcnkgd2l0aCB0aHJlZSBtZW1iZXJzICg6cHVibGljLCA6cmVzdHJpY3RlZCwgOm5vbi1wdWJsaWMpIHdpbGwgYmUgY3JlYXRlZCBhbmQgbWFpbnRhaW5lZCBieSB0aGUgUHVibGljYXRpb25zIE9mZmljZSBvZiB0aGUgRVUuIjsKICAgICAgc2g6Y2xhc3MgZGN0OlJpZ2h0c1N0YXRlbWVudCA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDphY2NydWFsUGVyaW9kaWNpdHkgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIGZyZXF1ZW5jeSBhdCB3aGljaCB0aGUgRGF0YXNldCBpcyB1cGRhdGVkLiI7CiAgICAgICNzaDpjbGFzcyBkY3Q6RnJlcXVlbmN5IDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpjb25mb3Jtc1RvIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGFuIGltcGxlbWVudGluZyBydWxlIG9yIG90aGVyIHNwZWNpZmljYXRpb24uIjsKICAgICAgc2g6Y2xhc3MgZGN0OlN0YW5kYXJkIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6Y3JlYXRlZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBkYXRlIG9uIHdoaWNoIHRoZSBEYXRhc2V0IHdhcyBjcmVhdGVkLiI7CiAgICAgIHNoOm5vZGUgZXBvczpEYXRlT3JEYXRlVGltZURhdGFUeXBlIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmNyZWF0b3IgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiIFRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBlbnRpdHkgcmVzcG9uc2libGUgZm9yIHByb2R1Y2luZyB0aGUgZGF0YXNldC4iOwogICAgICBzaDpvciAoIFsgc2g6Y2xhc3MgZm9hZjpBZ2VudCA7IF0KICAgICAgICAgICAgICBbIHNoOmNsYXNzIHNjaGVtYTpPcmdhbml6YXRpb24gOyBdICkgOwogICAgXSA7CiAgIyMgU3VwcG9ydCBmb3IgY29sbGVjdGlvbnMgb2YgZGF0YXNldHMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0Omhhc1BhcnQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSByZWxhdGVkIERhdGFzZXQgdGhhdCBpcyBwYXJ0IG9mIHRoZSBkZXNjcmliZWQgRGF0YXNldC4iOwogICAgICBzaDpjbGFzcyBkY2F0OkRhdGFzZXQgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRxdjpoYXNRdWFsaXR5QW5ub3RhdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHN0YXRlbWVudCByZWxhdGVkIHRvIHF1YWxpdHkgb2YgdGhlIERhdGFzZXQsIGluY2x1ZGluZyByYXRpbmcsIHF1YWxpdHkgY2VydGlmaWNhdGUgdGhhdCBjYW4gYmUgYXNzb2NpYXRlZCB0byB0aGUgRGF0YXNldC4gIjsKICAgICAgc2g6Y2xhc3Mgb2E6QW5ub3RhdGlvbiA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDpoYXNWZXJzaW9uIDsgIyAtPm1vZGlmaWVkCiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHJlbGF0ZWQgRGF0YXNldCB0aGF0IGlzIGEgdmVyc2lvbiwgZWRpdGlvbiwgb3IgYWRhcHRhdGlvbiBvZiB0aGUgZGVzY3JpYmVkIERhdGFzZXQuIjsKICAgICAgc2g6Y2xhc3MgZGNhdDpEYXRhc2V0IDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBhZG1zOmlkZW50aWZpZXIgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBzZWNvbmRhcnkgaWRlbnRpZmllciBvZiB0aGUgRGF0YXNldCwgc3VjaCBhcyBNQVNUL0FEUywgRGF0YUNpdGUsIERPSSwgRVpJRCBvciBXM0lELiI7CiAgICAgIHNoOmNsYXNzIGFkbXM6SWRlbnRpZmllciA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmlzUGFydE9mIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgcmVsYXRlZCBEYXRhc2V0IGluIHdoaWNoIHRoZSBkZXNjcmliZWQgRGF0YXNldCBpcyBwaHlzaWNhbGx5IG9yIGxvZ2ljYWxseSBpbmNsdWRlZC4iOwogICAgICBzaDpjbGFzcyBkY2F0OkRhdGFzZXQgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDppc1JlZmVyZW5jZWRCeSA7CiAgICAgIHNoOm5vZGVLaW5kIHNoOkJsYW5rTm9kZU9ySVJJIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgaXMgYWJvdXQgYSByZWxhdGVkIHJlc291cmNlLCBzdWNoIGFzIGEgcHVibGljYXRpb24sIHRoYXQgcmVmZXJlbmNlcywgY2l0ZXMsIG9yIG90aGVyd2lzZSBwb2ludHMgdG8gdGhlIGRhdGFzZXQuIjsKICAgICAgc2g6Y2xhc3MgcmRmczpSZXNvdXJjZSAgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6aXNWZXJzaW9uT2YgOyAjIC0+bW9kaWZpZWQKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgcmVsYXRlZCBEYXRhc2V0IG9mIHdoaWNoIHRoZSBkZXNjcmliZWQgRGF0YXNldCBpcyBhIHZlcnNpb24sIGVkaXRpb24sIG9yIGFkYXB0YXRpb24uIjsKICAgICAgc2g6Y2xhc3MgZGNhdDpEYXRhc2V0IDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6aXNzdWVkIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGRhdGUgb2YgZm9ybWFsIGlzc3VhbmNlIChlLmcuLCBwdWJsaWNhdGlvbikgb2YgdGhlIERhdGFzZXQuIjsKICAgICAgc2g6bm9kZSBlcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmxhbmRpbmdQYWdlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgd2ViIHBhZ2UgdGhhdCBwcm92aWRlcyBhY2Nlc3MgdG8gdGhlIERhdGFzZXQsIGl0cyBEaXN0cmlidXRpb25zIGFuZC9vciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uLiBJdCBpcyBpbnRlbmRlZCB0byBwb2ludCB0byBhIGxhbmRpbmcgcGFnZSBhdCB0aGUgb3JpZ2luYWwgZGF0YSBwcm92aWRlciwgbm90IHRvIGEgcGFnZSBvbiBhIHNpdGUgb2YgYSB0aGlyZCBwYXJ0eSwgc3VjaCBhcyBhbiBhZ2dyZWdhdG9yLiI7CiAgICAgIHNoOmNsYXNzIGZvYWY6RG9jdW1lbnQgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpsYW5ndWFnZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGxhbmd1YWdlIG9mIHRoZSBEYXRhc2V0LiBUaGlzIHByb3BlcnR5IGNhbiBiZSByZXBlYXRlZCBpZiB0aGVyZSBhcmUgbXVsdGlwbGUgbGFuZ3VhZ2VzIGluIHRoZSBEYXRhc2V0LiI7CiAgICAgIHNoOmNsYXNzIGRjdDpMaW5ndWlzdGljU3lzdGVtIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6bW9kaWZpZWQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbW9zdCByZWNlbnQgZGF0ZSBvbiB3aGljaCB0aGUgRGF0YXNldCB3YXMgY2hhbmdlZCBvciBtb2RpZmllZC4iOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6bm9kZSBlcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGZvYWY6cGFnZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHBhZ2Ugb3IgZG9jdW1lbnQgYWJvdXQgdGhpcyBEYXRhc2V0LiI7CiAgICAgIHNoOmNsYXNzIGZvYWY6RG9jdW1lbnQgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpwcm92ZW5hbmNlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBzdGF0ZW1lbnQgYWJvdXQgdGhlIGxpbmVhZ2Ugb2YgYSBEYXRhc2V0LiI7CiAgICAgIHNoOmNsYXNzIGRjdDpQcm92ZW5hbmNlU3RhdGVtZW50IDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBwcm92OnF1YWxpZmllZEF0dHJpYnV0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIiBUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGxpaW5rIHRvIGFuIEFnZW50IGhhdmluZyBzb21lIGZvcm0gb2YgcmVzcG9uc2liaWxpdHkgZm9yIHRoZSByZXNvdXJjZSAiOwogICAgICBzaDpjbGFzcyBwcm92OkF0dHJpYnV0aW9uICA7CiAgICBdOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OnF1YWxpZmllZFJlbGF0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIiBUaGlzIHByb3BlcnR5IHByb3ZpZGVzIGEgbGluayB0byBhIGRlc2NyaXB0aW9uIG9mIGEgcmVsYXRpb25zaGlwIHdpdGggYW5vdGhlciByZXNvdXJjZSI7CiAgICAgIHNoOmNsYXNzIGRjYXQ6UmVsYXRpb25zaGlwCiAgICBdOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6cmVsYXRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSByZWxhdGVkIHJlc291cmNlLiI7CiAgICAgIHNoOmNsYXNzIHJkZnM6UmVzb3VyY2UgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGFkbXM6c2FtcGxlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgc2FtcGxlIGRpc3RyaWJ1dGlvbiBvZiB0aGUgZGF0YXNldCI7CiAgICAgIHNoOmNsYXNzIGRjYXQ6RGlzdHJpYnV0aW9uIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6c291cmNlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgcmVsYXRlZCBEYXRhc2V0IGZyb20gd2hpY2ggdGhlIGRlc2NyaWJlZCBEYXRhc2V0IGlzIGRlcml2ZWQuIjsKICAgICAgc2g6Y2xhc3MgZGNhdDpEYXRhc2V0IDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OnNwYXRpYWxSZXNvbHV0aW9uSW5NZXRlcnMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIG1pbmltdW0gc3BhdGlhbCBzZXBhcmF0aW9uIHJlc29sdmFibGUgaW4gYSBkYXRhc2V0LCBtZWFzdXJlZCBpbiBtZXRlcnMuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmRlY2ltYWwgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF07CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6dGVtcG9yYWxSZXNvbHV0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIiBUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgbWluaW11bSB0aW1lIHBlcmlvZCByZXNvbHZhYmxlIGluIHRoZSBkYXRhc2V0LiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpkdXJhdGlvbiA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXTsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnR5cGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIHR5cGUgb2YgdGhlIERhdGFzZXQuIEEgY29udHJvbGxlZCB2b2NhYnVsYXJ5IGZvciB0aGUgdmFsdWVzIGhhcyBub3QgYmVlbiBlc3RhYmxpc2hlZC4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDp2ZXJzaW9uIDsgIyAtPm1vZGlmaWVkCiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgdmVyc2lvbiBudW1iZXIgb3Igb3RoZXIgdmVyc2lvbiBkZXNpZ25hdGlvbiBvZiB0aGUgRGF0YXNldC4iOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBhZG1zOnZlcnNpb25Ob3RlcyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgZGVzY3JpcHRpb24gb2YgdGhlIGRpZmZlcmVuY2VzIGJldHdlZW4gdGhpcyB2ZXJzaW9uIGFuZCBhIHByZXZpb3VzIHZlcnNpb24gb2YgdGhlIERhdGFzZXQuIFRoaXMgcHJvcGVydHkgY2FuIGJlIHJlcGVhdGVkIGZvciBwYXJhbGxlbCBsYW5ndWFnZSB2ZXJzaW9ucyBvZiB0aGUgdmVyc2lvbiBub3Rlcy4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBwcm92Ondhc0dlbmVyYXRlZEJ5IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIiBUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhbiBhY3Rpdml0eSB0aGF0IGdlbmVyYXRlZCwgb3IgcHJvdmlkZXMgdGhlIGJ1c2luZXNzIGNvbnRleHQgZm9yLCB0aGUgY3JlYXRpb24gb2YgdGhlIGRhdGFzZXQuIjsKICAgICAgc2g6Y2xhc3MgcHJvdjpBY3Rpdml0eSA7CiAgICBdOwouCmVwb3M6RGF0YXNldFNlcmllc1NoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIGRjYXQ6RGF0YXNldFNlcmllcyA7CiAgIyMjIwogICMgRGF0YXNldFNlcmllcyBtYW5kYXRvcnkgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnRpdGxlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBuYW1lIGdpdmVuIHRvIHRoZSBEYXRhc2V0IFNlcmllcy4gVGhpcyBwcm9wZXJ0eSBjYW4gYmUgcmVwZWF0ZWQgZm9yIHBhcmFsbGVsIGxhbmd1YWdlIHZlcnNpb25zIG9mIHRoZSBuYW1lLiIgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICBdIDsKICAjIyMjCiAgIyBEYXRhc2V0U2VyaWVzIHJlY29tbWVuZGVkIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6Y29udGFjdFBvaW50IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgY29udGFjdCBpbmZvcm1hdGlvbiB0aGF0IGNhbiBiZSB1c2VkIGZvciBzZW5kaW5nIGNvbW1lbnRzIGFib3V0IHRoZSBhYm91dCB0aGUgRGF0YXNldCBTZXJpZXMuIjsKICAgICAgc2g6bm9kZSBlcG9zOkNvbnRhY3RQb2ludFR5cGUgOwogICAgICBzaDptaW5Db3VudCAxOwogICAgICBzaDptZXNzYWdlICJDb250YWN0IFBvaW50IGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnB1Ymxpc2hlciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHJlc3BvbnNpYmxlIGZvciBlbnN1cmluZyB0aGUgY29oZXJlbmN5IG9mIHRoZSBEYXRhc2V0IFNlcmllcy4gVGhlIHB1Ymxpc2hlciBvZiB0aGUgZGF0YXNldCBzZXJpZXMgbWF5IG5vdCBiZSB0aGUgcHVibGlzaGVyIG9mIGFsbCBkYXRhc2V0cy4iOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6b3IgKAogICAgICAgICAgW3NoOmNsYXNzIGZvYWY6QWdlbnQgOyBdCiAgICAgICAgICBbc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbiA7IF0pIDsKICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnNwYXRpYWwgOwogICAgICBzaDpjbGFzcyBkY3Q6TG9jYXRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgZ2VvZ3JhcGhpYyByZWdpb24gdGhhdCBpcyBjb3ZlcmVkIGJ5IHRoZSBEYXRhc2V0IFNlcmllcy4gIjsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dGVtcG9yYWwgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSB0ZW1wb3JhbCBwZXJpb2QgdGhhdCB0aGUgRGF0YXNldCBTZXJpZXMgY292ZXJzLiI7CiAgICAgIHNoOmNsYXNzIGRjdDpQZXJpb2RPZlRpbWUgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgXSA7CiAgIyMjIwogICMgRGF0YXNldFNlcmllcyBvcHRpb25hbCBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6YWNjcnVhbFBlcmlvZGljaXR5IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBmcmVxdWVuY3kgYXQgd2hpY2ggdGhlIERhdGFzZXQgU2VyaWVzIGlzIHVwZGF0ZWQuIjsKICAgICAgI3NoOmNsYXNzIGRjdDpGcmVxdWVuY3kgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpkZXNjcmlwdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgZnJlZS10ZXh0IGFjY291bnQgb2YgdGhlIERhdGFzZXQgU2VyaWVzLiBUaGlzIHByb3BlcnR5IGNhbiBiZSByZXBlYXRlZCBmb3IgcGFyYWxsZWwgbGFuZ3VhZ2UgdmVyc2lvbnMgb2YgdGhlIGRlc2NyaXB0aW9uLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmZpcnN0IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGZpcnN0IHJlc291cmNlIGluIGFuIG9yZGVyZWQgY29sbGVjdGlvbiBvciBzZXJpZXMgb2YgcmVzb3VyY2VzLCB0byB3aGljaCB0aGUgY3VycmVudCByZXNvdXJjZSBiZWxvbmdzLiI7CiAgICAgIHNoOmNsYXNzIGRjYXQ6RGF0YXNldDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDppc3N1ZWQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgZGF0ZSBvZiBmb3JtYWwgaXNzdWFuY2UgKGUuZy4sIHB1YmxpY2F0aW9uKSBvZiB0aGUgRGF0YXNldCBTZXJpZXMuICI7CiAgICAgIHNoOm5vZGUgZXBvczpEYXRlT3JEYXRlVGltZURhdGFUeXBlIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6bGFzdCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBsYXN0IHJlc291cmNlIGluIGFuIG9yZGVyZWQgY29sbGVjdGlvbiBvciBzZXJpZXMuLiI7CiAgICAgIHNoOmNsYXNzIGRjYXQ6RGF0YXNldDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDptb2RpZmllZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtb3N0IHJlY2VudCBkYXRlIG9uIHdoaWNoIHRoZSBEYXRhc2V0IFNlcmllcyB3YXMgY2hhbmdlZCBvciBtb2RpZmllZC4iOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OnNlcmllc01lbWJlciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIG1lbWJlciBvZiB0aGUgRGF0YXNldCBTZXJpZXMuIjsKICAgICAgc2g6Y2xhc3MgZGNhdDpEYXRhc2V0OwogIF0gOwouCmVwb3M6RGlzdHJpYnV0aW9uU2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3MgZGNhdDpEaXN0cmlidXRpb247CiAgIyMjIwogICMgRGlzdHJpYnV0aW9uIG1hbmRhdG9yeSBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmFjY2Vzc1VSTCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgVVJMIHRoYXQgZ2l2ZXMgYWNjZXNzIHRvIGEgRGlzdHJpYnV0aW9uIG9mIHRoZSBEYXRhc2V0LiBUaGUgcmVzb3VyY2UgYXQgdGhlIGFjY2VzcyBVUkwgbWF5IGNvbnRhaW4gaW5mb3JtYXRpb24gYWJvdXQgaG93IHRvIGdldCB0aGUgRGF0YXNldC4iOwogICAgICBzaDpvciAoIFsgc2g6Y2xhc3MgcmRmczpSZXNvdXJjZSA7IF0KICAgICAgICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdICkgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6aWRlbnRpZmllciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtYWluIGlkZW50aWZpZXIgZm9yIHRoZSBEaXN0cmlidXRpb24uIjsKICAgICAgc2g6b3IgKCBbIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOyBdCiAgICAgICAgWyBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsgXSApOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICAjIyMjCiAgIyBEaXN0cmlidXRpb24gcmVjb21tZW5kZWQgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdGFwOmF2YWlsYWJpbGl0eSA7CiAgICAgIHNoOmNsYXNzIHNrb3M6Q29uY2VwdDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIkF2YWlsYWJpbGl0eSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0YXA6YXZhaWxhYmlsaXR5IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIiBUaGlzIHByb3BlcnR5IGluZGljYXRlcyBob3cgbG9uZyBpdCBpcyBwbGFubmVkIHRvIGtlZXAgdGhlIERpc3RyaWJ1dGlvbiBvZiB0aGUgRGF0YXNldCBhdmFpbGFibGUuICI7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgICBzaDpjbGFzcyBza29zOkNvbmNlcHQ7CiAgICBdOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6ZGVzY3JpcHRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIGZyZWUtdGV4dCBhY2NvdW50IG9mIHRoZSBEaXN0cmlidXRpb24uIFRoaXMgcHJvcGVydHkgY2FuIGJlIHJlcGVhdGVkIGZvciBwYXJhbGxlbCBsYW5ndWFnZSB2ZXJzaW9ucyBvZiB0aGUgZGVzY3JpcHRpb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJEZXNjcmlwdGlvbiBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmZvcm1hdCA7CiAgICAgIHNoOm9yICggWyBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsgXQogICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7IF0gKTsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIkZvcm1hdCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmZvcm1hdCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgZmlsZSBmb3JtYXQgb2YgdGhlIERpc3RyaWJ1dGlvbi4iOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7IF0KICAgICAgICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdICk7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpsaWNlbnNlIDsKICAgICAgc2g6b3IgKCBbIHNoOmNsYXNzIGRjdDpMaWNlbnNlRG9jdW1lbnQgOyBdCiAgICAgICAgICAgICAgWyBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsgXSApOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiTGljZW5zZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmxpY2Vuc2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIGxpY2VuY2UgdW5kZXIgd2hpY2ggdGhlIERpc3RyaWJ1dGlvbiBpcyBtYWRlIGF2YWlsYWJsZS4iOwogICAgICBzaDpvciAoIFsgc2g6Y2xhc3MgZGN0OkxpY2Vuc2VEb2N1bWVudCA7IF0KICAgICAgICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdICk7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgIyMjIwogICMgRGlzdHJpYnV0aW9uIG9wdGlvbmFsIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6YWNjZXNzU2VydmljZTsKICAgICAgc2g6ZGVzY3JpcHRpb24gIiBUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGRhdGEgc2VydmljZSB0aGF0IGdpdmVzIGFjY2VzcyB0byB0aGUgZGlzdHJpYnV0aW9uIG9mIHRoZSBkYXRhc2V0LiAiOwogICAgICBzaDpjbGFzcyBkY2F0OkRhdGFTZXJ2aWNlOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6Ynl0ZVNpemUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgc2l6ZSBvZiBhIERpc3RyaWJ1dGlvbiBpbiBieXRlcy4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6bm9uTmVnYXRpdmVJbnRlZ2VyIDsgIyAtPm1vZGlmaWVkCiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNwZHg6Y2hlY2tzdW0gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBwcm92aWRlcyBhIG1lY2hhbmlzbSB0aGF0IGNhbiBiZSB1c2VkIHRvIHZlcmlmeSB0aGF0IHRoZSBjb250ZW50cyBvZiBhIERpc3RyaWJ1dGlvbiBoYXZlIG5vdCBjaGFuZ2VkLiAiOwogICAgICBzaDpjbGFzcyBzcGR4OkNoZWNrc3VtIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDpjb21wcmVzc0Zvcm1hdCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgZm9ybWF0IG9mIHRoZSBmaWxlIGluIHdoaWNoIHRoZSBkYXRhIGlzIGNvbnRhaW5lZCBpbiBhIGNvbXByZXNzZWQgZm9ybSwgZS5nLiB0byByZWR1Y2UgdGhlIHNpemUgb2YgdGhlIGRvd25sb2FkYWJsZSBmaWxlLiBJdCBTSE9VTEQgYmUgZXhwcmVzc2VkIHVzaW5nIGEgbWVkaWEgdHlwZSBhcyBkZWZpbmVkIGluIHRoZSBvZmZpY2lhbCByZWdpc3RlciBvZiBtZWRpYSB0eXBlcyBtYW5hZ2VkIGJ5IElBTkEuICI7CiAgICAgIHNoOmNsYXNzIGRjdDpNZWRpYVR5cGU7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXTsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmNvbmZvcm1zVG8gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYW4gZXN0YWJsaXNoZWQgc2NoZW1hIHRvIHdoaWNoIHRoZSBkZXNjcmliZWQgRGlzdHJpYnV0aW9uIGNvbmZvcm1zLiI7CiAgICAgIHNoOm9yICggWyBzaDpjbGFzcyBkY3Q6U3RhbmRhcmQgOyBdCiAgICAgICAgICAgICAgWyBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsgXSApOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6ZG93bmxvYWRVUkwgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIFVSTCB0aGF0IGlzIGEgZGlyZWN0IGxpbmsgdG8gYSBkb3dubG9hZGFibGUgZmlsZSBpbiBhIGdpdmVuIGZvcm1hdC4iOwogICAgICAjc2g6Y2xhc3MgcmRmczpSZXNvdXJjZSA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIG9kcmw6aGFzUG9saWN5IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIiBUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgcG9saWN5IGV4cHJlc3NpbmcgdGhlIHJpZ2h0cyBhc3NvY2lhdGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbiBpZiB1c2luZyB0aGUgT0RSTCB2b2NhYnVsYXJ5ICI7CiAgICAgIHNoOmNsYXNzIG9kcmw6UG9saWN5OwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6aXNzdWVkIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGRhdGUgb2YgZm9ybWFsIGlzc3VhbmNlIChlLmcuLCBwdWJsaWNhdGlvbikgb2YgdGhlIERpc3RyaWJ1dGlvbi4iOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpsYW5ndWFnZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGxhbmd1YWdlIHVzZWQgaW4gdGhlIERpc3RyaWJ1dGlvbi4gVGhpcyBwcm9wZXJ0eSBjYW4gYmUgcmVwZWF0ZWQgaWYgdGhlIG1ldGFkYXRhIGlzIHByb3ZpZGVkIGluIG11bHRpcGxlIGxhbmd1YWdlcy4iOwogICAgICBzaDpjbGFzcyBkY3Q6TGluZ3Vpc3RpY1N5c3RlbSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDptZWRpYVR5cGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIG1lZGlhIHR5cGUgb2YgdGhlIERpc3RyaWJ1dGlvbiBhcyBkZWZpbmVkIGluIHRoZSBvZmZpY2lhbCByZWdpc3RlciBvZiBtZWRpYSB0eXBlcyBtYW5hZ2VkIGJ5IElBTkEuIjsKICAgICAgc2g6Y2xhc3MgZGN0Ok1lZGlhVHlwZSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDptb2RpZmllZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtb3N0IHJlY2VudCBkYXRlIG9uIHdoaWNoIHRoZSBEaXN0cmlidXRpb24gd2FzIGNoYW5nZWQgb3IgbW9kaWZpZWQuIjsKICAgICAgc2g6bm9kZSBlcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OnBhY2thZ2VGb3JtYXQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIGZvcm1hdCBvZiB0aGUgZmlsZSBpbiB3aGljaCBvbmUgb3IgbW9yZSBkYXRhIGZpbGVzIGFyZSBncm91cGVkIHRvZ2V0aGVyLCBlLmcuIHRvIGVuYWJsZSBhIHNldCBvZiByZWxhdGVkIGZpbGVzIHRvIGJlIGRvd25sb2FkZWQgdG9nZXRoZXIuIEl0IFNIT1VMRCBiZSBleHByZXNzZWQgdXNpbmcgYSBtZWRpYSB0eXBlIGFzIGRlZmluZWQgaW4gdGhlIG9mZmljaWFsIHJlZ2lzdGVyIG9mIG1lZGlhIHR5cGVzIG1hbmFnZWQgYnkgSUFOQS4gIjsKICAgICAgc2g6Y2xhc3MgZGN0Ok1lZGlhVHlwZTsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBmb2FmOnBhZ2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBwYWdlIG9yIGRvY3VtZW50IGFib3V0IHRoaXMgRGlzdHJpYnV0aW9uLiI7CiAgICAgIHNoOmNsYXNzIGZvYWY6RG9jdW1lbnQgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpyaWdodHMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBzdGF0ZW1lbnQgdGhhdCBzcGVjaWZpZXMgcmlnaHRzIGFzc29jaWF0ZWQgd2l0aCB0aGUgRGlzdHJpYnV0aW9uLiI7CiAgICAgIHNoOmNsYXNzIGRjdDpSaWdodHNTdGF0ZW1lbnQgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OnNwYXRpYWxSZXNvbHV0aW9uSW5NZXRlcnMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIG1pbmltdW0gc3BhdGlhbCBzZXBhcmF0aW9uIHJlc29sdmFibGUgaW4gYSBkYXRhc2V0IGRpc3RyaWJ1dGlvbiwgbWVhc3VyZWQgaW4gbWV0ZXJzLiAiOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6ZGVjaW1hbCA7CiAgICBdOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBhZG1zOnN0YXR1cyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgc3RhdHVzIG9mIHRoZSBkaXN0cmlidXRpb24gaW4gdGhlIGNvbnRleHQgb2YgbWF0dXJpdHkgbGlmZWN5Y2xlLiBJdCBNVVNUIHRha2Ugb25lIG9mIHRoZSB2YWx1ZXMgQ29tcGxldGVkLCBEZXByZWNhdGVkLCBVbmRlciBEZXZlbG9wbWVudCwgV2l0aGRyYXduLiI7CiAgICAgIHNoOmNsYXNzIHNrb3M6Q29uY2VwdCA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6dGVtcG9yYWxSZXNvbHV0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIiBUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgbWluaW11bSB0aW1lIHBlcmlvZCByZXNvbHZhYmxlIGluIHRoZSBkYXRhc2V0IGRpc3RyaWJ1dGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6ZHVyYXRpb24gOwogICAgXTsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnRpdGxlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBuYW1lIGdpdmVuIHRvIHRoZSBEaXN0cmlidXRpb24uIFRoaXMgcHJvcGVydHkgY2FuIGJlIHJlcGVhdGVkIGZvciBwYXJhbGxlbCBsYW5ndWFnZSB2ZXJzaW9ucyBvZiB0aGUgZGVzY3JpcHRpb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICBdIDsKLgplcG9zOkFnZW50U2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3MgZm9hZjpBZ2VudDsKICAjIyMjCiAgIyBBZ2VudCBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBmb2FmOm5hbWUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbmFtZSBvZiBBZ2VudC4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dHlwZSA7CiAgICAgIHNoOmNsYXNzIHNrb3M6Q29uY2VwdCA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJUeXBlIG9mIHRoZSBhZ2VudCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dHlwZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHR5cGUgb2YgdGhlIEFnZW50IHRoYXQgbWFrZXMgdGhlIENhdGFsb2csIENhdGFsb2cgUmVjb3JkLCBEYXRhIFNlcnZpY2UsIG9yIERhdGFzZXQgYXZhaWxhYmxlLiAiOwogICAgICBzaDpjbGFzcyBza29zOkNvbmNlcHQgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwouCmVwb3M6Q29uY2VwdFNjaGVtZVNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIHNrb3M6Q29uY2VwdFNjaGVtZSA7CiAgIyMjIwogICMgQ29uY2VwdFNjaGVtZSBtYW5kYXRvcnkgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnRpdGxlIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHNjaGVtZS4iOwogICAgXSA7CiAgIyMjIwogICMgQ29uY2VwdFNjaGVtZSByZWNvbW1lbmRlZCBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6ZGVzY3JpcHRpb24gOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiRGVzY3JpcHRpb24gaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpkZXNjcmlwdGlvbiA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgZGVzY3JpcHRpb24gb2YgdGhlIGNhdGVnb3J5IHNjaGVtZS4iOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwouCmVwb3M6Q29uY2VwdFNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIHNrb3M6Q29uY2VwdCA7CiAgIyMjIwogICMgQ29uY2VwdCBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBza29zOmRlZmluaXRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIHN0YXRlbWVudCBvciBmb3JtYWwgZXhwbGFuYXRpb24gb2YgdGhlIG1lYW5pbmcgb2YgYSBjb25jZXB0LiIgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNrb3M6aW5TY2hlbWU7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJSZWxhdGVzIGEgcmVzb3VyY2UgKGZvciBleGFtcGxlIGEgY29uY2VwdCkgdG8gYSBjb25jZXB0IHNjaGVtZSBpbiB3aGljaCBpdCBpcyBpbmNsdWRlZC4iIDsKICAgICAgc2g6Y2xhc3Mgc2tvczpDb25jZXB0U2NoZW1lIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNrb3M6cHJlZkxhYmVsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBwcmVmZXJyZWQgbGFiZWwgb2YgdGhlIGNhdGVnb3J5LiBUaGlzIHByb3BlcnR5IGNhbiBiZSByZXBlYXRlZCBmb3IgcGFyYWxsZWwgbGFuZ3VhZ2UgdmVyc2lvbnMgb2YgdGhlIGxhYmVsLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICBdIDsKLgoKIyMgLS0+IG5vdCBpbiBwcmV2aW91cyBzaGFjbAplcG9zOkNoZWNrc3VtU2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3Mgc3BkeDpDaGVja3N1bSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNwZHg6YWxnb3JpdGhtIDsKICAgICAgc2g6Y2xhc3Mgc3BkeDpjaGVja3N1bUFsZ29yaXRobV9zaGExIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwoKICAgIF07CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNwZHg6Y2hlY2tzdW1WYWx1ZSA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpoZXhCaW5hcnkgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICBdIDsKLgplcG9zOklkZW50aWZpZXJTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBhZG1zOklkZW50aWZpZXI7CiAgIyMjIwogICMgSWRlbnRpZmllciBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBhZG1zOnNjaGVtZUFnZW5jeSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0aGUgaWRlbnRpZmllciBzY2hlbWUgcmVmZXJlbmNlZCBieSBpdHMgZGF0YXR5cGUgKGUuZy4sIEREU1MtSUQsIERPSSwgZXRjLikuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBza29zOm5vdGF0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBzdHJpbmcgdGhhdCBpcyBhbiBpZGVudGlmaWVyIGluIHRoZSBjb250ZXh0IG9mIHRoZSBpZGVudGlmaWVyIHNjaGVtZSByZWZlcmVuY2VkIGJ5IGl0cyBkYXRhdHlwZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7Ci4KZXBvczpMaWNlbnNlRG9jdW1lbnRTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBkY3Q6TGljZW5zZURvY3VtZW50OwogICMjIyMKICAjIExpY2Vuc2VEb2N1bWVudCBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICBzaDpwYXRoIGRjdDp0eXBlOwogICAgIHNoOmNsYXNzIHNrb3M6Q29uY2VwdCA7CiAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgc2g6bWVzc2FnZSAiVHlwZSBvZiB0aGUgbGljZW5zZSBkb2N1bWVudCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgXSA7CiAgIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dHlwZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICIgVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSB0eXBlIG9mIGxpY2VuY2UsIGUuZy4gaW5kaWNhdGluZyDigJhwdWJsaWMgZG9tYWlu4oCZIG9yIOKAmHJveWFsdGllcyByZXF1aXJlZOKAmS4iOwogICAgICBzaDpjbGFzcyBza29zOkNvbmNlcHQgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgXSA7Ci4KZXBvczpMb2NhdGlvblNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIGRjdDpMb2NhdGlvbiA7CiAgIyMjIwogICMgTG9jYXRpb24gcHJvcGVydGllcwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmJib3ggOwogICAgICBzaDpkYXRhdHlwZSBnc3A6d2t0TGl0ZXJhbDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIkJib3ggaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6YmJveCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBoZSBnZW9ncmFwaGljIGJvdW5kaW5nIGJveCBvZiBhIHJlc291cmNlLiI7CiAgICAgIHNoOmRhdGF0eXBlIGdzcDp3a3RMaXRlcmFsOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmNlbnRyb2lkIDsKICAgICAgc2g6ZGF0YXR5cGUgZ3NwOndrdExpdGVyYWw7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJDZW50cm9pZCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmNlbnRyb2lkIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBnZW9ncmFwaGljIGNlbnRlciAoY2VudHJvaWQpIG9mIGEgcmVzb3VyY2UuIjsKICAgICAgc2g6ZGF0YXR5cGUgZ3NwOndrdExpdGVyYWw7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXTsKICBzaDpwcm9wZXJ0eSBbCiAgICAgc2g6cGF0aCBsb2NuOmdlb21ldHJ5IDsKICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBhc3NvY2lhdGVzIGFueSByZXNvdXJjZSB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIGdlb21ldHJ5LiI7CiAgICAgc2g6ZGF0YXR5cGUgbG9jbjpHZW9tZXRyeTsgIy0+bW9kaWZpZWQKICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwouCmVwb3M6UGVyaW9kT2ZUaW1lU2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3MgZGN0OlBlcmlvZE9mVGltZSA7CiAgIyMjIwogICMgUGVyaW9kT2ZUaW1lIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6c3RhcnREYXRlOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJTdGFydGRhdGUgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6c3RhcnREYXRlOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgc3RhcnQgb2YgdGhlIFBlcmlvZCBvZiBUaW1lLiIgIDsKICAgICAgc2g6bm9kZSBlcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmVuZERhdGU7CiAgICAgIHNoOm5vZGUgZXBvczpEYXRlT3JEYXRlVGltZURhdGFUeXBlIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgImVuZERhdGUgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6ZW5kRGF0ZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBlbmQgb2YgdGhlIFBlcmlvZCBvZiBUaW1lLiIgIDsKICAgICAgc2g6bm9kZSBlcG9zOkRhdGVPckRhdGVUaW1lRGF0YVR5cGUgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCB0aW1lOmhhc0JlZ2lubmluZyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICIgVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgYmVnaW5uaW5nIG9mIGEgcGVyaW9kIG9yIGludGVydmFsLiIgIDsKICAgICAgc2g6Y2xhc3MgdGltZTpJbnN0YW50OwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCB0aW1lOmhhc0VuZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICIgVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgZW5kIG9mIGEgcGVyaW9kIG9yIGludGVydmFsLiIgIDsKICAgICAgc2g6Y2xhc3MgdGltZTpJbnN0YW50IDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgXSA7Ci4KZXBvczpSZWxhdGlvbnNoaXBTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBkY2F0OlJlbGF0aW9uc2hpcDsKICAjIyMjCiAgIyBSZWxhdGlvbnNoaXAgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDpoYWRSb2xlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBmdW5jdGlvbiBvZiBhbiBlbnRpdHkgb3IgYWdlbnQgd2l0aCByZXNwZWN0IHRvIGFub3RoZXIgZW50aXR5IG9yIHJlc291cmNlLiI7CiAgICAgIHNoOmNsYXNzIGRjYXQ6Um9sZTsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnJlbGF0aW9uOwogICAgICBzaDpkZXNjcmlwdGlvbiAiIFRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSByZXNvdXJjZSByZWxhdGVkIHRvIHRoZSBzb3VyY2UgcmVzb3VyY2UuIjsKICAgICAgc2g6bm9kZSBlcG9zOkRjYXRSZXNvdXJjZVNoYXBlIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgIF0gOwouCgojIyMjCiMgQWRkaXRpb25hbCBjbGFzc2VzIGZvciBFUE9TLURDQVQtQVAKIyMjIwplcG9zOkFkZHJlc3NTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyB2Y2FyZDpBZGRyZXNzOwogICMjIyMKICAjIEFkZHJlc3MgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggdmNhcmQ6Y291bnRyeS1uYW1lIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoZSBjb3VudHJ5LiBGb3IgZXhhbXBsZSwgVVNBLiBZb3UgY2FuIGFsc28gcHJvdmlkZSB0aGUgdHdvLWxldHRlciBJU08gMzE2Ni0xIGFscGhhLTIgY291bnRyeSBjb2RlLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCB2Y2FyZDpsb2NhbGl0eSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGUgbG9jYWxpdHkgaW4gd2hpY2ggdGhlIHN0cmVldCBhZGRyZXNzIGlzLCBhbmQgd2hpY2ggaXMgaW4gdGhlIHJlZ2lvbi4gRm9yIGV4YW1wbGUsIE1vdW50YWluIFZpZXcuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHZjYXJkOnBvc3RhbC1jb2RlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoZSBwb3N0YWwgY29kZS4gRm9yIGV4YW1wbGUsIDk0MDQzLiAiOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggdmNhcmQ6c3RyZWV0LWFkZHJlc3MgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhlIHN0cmVldCBuYW1lIGFuZCBjaXZpYyBudW1iZXIgb2YgYW4gQWRkcmVzcy4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKLgplcG9zOkNvbnRhY3RQb2ludFNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIHNjaGVtYTpDb250YWN0UG9pbnQ7CiAgIyMjIwogICMgQ29udGFjdFBvaW50IHJlY29tbWVuZGVkIHByb3BlcnRpZXMKICAjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmNvbnRhY3RUeXBlIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgImNvbnRhY3RUeXBlIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIChlLmcuIGxlZ2FsQ29udGFjdCwgZmluYW5jaWFsQ29udGFjdCwgc2NpZW50aWZpY0NvbnRhY3QsIG1hbmFnZXIpIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgICAgI3NoOmluICggImxlZ2FsQ29udGFjdCIgImZpbmFuY2lhbENvbnRhY3QiICJzY2llbnRpZmljQ29udGFjdCIgIm1hbmFnZXIiICk7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmNvbnRhY3RUeXBlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHJvbGUgb2YgdGhlIENvbnRhY3QgUG9pbnQuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICAjIyMjCiAgIyBDb250YWN0UG9pbnQgb3B0aW9uYWwgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmF2YWlsYWJsZUxhbmd1YWdlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGxhbmd1YWdlIHVzZWQgYnkgdGhlIENvbnRhY3QgUG9pbnQuIFBsZWFzZSB1c2Ugb25lIG9mIHRoZSBsYW5ndWFnZSBjb2RlcyBmcm9tIHRoZSBJRVRGIEJDUCA0NyBzdGFuZGFyZC4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTplbWFpbCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBlbWFpbCBhZGRyZXNzIG9mIHRoZSBDb250YWN0IFBvaW50LiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnRlbGVwaG9uZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSB0ZWxlcGhvbmUgbnVtYmVyIG9mIHRoZSBDb250YWN0IFBvaW50LiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICBdIDsKLgplcG9zOkVxdWlwbWVudFNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIGVwb3M6RXF1aXBtZW50OwogICMjIyMKICAjIEVxdWlwbWVudCBtYW5kYXRvcnkgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmRlc2NyaXB0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBmcmVlLXRleHQgZGVzY3JpcHRpb24gb2YgdGhlIEVxdWlwbWVudC4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmlkZW50aWZpZXIgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbWFpbiBpZGVudGlmaWVyIGZvciB0aGUgRXF1aXBtZW50LiI7CiAgICAgIHNoOm9yICggWyBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsgXQogICAgICAgICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7IF0gKTsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDp0aXRsZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIGEgbmFtZSBnaXZlbiB0byB0aGUgRXF1aXBtZW50LiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICAjIyMjCiAgIyBFcXVpcG1lbnQgcmVjb21tZW5kZWQgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmNyZWF0b3IgOwogICAgICBzaDpjbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uIDsKICAgICAgc2g6bWluQ291bnQgMTsKICAgICAgc2g6bWVzc2FnZSAiQ3JlYXRvciBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6Y3JlYXRvciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhbiBPcmdhbmlzYXRpb24gcmVzcG9uc2libGUgZm9yIHByb2R1Y2luZyB0aGUgRXF1aXBtZW50IjsKICAgICAgc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbiA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDp0eXBlIDsKICAgICAgc2g6b3IgKCBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdCiAgICAgICAgICAgICAgWyBzaDpjbGFzcyBza29zOkNvbmNlcHQgOyBdICkgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiVHlwZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnR5cGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIHR5cGUgb2YgdGhlIEVxdWlwbWVudC4iOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7IF0KICAgICAgICAgICAgICBbIHNoOmNsYXNzIHNrb3M6Q29uY2VwdCA7IF0gKSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgIyMjIwogICMgRXF1aXBtZW50IG9wdGlvbmFsIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6Y29udGFjdFBvaW50IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgY29udGFjdCBpbmZvcm1hdGlvbiB0aGF0IGNhbiBiZSB1c2VkIGZvciBzZW5kaW5nIGNvbW1lbnRzIGFib3V0IHRoZSBFcXVpcG1lbnQuIjsKICAgICAgc2g6bm9kZSBlcG9zOkNvbnRhY3RQb2ludFR5cGUgOwogICAgXTsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZXBvczpkeW5hbWljUmFuZ2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgZnVsbC1zY2FsZSBtZWFzdXJpbmcgYWJpbGl0eS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZXBvczpmaWx0ZXIgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBkZXNjcmliZXMgdGhlIGZpbHRlciB0aGF0IHRoZSBpbnN0cnVtZW50IHVzZXMgdG8gcHJvZHVjZSBkYXRhLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6aXNQYXJ0T2YgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYW4gRXF1aXBtZW50IG9yIGEgRmFjaWxpdHkgaW4gd2hpY2ggdGhlIGRlc2NyaWJlZCBFcXVpcG1lbnQgaXMgaW5jbHVkZWQuIjsKICAgICAgc2g6b3IgKCBbIHNoOmNsYXNzIGVwb3M6RXF1aXBtZW50OyBdCiAgICAgICAgICAgICAgWyBzaDpjbGFzcyBlcG9zOkZhY2lsaXR5OyBdICk7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDprZXl3b3JkOwogICAgICBzaDpkZXNjcmlwdGlvbiAiIFRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBrZXl3b3JkIG9yIHRhZyBkZXNjcmliaW5nIHRoZSBEYXRhIFNlcnZpY2UuICI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6bGFuZGluZ1BhZ2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSB3ZWIgcGFnZSBhYm91dCB0aGlzIEVxdWlwbWVudC4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBlcG9zOm9yaWVudGF0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgZGVzY3JpYmVzIGhvdyB0aGUgaW5zdHJ1bWVudCBpcyBvcmllbnRlZC4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnJlbGF0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgcmVsYXRlZCByZXNvdXJjZSAoZS5nLiwgRGF0YXNldCwgRGF0YVNlcnZpY2UsIGV0Yy4pLiI7CiAgICAgIHNoOm9yICggWyBzaDpjbGFzcyByZGZzOlJlc291cmNlIDsgXQogICAgICAgICAgICAgIFsgc2g6Y2xhc3MgZGNhdDpEYXRhc2V0IDsgXQoJICAgICAgWyBzaDpjbGFzcyBzY2hlbWE6U2VydmljZSA7IF0KCSAgICAgIFsgc2g6Y2xhc3MgZXBvczpEYXRhU2VydmljZSA7IF0gKTsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBlcG9zOnJlc29sdXRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgcmVzb2x1dGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZXBvczpzYW1wbGVQZXJpb2QgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgc2FtcGxlIHBlcmlvZCAodW5pdCBhbmQgdmFsdWUpIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnNwYXRpYWwgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBnZW9ncmFwaGljYWwgbG9jYXRpb24gb2YgdGhlIEVxdWlwbWVudC4iOwogICAgICBzaDpjbGFzcyBkY3Q6TG9jYXRpb24gOwogICAgICAjc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnRlbXBvcmFsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIHN0YXJ0IGFuZCB0aGUgZW5kIG9mIHRoZSBwZXJpb2QuICI7CiAgICAgIHNoOmNsYXNzIGRjdDpQZXJpb2RPZlRpbWUgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgIHNoOnBhdGggZGNhdDp0aGVtZSA7CiAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgY2F0ZWdvcnkgb2YgdGhlIEVxdWlwbWVudC4gQW4gRXF1aXBtZW50IG1heSBiZSBhc3NvY2lhdGVkIHdpdGggbXVsdGlwbGUgdGhlbWVzLiI7CiAgICAgc2g6Y2xhc3Mgc2tvczpDb25jZXB0IDsKICAgIF0gOwouCmVwb3M6RmFjaWxpdHlTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBlcG9zOkZhY2lsaXR5IDsKICAjIyMjCiAgIyBGYWNpbGl0eSBtYW5kYXRvcnkgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmRlc2NyaXB0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBmcmVlLXRleHQgZGVzY3JpcHRpb24gb2YgdGhlIEZhY2lsaXR5LiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmlkZW50aWZpZXIgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbWFpbiBpZGVudGlmaWVyIGZvciB0aGUgRmFjaWxpdHkuIjsKICAgICAgc2g6b3IgKCBbIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOyBdCiAgICAgICAgICAgICAgWyBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsgXSApOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnRpdGxlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBuYW1lIGdpdmVuIHRvIHRoZSBGYWNpbGl0eS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgIyMjIwogICMgRmFjaWxpdHkgcmVjb21tZW5kZWQgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDp0aGVtZTsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgY2F0ZWdvcnkgb2YgdGhlIEZhY2lsaXR5LiBBIEZhY2lsaXR5IG1heSBiZSBhc3NvY2lhdGVkIHdpdGggbXVsdGlwbGUgdGhlbWVzLiI7CiAgICAgIHNoOmNsYXNzIHNrb3M6Q29uY2VwdCA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJUaGVtZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnR5cGUgOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7IF0KICAgICAgICAgICAgICBbIHNoOmNsYXNzIHNrb3M6Q29uY2VwdCA7IF0gKSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJUeXBlIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dHlwZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgdHlwZSBvZiB0aGUgRmFjaWxpdHkuIjsKICAgICAgc2g6b3IgKCBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdCiAgICAgICAgICAgICAgWyBzaDpjbGFzcyBza29zOkNvbmNlcHQgOyBdICkgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogICMjIyMKICAjIEZhY2lsaXR5IG9wdGlvbmFsIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6Y29udGFjdFBvaW50IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgY29udGFjdCBpbmZvcm1hdGlvbiB0aGF0IGNhbiBiZSB1c2VkIGZvciBzZW5kaW5nIGNvbW1lbnRzIGFib3V0IHRoZSBGYWNpbGl0eS4iOwogICAgICBzaDpub2RlIGVwb3M6Q29udGFjdFBvaW50VHlwZSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmlzUGFydE9mIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgRmFjaWxpdHkgaW4gd2hpY2ggdGhlIGRlc2NyaWJlZCBGYWNpbGl0eSBpcyBpbmNsdWRlZC4iOwogICAgICBzaDpjbGFzcyBlcG9zOkZhY2lsaXR5IDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCB2Y2FyZDpoYXNBZGRyZXNzIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIHBoeXNpY2FsIGFkZHJlc3Mgb2YgdGhlIEZhY2lsaXR5LiI7CiAgICAgIHNoOmNsYXNzIHZjYXJkOkFkZHJlc3MgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmtleXdvcmQ7CiAgICAgIHNoOmRlc2NyaXB0aW9uICIgVGhpcyBwcm9wZXJ0eSBjb250YWlucyBhIGtleXdvcmQgb3IgdGFnIGRlc2NyaWJpbmcgdGhlIEZhY2lsaXR5LiAiOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OmxhbmRpbmdQYWdlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgcGFnZSBvciBkb2N1bWVudCBhYm91dCB0aGlzIEZhY2lsaXR5LiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpyZWxhdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHJlbGF0ZWQgcmVzb3VyY2UgKGUuZy4sIERhdGFzZXQsIERhdGFTZXJ2aWNlLCBldGMpLiI7CiAgICAgIHNoOm9yICggWyBzaDpjbGFzcyByZGZzOlJlc291cmNlIDsgXQogICAgICAgICAgICAgIFsgc2g6Y2xhc3MgZGNhdDpEYXRhc2V0IDsgXQogICAgICAgICAgICAgIFsgc2g6Y2xhc3Mgc2NoZW1hOlNlcnZpY2UgOyBdCgkgICAgICBbIHNoOmNsYXNzIGRjYXQ6RGF0YVNlcnZpY2UgOyBdICk7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnNwYXRpYWwgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIGdlb2dyYXBoaWNhbCBjb29yZGluYXRlcyBvZiB0aGUgRmFjaWxpdHkuIjsKICAgICAgc2g6Y2xhc3MgZGN0OkxvY2F0aW9uIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKLgplcG9zOklyaVRlbXBsYXRlU2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3MgaHlkcmE6SXJpVGVtcGxhdGUgOwogICMjIyMKICAjIElyaVRlbXBsYXRlIG1hbmRhdG9yeSBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBoeWRyYTp0ZW1wbGF0ZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGUgc3ludGF4IG9mIHRoZSB0ZW1wbGF0ZSBsaXRlcmFsIGlzIHNwZWNpZmllZCBieSB0aGUgWyBSRkM2NTcwXSBVUkkgVGVtcGxhdGUgc3ludGF4LiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICAjIyMjCiAgIyBJcmlUZW1wbGF0ZSBvcHRpb25hbCBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBoeWRyYTptYXBwaW5nIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIkEgdmFyaWFibGUtdG8tcHJvcGVydHkgbWFwcGluZyBvZiB0aGUgSVJJIHRlbXBsYXRlLiI7CiAgICAgIHNoOmNsYXNzIGh5ZHJhOklyaVRlbXBsYXRlTWFwcGluZyA7CiAgICBdIDsKLgplcG9zOklyaVRlbXBsYXRlTWFwcGluZ1NoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIGh5ZHJhOklyaVRlbXBsYXRlTWFwcGluZyA7CiAgIyMjIwogICMgSXJpVGVtcGxhdGVNYXBwaW5nIG1hbmRhdG9yeSBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCByZGZzOmxhYmVsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgYSBzaG9ydCBzdHJpbmcgdXNlZCB0byBkZXNjcmliZSB0aGUgbWVhbmluZyBvZiB0aGUgcGFyYW1ldGVyLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggcmRmczpyYW5nZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSB0eXBlIG9mIHBhcmFtZXRlciAoZS5nLiwgeHNkOnN0cmluZywgeHNkOkJvb2xlYW4sIHhzZDpkYXRlLCB4c2Q6ZGF0ZVRpbWUpLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggaHlkcmE6cmVxdWlyZWQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0cnVlIGlmIHRoZSBwcm9wZXJ0eSBpcyByZXF1aXJlZCwgZmFsc2Ugb3RoZXJ3aXNlLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpib29sZWFuIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGh5ZHJhOnZhcmlhYmxlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG5hbWUgb2YgdGhlIHBhcmFtZXRlciBhcyByZXF1aXJlZCBieSBkYXRhIHNlcnZpY2Ugc3BlY2lmaWNhdGlvbnMuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogICMjIyMKICAjIElyaVRlbXBsYXRlTWFwcGluZyByZWNvbW1lbmRlZCBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6ZGVmYXVsdFZhbHVlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHBhcmFtZXRlci4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm1heFZhbHVlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG1heGltdW0gdmFsdWUgb2YgdGhlIHBhcmFtZXRlci4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6bWluVmFsdWUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbWluaW11bSB2YWx1ZSBvZiB0aGUgcGFyYW1ldGVyLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBodHRwOnBhcmFtVmFsdWUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyBvbmUgb2YgdGhlIHBvc3NpYmxlIHZhbHVlcyB3aGljaCBzaG91bGQgYmUgdXNlZCBpbiB0aGUgZGF0YSBzZXJ2aWNlIHF1ZXJ5LiBJdCBjb3VsZCBiZSByZXBlYXRlZCBhcyBtYW55IHRpbWVzIGFzIG5lZWRlZC4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBoeWRyYTpwcm9wZXJ0eSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSB2b2NhYnVsYXJ5IHRlcm0gd2hpY2ggaW5kaWNhdGVzIHRoZSBzZW1hbnRpYyBkZXNjcmlwdGlvbiBvZiBwYXJhbWV0ZXIuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTp2YWx1ZVBhdHRlcm4gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgcmVndWxhciBleHByZXNzaW9uIGZvciB0ZXN0aW5nIHZhbHVlcyBhY2NvcmRpbmcgdG8gdGhlIHBhcmFtZXRlcidzIHNwZWNpZmljYXRpb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgIyMjIwogICMgSXJpVGVtcGxhdGVNYXBwaW5nIG9wdGlvbmFsIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTptdWx0aXBsZVZhbHVlcyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJXaGV0aGVyIG11bHRpcGxlIHZhbHVlcyBhcmUgYWxsb3dlZCBmb3IgdGhlIHByb3BlcnR5LiBEZWZhdWx0IGlzIGZhbHNlLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpib29sZWFuIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnJlYWRvbmx5VmFsdWUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiV2hldGhlciBvciBub3QgYSBwcm9wZXJ0eSBpcyBtdXRhYmxlLiBEZWZhdWx0IGlzIGZhbHNlLiBTcGVjaWZ5aW5nIHRoaXMgZm9yIGEgcHJvcGVydHkgdGhhdCBhbHNvIGhhcyBhIHZhbHVlIG1ha2VzIGl0IGFjdCBzaW1pbGFyIHRvIGEgaGlkZGVuIGlucHV0IGluIGFuIEhUTUwgZm9ybS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6Ym9vbGVhbiA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7Ci4KZXBvczpPcGVyYXRpb25TaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBoeWRyYTpPcGVyYXRpb247CgogICMjIyMKICAjIE9wZXJhdGlvbiAgcmVjb21tZW5kZWQgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggaHlkcmE6cHJvcGVydHkgOwogICAgICBzaDpjbGFzcyBoeWRyYTpJcmlUZW1wbGF0ZSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJJUkkgdGVtcGxhdGUgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggaHlkcmE6cHJvcGVydHkgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIElyaVRlbXBsYXRlIG9mIHRoZSBEYXRhIFNlcnZpY2Ugb3BlcmF0aW9uLiBUaGlzIGRlc2NyaWJlcyB0aGUgZW5kcG9pbnQgYW5kIHBhcmFtZXRlcnMgbWFwcGluZyBmb3IgdGhlIG9wZXJhdGlvbi4iOwogICAgICBzaDpjbGFzcyBoeWRyYTpJcmlUZW1wbGF0ZSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGh5ZHJhOnJldHVybnMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBpcyB1c2VkIHRvIHNwZWNpZnkgdGhlIG91dHB1dCBmb3JtYXQgb2YgdGhlIE9wZXJhdGlvbi4gVGhlIHBvc3NpYmxlIHZhbHVlcyBhcmUgbGlzdGVkIGhlcmU6IGh0dHBzOi8vd3d3LmlhbmEub3JnL2Fzc2lnbm1lbnRzL21lZGlhLXR5cGVzL21lZGlhLXR5cGVzLnhodG1sIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgInJldHVybnMgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdOwogICMjIyMKICAjIE9wZXJhdGlvbiBvcHRpb25hbCBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBoeWRyYTptZXRob2QgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhlIEhUVFAgbWV0aG9kIjsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgXTsKLgplcG9zOk9yZ2FuaXphdGlvblNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIHNjaGVtYTpPcmdhbml6YXRpb247CiAgIyMjIwogICMgT3JnYW5pemF0aW9uIG1hbmRhdG9yeSBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6aWRlbnRpZmllciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtYWluIGlkZW50aWZpZXIgZm9yIHRoZSBPcmdhbml6YXRpb24gKGUuZy4sUElDLCBJU05JLCBldGMuKS4iOwogICAgICBzaDpvciAoW3NoOmRhdGF0eXBlIHhzZDpzdHJpbmc7IF0KICAgICAgICAgICAgIFtzaDpkYXRhdHlwZSB4c2Q6YW55VVJJOyBdCiAgICAgICAgICAgICBbc2g6Y2xhc3Mgc2NoZW1hOlByb3BlcnR5VmFsdWU7IF0gKSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7CiAgIyMjIwogICMgT3JnYW5pemF0aW9uIHJlY29tbWVuZGVkIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpsZWlDb2RlOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiTGVpQ29kZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6bGVpQ29kZTsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIE9yZ2FuaXphdGlvbiBpZGVudGlmaWVyIHRoYXQgdW5pcXVlbHkgaWRlbnRpZmllcyBhIGxlZ2FsIGVudGl0eSBhcyBkZWZpbmVkIGluIElTTyAxNzQ0Mi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6bGVnYWxOYW1lOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiTGVnYWxOYW1lIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpsZWdhbE5hbWU7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBvZmZpY2lhbCBuYW1lIG9mIHRoZSBPcmdhbml6YXRpb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICAjIyMjCiAgIyBPcmdhbml6YXRpb24gb3B0aW9uYWwgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmFkZHJlc3M7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBwaHlzaWNhbCBhZGRyZXNzIG9mIHRoZSBPcmdhbml6YXRpb24uIjsKICAgICAgc2g6b3IgKCBbc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7IF0KICAgICAgICAgICAgICBbIHNoOmNsYXNzIHNjaGVtYTpQb3N0YWxBZGRyZXNzOyBdICkgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBlcG9zOmFzc29jaWF0ZWRQcm9qZWN0OwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBQcm9qZWN0IGluIHdoaWNoIHRoZSBPcmdhbml6YXRpb24gaXMgaW52b2x2ZWQuIjsKICAgICAgc2g6Y2xhc3MgZm9hZjpQcm9qZWN0OwogICAgXTsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmNvbnRhY3RQb2ludCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgQ29udGFjdCBQb2ludCBkZWZpbmVkIGZvciB0aGUgT3JnYW5pemF0aW9uLiI7CiAgICAgIHNoOm5vZGUgZXBvczpDb250YWN0UG9pbnRUeXBlIDsKICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmVtYWlsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGVtYWlsIGFkZHJlc3Mgb2YgdGhlIE9yZ2FuaXphdGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpsb2dvIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIFVSTCBvZiB0aGUgT3JnYW5pemF0aW9uIGxvZ28uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm1lbWJlck9mOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYW4gT3JnYW5pemF0aW9uIHRvIHdoaWNoIHRoaXMgT3JnYW5pemF0aW9uIGJlbG9uZ3MuIjsKICAgICAgc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbjsKICAgXSA7CiBzaDpwcm9wZXJ0eSBbCiAgICAgc2g6cGF0aCBzY2hlbWE6b3duczsKICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBGYWNpbGl0eSBvciBFcXVpcG1lbnQgb2Ygd2hpY2ggaXQgaXMgdGhlIG93bmVyLiI7CiAgICAgc2g6b3IgKCBbc2g6Y2xhc3MgZXBvczpGYWNpbGl0eTsgXQogICAgICAgW3NoOmNsYXNzIGVwb3M6RXF1aXBtZW50OyBdKTsKICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTp0ZWxlcGhvbmUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgdGVsZXBob25lIG51bWJlciBvZiB0aGUgT3JnYW5pemF0aW9uLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnVybCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBVUkwgb2YgdGhlIE9yZ2FuaXphdGlvbiB3ZWJzaXRlLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDphbnlVUkk7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7Ci4KZXBvczpQZXJzb25TaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBzY2hlbWE6UGVyc29uOwogICMjIyMKICAjIFBlcnNvbiBtYW5kYXRvcnkgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmlkZW50aWZpZXIgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbWFpbiBpZGVudGlmaWVyIGZvciB0aGUgUGVyc29uIChlLmcuLE9SQ0lELCBTY29wdXNJRCwgZXRjLikuIjsKICAgICAgc2g6b3IgKFtzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nO10KICAgICAgICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsgXQogICAgICAgICAgICAgW3NoOmNsYXNzIHNjaGVtYTpQcm9wZXJ0eVZhbHVlO10pIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICBdIDsKICAjIyMjCiAgIyBQZXJzb24gb3B0aW9uYWwgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmFkZHJlc3MgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgcGh5c2ljYWwgYWRkcmVzcyBvZiB0aGUgUGVyc29uLiI7CiAgICAgIHNoOm9yIChbc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7XQogICAgICAgICAgICAgW3NoOmNsYXNzIHNjaGVtYTpQb3N0YWxBZGRyZXNzOyBdICkgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6YWZmaWxpYXRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIG9yZ2FuaXphdGlvbiB0byB3aGljaCB0aGUgcGVyc29uIGlzIGFmZmlsaWF0ZWQuIjsKICAgICAgc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbjsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6Y29udGFjdFBvaW50IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBDb250YWN0IFBvaW50IHJvbGUgZGVmaW5lZCBmb3IgdGhlIFBlcnNvbi4iOwogICAgICBzaDpub2RlIGVwb3M6Q29udGFjdFBvaW50VHlwZSA7CiAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTplbWFpbCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBlbWFpbCBhZGRyZXNzIG9mIHRoZSBQZXJzb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6ZmFtaWx5TmFtZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBsYXN0IG5hbWUgb2YgdGhlIFBlcnNvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6Z2l2ZW5OYW1lIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGZpcnN0IG5hbWUgb2YgdGhlIFBlcnNvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6cXVhbGlmaWNhdGlvbnMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgc3BlY2lmaWMgcXVhbGlmaWNhdGlvbnMgb2YgdGhlIFBlcnNvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6dGVsZXBob25lIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIHRlbGVwaG9uZSBudW1iZXIgb2YgdGhlIFBlcnNvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTp1cmwgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIFVSTCBvZiB0aGUgUGVyc29uIGN1cnJpY3VsdW0gdml0YWUuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKLgplcG9zOlBvc3RhbEFkZHJlc3NTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBzY2hlbWE6UG9zdGFsQWRkcmVzczsKICAjIyMjCiAgIyBQb3N0YWxBZGRyZXNzIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTphZGRyZXNzQ291bnRyeSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGUgY291bnRyeS4gRm9yIGV4YW1wbGUsIFVTQS4gWW91IGNhbiBhbHNvIHByb3ZpZGUgdGhlIHR3by1sZXR0ZXIgSVNPIDMxNjYtMSBhbHBoYS0yIGNvdW50cnkgY29kZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6YWRkcmVzc0xvY2FsaXR5IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoZSBsb2NhbGl0eSBpbiB3aGljaCB0aGUgc3RyZWV0IGFkZHJlc3MgaXMsIGFuZCB3aGljaCBpcyBpbiB0aGUgcmVnaW9uLiBGb3IgZXhhbXBsZSwgTW91bnRhaW4gVmlldy4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnBvc3RhbENvZGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhlIHBvc3RhbCBjb2RlLiBGb3IgZXhhbXBsZSwgOTQwNDMuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpzdHJlZXRBZGRyZXNzIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoZSBzdHJlZXQgYWRkcmVzcy4gRm9yIGV4YW1wbGUsIDE2MDAgQW1waGl0aGVhdHJlIFBrd3kuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7Ci4KZXBvczpQcm9wZXJ0eVZhbHVlU2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3Mgc2NoZW1hOlByb3BlcnR5VmFsdWUgOwogICMjIyMKICAjIFByb3BlcnR5VmFsdWUgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnByb3BlcnR5SUQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiQSBjb21tb25seSB1c2VkIGlkZW50aWZpZXIgZm9yIHRoZSBjaGFyYWN0ZXJpc3RpYyByZXByZXNlbnRlZCBieSB0aGUgcHJvcGVydHksIGUuZy4gYSBtYW51ZmFjdHVyZXIgb3IgYSBzdGFuZGFyZCBjb2RlIGZvciBhIHByb3BlcnR5LiBwcm9wZXJ0eUlEIGNhbiBiZSAoMSkgYSBwcmVmaXhlZCBzdHJpbmcsIG1haW5seSBtZWFudCB0byBiZSB1c2VkIHdpdGggc3RhbmRhcmRzIGZvciBwcm9kdWN0IHByb3BlcnRpZXM7ICgyKSBhIHNpdGUtc3BlY2lmaWMsIG5vbi1wcmVmaXhlZCBzdHJpbmcgKGUuZy4gdGhlIHByaW1hcnkga2V5IG9mIHRoZSBwcm9wZXJ0eSBvciB0aGUgdmVuZG9yLXNwZWNpZmljIGlkIG9mIHRoZSBwcm9wZXJ0eSksIG9yICgzKSBhIFVSTCBpbmRpY2F0aW5nIHRoZSB0eXBlIG9mIHRoZSBwcm9wZXJ0eSwgZWl0aGVyIHBvaW50aW5nIHRvIGFuIGV4dGVybmFsIHZvY2FidWxhcnksIG9yIGEgV2ViIHJlc291cmNlIHRoYXQgZGVzY3JpYmVzIHRoZSBwcm9wZXJ0eSAoZS5nLiBhIGdsb3NzYXJ5IGVudHJ5KS4gU3RhbmRhcmRzIGJvZGllcyBzaG91bGQgcHJvbW90ZSBhIHN0YW5kYXJkIHByZWZpeCBmb3IgdGhlIGlkZW50aWZpZXJzIG9mIHByb3BlcnRpZXMgZnJvbSB0aGVpciBzdGFuZGFyZHMuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6dmFsdWUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhlIHZhbHVlIG9mIHRoZSBxdWFudGl0YXRpdmUgdmFsdWUgb3IgcHJvcGVydHkgdmFsdWUgbm9kZS4gVGhlIHJlY29tbWVuZGVkIHR5cGUgZm9yIHZhbHVlcyBpcyAnTnVtYmVyJy4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgXSA7Ci4KZXBvczpQcm9qZWN0U2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3MgZm9hZjpQcm9qZWN0OwogICMjIyMKICAjIFByb2plY3QgbWFuZGF0b3J5IHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDppZGVudGlmaWVyIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG1haW4gaWRlbnRpZmllciBmb3IgdGhlIFByb2plY3QuIjsKICAgICAgc2g6b3IgKCBbIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOyBdCiAgICAgICAgICAgICAgWyBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsgXSApOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OnRpdGxlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIHRpdGxlIG9mIHRoZSBQcm9qZWN0LiI7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICBdIDsKICAjIyMjCiAgIyBQcm9qZWN0IHJlY29tbWVuZGVkIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjYXQ6Y29udGFjdFBvaW50IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBDb250YWN0IFBvaW50IGRlZmluZWQgZm9yIHRoZSBQcm9qZWN0LiI7CiAgICAgIHNoOm5vZGUgZXBvczpDb250YWN0UG9pbnRUeXBlIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIkNvbnRhY3QgcG9pbnQgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpkZXNjcmlwdGlvbiA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptZXNzYWdlICJEZXNjcmlwdGlvbiBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmRlc2NyaXB0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBQcm9qZWN0LiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogICMjIyMKICAjIFByb2plY3Qgb3B0aW9uYWwgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZm9hZjpob21lcGFnZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHdlYiBwYWdlIHRoYXQgYWN0cyBhcyB0aGUgbWFpbiBwYWdlIGZvciB0aGUgUHJvamVjdC4iOwogICAgICBzaDpjbGFzcyBmb2FmOkRvY3VtZW50IDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgXSA7Ci4KZXBvczpQdWJsaWNhdGlvblNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIGVwb3M6UHVibGljYXRpb247CiAgIyMjIwogICMgUHVibGljYXRpb24gbWFuZGF0b3J5IHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTppZGVudGlmaWVyIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG1haW4gaWRlbnRpZmllciBmb3IgdGhlIFB1YmxpY2F0aW9uLiI7CiAgICAgIHNoOm9yICggWyBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsgXQogICAgICAgICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7IF0KICAgICAgICAgICAgICBbIHNoOmNsYXNzIHNjaGVtYTpQcm9wZXJ0eVZhbHVlIDsgXSApIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm5hbWUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbmFtZSBvZiB0aGUgUHVibGljYXRpb24uIjsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgIF0gOwogICMjIyMKICAjIFB1YmxpY2F0aW9uIHJlY29tbWVuZGVkIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDphYnN0cmFjdCA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptZXNzYWdlICJBYnN0cmFjdCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGN0OmFic3RyYWN0IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGFic3RyYWN0IG9mIHRoZSBQdWJsaWNhdGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6YXV0aG9yIDsKICAgICAgc2g6Y2xhc3Mgc2NoZW1hOlBlcnNvbjsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIkF1dGhvciBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmF1dGhvciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIFBlcnNvbiB3aGljaCBpcyB0aGUgYXV0aG9yIG9mIHRoZSBQdWJsaWNhdGlvbi4iOwogICAgICBzaDpjbGFzcyBzY2hlbWE6UGVyc29uOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6Y29udHJpYnV0b3IgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBQZXJzb24gd2hpY2ggaXMgYSBjb250cmlidXRvciBvZiB0aGUgUHVibGljYXRpb24uIjsKICAgICAgc2g6Y2xhc3Mgc2NoZW1hOlBlcnNvbjsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIkNvbnRyaWJ1dG9yIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6ZGF0ZVB1Ymxpc2hlZCA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICAgIHNoOm1lc3NhZ2UgIlB1Ymxpc2hlZCBkYXRlIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6ZGF0ZVB1Ymxpc2hlZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBkYXRlIG9mIGZpcnN0IFB1YmxpY2F0aW9uLiI7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgICBzaDpub2RlIGVwb3M6RGF0ZU9yRGF0ZVRpbWVEYXRhVHlwZSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnB1Ymxpc2hlciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhbiBvcmdhbml6YXRpb24gb3IgcGVyc29uIG9yIGFnZW50IHdoaWNoIGlzIHRoZSBwdWJsaXNoZXIgb2YgdGhlIFB1YmxpY2F0aW9uLiI7CiAgICAgIHNoOm9yICggWyBzaDpjbGFzcyBzY2hlbWE6UGVyc29uIDsgXQogICAgICAgICAgICAgIFsgc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbiA7IF0KICAgICAgICAgICAgICBbIHNoOmNsYXNzIGZvYWY6QWdlbnQgOyBdICkgOwogICAgICBzaDptYXhDb3VudCAxOwogICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6cHVibGlzaGVyIDsKICAgICAgc2g6b3IgKCBbIHNoOmNsYXNzIHNjaGVtYTpQZXJzb24gOyBdCiAgICAgIFsgc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbiA7IF0KICAgICAgWyBzaDpjbGFzcyBmb2FmOkFnZW50IDsgXSApIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIlB1Ymxpc2hlciBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICAgXSA7CiAgIyMjIwogICMgUHVibGljYXRpb24gb3B0aW9uYWwgcHJvcGVydGllcwogICMjIyMKCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTppc3NuIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIEludGVybmF0aW9uYWwgU3RhbmRhcmQgU2VyaWFsIE51bWJlciAoSVNTTikgdGhhdCBpZGVudGlmaWVzIHRoZSBQdWJsaWNhdGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmtleXdvcmRzOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUga2V5d29yZHMgdXNlZCB0byBkZXNjcmliZSB0aGUgUHVibGljYXRpb24uIE11bHRpcGxlIGVudHJpZXMgaW4gYSBrZXl3b3JkcyBsaXN0IGFyZSB0eXBpY2FsbHkgZGVsaW1pdGVkIGJ5IGNvbW1hcy4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmxpY2Vuc2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgVVJMIG9mIHRoZSBsaWNlbnNlIGRvY3VtZW50IHRoYXQgYXBwbGllcyB0byB0aGUgUHVibGljYXRpb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm51bWJlck9mUGFnZXMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbnVtYmVyIG9mIHBhZ2VzIG9mIHRoZSBQdWJsaWNhdGlvbi4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6aW50ZWdlcjsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgc2g6cGF0aCBkY2F0OnRoZW1lOwogICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGNhdGVnb3J5IG9mIHRoZSBQdWJsaWNhdGlvbi4gQSBQdWJsaWNhdGlvbiBtYXkgYmUgYXNzb2NpYXRlZCB3aXRoIG11bHRpcGxlIHRoZW1lcy4iOwogICAgIHNoOmNsYXNzIHNrb3M6Q29uY2VwdCA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnZvbHVtZU51bWJlciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSB2b2x1bWUgaWRlbnRpZmllciBvZiB0aGUgUHVibGljYXRpb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKLgplcG9zOlNlcnZpY2VTaGFwZQogIGEgc2g6Tm9kZVNoYXBlIDsKICBzaDp0YXJnZXRDbGFzcyBzY2hlbWE6U2VydmljZTsKICAjIyMjCiAgIyBTZXJ2aWNlIE1hbmRhdG9yeSBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6aWRlbnRpZmllciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtYWluIGlkZW50aWZpZXIgZm9yIHRoZSBTZXJ2aWNlLiI7CiAgICAgIHNoOm9yICggWyBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOyBdCiAgICAgIAkgICAgWyBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJOyBdCiAgICAgCSAgICBbIHNoOmNsYXNzIHNjaGVtYTpQcm9wZXJ0eVZhbHVlOyBdICkgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgIF0gOwogICMjIyMKICAjIFNlcnZpY2UgcmVjb21tZW5kZWQgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmNvbnRhY3RQb2ludCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgQ29udGFjdCBQb2ludCBkZWZpbmVkIGZvciB0aGUgU2VydmljZS4iOwogICAgICBzaDpub2RlIGVwb3M6Q29udGFjdFBvaW50VHlwZSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDptZXNzYWdlICJDb250YWN0IHBvaW50IGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6ZGVzY3JpcHRpb247CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptZXNzYWdlICJEZXNjcmlwdGlvbiBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmRlc2NyaXB0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBTZXJ2aWNlLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpuYW1lIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG5hbWUgb2YgdGhlIFNlcnZpY2UuIjsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm5hbWUgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWVzc2FnZSAiTmFtZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6cHJvdmlkZXI7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhbiBPcmdhbmlzYXRpb24gb3IgUGVyc29uIHJlc3BvbnNpYmxlIGZvciBtYWtpbmcgdGhlIFNlcnZpY2UgYXZhaWxhYmxlLiI7CiAgICAgIHNoOm9yICggWyBzaDpjbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uIDsgXQogICAgICAgIFsgc2g6Y2xhc3Mgc2NoZW1hOlBlcnNvbiA7IF0gKTsKICAgICAgc2g6bWF4Q291bnQgMTsKICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnByb3ZpZGVyOwogICAgICBzaDpvciAoIFsgc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbiA7IF0KICAgICAgICAgICAgICBbIHNoOmNsYXNzIHNjaGVtYTpQZXJzb24gOyBdICk7CiAgICAgIHNoOm1pbkNvdW50IDE7CiAgICAgIHNoOm1lc3NhZ2UgIlByb3ZpZGVyIGlzIHJlY29tbWVuZGVkLiBQbGVhc2UgZmlsbCBpbiBhIHZhbHVlIkBlbiAgOwogICAgICBzaDpzZXZlcml0eSBzaDpXYXJuaW5nIDsKICAgIF0gOwogICMjIyMKICAjIFNlcnZpY2Ugb3B0aW9uYWwgcHJvcGVydGllcwogICMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6a2V5d29yZHMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUga2V5d29yZHMgdXNlZCB0byBkZXNjcmliZSB0aGUgU2VydmljZS4gTXVsdGlwbGUgZW50cmllcyBpbiBhIGtleXdvcmRzIGxpc3QgYXJlIHR5cGljYWxseSBkZWxpbWl0ZWQgYnkgY29tbWFzLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1heENvdW50IDE7CiAgICBdOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6c2VydmljZVR5cGUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgdHlwZSBvZiBzZXJ2aWNlIGJlaW5nIG9mZmVyZWQuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMTsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6c3BhdGlhbCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGdlb2dyYXBoaWNhbCBhcmVhIGNvdmVyZWQgYnkgdGhlIFNlcnZpY2UuIjsKICAgICAgc2g6Y2xhc3MgZGN0OkxvY2F0aW9uIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6dGVtcG9yYWwgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSB0ZW1wb3JhbCBwZXJpb2QgdGhhdCB0aGUgU2VydmljZSBjb3ZlcnMuIjsKICAgICAgc2g6Y2xhc3MgZGN0OlBlcmlvZE9mVGltZSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggZGNhdDp0aGVtZTsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgY2F0ZWdvcnkgb2YgdGhlIFNlcnZpY2UuIEEgU2VydmljZSBtYXkgYmUgYXNzb2NpYXRlZCB3aXRoIG11bHRpcGxlIHRoZW1lcy4iOwogICAgICBzaDpjbGFzcyBza29zOkNvbmNlcHQgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTp1cmwgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIFVSTCBvZiB0aGUgU2VydmljZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwouCmVwb3M6U29mdHdhcmVBcHBsaWNhdGlvblNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIHNjaGVtYTpTb2Z0d2FyZUFwcGxpY2F0aW9uOwogICMjIyMKICAjIFNvZnR3YXJlQXBwbGljYXRpb24gbWFuZGF0b3J5IHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTppZGVudGlmaWVyIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG1haW4gaWRlbnRpZmllciBmb3IgdGhlIFNvZnR3YXJlIEFwcGxpY2F0aW9uLiI7CiAgICAgIHNoOm9yICggWyBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOyBdCiAgICAgICAgICAgICAgWyBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJOyBdCiAgICAgICAgICAgICAgW3NoOmNsYXNzIHNjaGVtYTpQcm9wZXJ0eVZhbHVlOyBdICkgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgIF0gOwogICMjIyMKICAjIFNvZnR3YXJlQXBwbGljYXRpb24gcmVjb21tZW5kZWQgcHJvcGVydGllcwogICMjIyMKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmNvbnRhY3RQb2ludCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgQ29udGFjdCBQb2ludCBkZWZpbmVkIGZvciB0aGUgU29mdHdhcmUgQXBwbGljYXRpb24uIjsKICAgICAgc2g6bm9kZSBlcG9zOkNvbnRhY3RQb2ludFR5cGUgOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiQ29udGFjdCBwb2ludCBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm5hbWUgOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptaW5Db3VudCAxIDsKICAgICAgc2g6bWVzc2FnZSAiTmFtZSBpcyByZWNvbW1lbmRlZC4gUGxlYXNlIGZpbGwgaW4gYSB2YWx1ZSJAZW4gIDsKICAgICAgc2g6c2V2ZXJpdHkgc2g6V2FybmluZyA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm5hbWUgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgbmFtZSBvZiB0aGUgU29mdHdhcmUgQXBwbGljYXRpb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICAjIyMjCiAgIyBTb2Z0d2FyZUFwcGxpY2F0aW9uIG9wdGlvbmFsIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpkZXNjcmlwdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgU29mdHdhcmUgQXBwbGljYXRpb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpkb3dubG9hZFVybCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJJZiB0aGUgU29mdHdhcmUgQXBwbGljYXRpb24gY2FuIGJlIGRvd25sb2FkZWQgdGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgVVJMIHRvIGRvd25sb2FkIGl0LiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDphbnlVUkk7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTppbnN0YWxsVXJsIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIFVSTCBhdCB3aGljaCB0aGUgYXBwbGljYXRpb24gbWF5IGJlIGluc3RhbGxlZC4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6a2V5d29yZHMgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUga2V5d29yZHMgdXNlZCB0byBkZXNjcmliZSB0aGUgU29mdHdhcmUgQXBwbGljYXRpb24uIE11bHRpcGxlIGVudHJpZXMgaW4gYSBrZXl3b3JkcyBsaXN0IGFyZSB0eXBpY2FsbHkgZGVsaW1pdGVkIGJ5IGNvbW1hcy4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmxpY2Vuc2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgVVJMIG9mIHRoZSBsaWNlbnNlIGRvY3VtZW50IHRoYXQgYXBwbGllcyB0byB0aGUgU29mdHdhcmUgQXBwbGljYXRpb24uIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOm1haW5FbnRpdHlPZlBhZ2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIHdlYiBwYWdlIFVSTCB3aGljaCBkZXNjcmliZXMgdGhlIFNvZnR3YXJlIEFwcGxpY2F0aW9uLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6cG90ZW50aWFsQWN0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgZGVzY3JpYmVzIHRoZSBvYmplY3QgdXBvbiB3aGljaCB0aGUgYWN0aW9uIGlzIGNhcnJpZWQgb3V0IGFuZCB0aGUgcmVzdWx0IHByb2R1Y2VkIGluIHRoZSBhY3Rpb24uIjsKICAgICAgc2g6Y2xhc3Mgc2NoZW1hOkNvbnRyb2xBY3Rpb24gOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY3Q6cmVsYXRpb24gOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIERhdGFTZXJ2aWNlIE9wZXJhdGlvbiBsaW5rZWQgdG8gdGhlIGFwcGxpY2F0aW9uLiI7CiAgICAgIHNoOmNsYXNzIGh5ZHJhOk9wZXJhdGlvbiA7CiAgICBdIDsKCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpzb2Z0d2FyZVJlcXVpcmVtZW50cyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJDb21wb25lbnQgZGVwZW5kZW5jeSByZXF1aXJlbWVudHMgZm9yIGFwcGxpY2F0aW9uLiBUaGlzIGluY2x1ZGVzIHJ1bnRpbWUgZW52aXJvbm1lbnRzIGFuZCBzaGFyZWQgbGlicmFyaWVzIHRoYXQgYXJlIG5vdCBpbmNsdWRlZCBpbiB0aGUgYXBwbGljYXRpb24gZGlzdHJpYnV0aW9uIHBhY2thZ2UsIGJ1dCByZXF1aXJlZCB0byBydW4gdGhlIGFwcGxpY2F0aW9uLiI7CiAgICAgIHNoOm9yICggWyBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsgXQogICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7IF0gKTsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnNvZnR3YXJlVmVyc2lvbjsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIHZlcnNpb24gb2YgdGhlIFNvZnR3YXJlIEFwcGxpY2F0aW9uIGluc3RhbmNlLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmcgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBkY2F0OnRoZW1lOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBjYXRlZ29yeSBvZiB0aGUgU29mdHdhcmUgQXBwbGljYXRpb24uIEEgU29mdHdhcmUgbWF5IGJlIGFzc29jaWF0ZWQgd2l0aCBtdWx0aXBsZSB0aGVtZXMuIjsKICAgICAgc2g6Y2xhc3Mgc2tvczpDb25jZXB0IDsKICAgIF0gOwogc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTphdXRob3IgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBQZXJzb24gb3IgYW4gT3JnYW5pemF0aW9uIHRoYXQgaXMgYXV0aG9yIG9mIHRoaXMgY29udGVudCBvciByYXRpbmcuIjsKICAgICAgc2g6b3IgKAogICAgICAgIFtzaDpjbGFzcyBmb2FmOkFnZW50IDsgXQoJW3NoOmNsYXNzIHNjaGVtYTpQZXJzb24gOyBdCiAgICAgICAgW3NoOmNsYXNzIHNjaGVtYTpPcmdhbml6YXRpb24gOyBdKSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmNvbnRyaWJ1dG9yIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgUGVyc29uIG9yIGFuIE9yZ2FuaXphdGlvbiB0aGF0IGlzIGNvbnRyaWJ1dG9yIG9mIHRoaXMgY29udGVudCBvciByYXRpbmcuIjsKICAgICAgc2g6b3IgKAogICAgICAgIFtzaDpjbGFzcyBmb2FmOkFnZW50IDsgXQoJW3NoOmNsYXNzIHNjaGVtYTpQZXJzb24gOyBdCiAgICAgICAgW3NoOmNsYXNzIHNjaGVtYTpPcmdhbml6YXRpb24gOyBdKSA7CiAgICBdIDsKICAjc2g6cHJvcGVydHkgWwogICAjICAgc2g6cGF0aCBzY2hlbWE6Y3JlYXRvciA7CiAgIyAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBQZXJzb24gb3IgYW4gT3JnYW5pemF0aW9uIHRoYXQgaXMgY3JlYXRvciBvZiB0aGlzIGNvbnRlbnQgb3IgcmF0aW5nLiI7CiAgICMgICBzaDpvciAoCiAgICAjICAgIFtzaDpjbGFzcyBmb2FmOkFnZW50IDsgXQojCVtzaDpjbGFzcyBzY2hlbWE6UGVyc29uIDsgXQogIyAgICAgICBbc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbiA7IF0pIDsKICAjICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmZ1bmRlciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIFBlcnNvbiBvciBhbiBPcmdhbml6YXRpb24gdGhhdCBzdXBwb3J0cyAoc3BvbnNvcnMpIHNvbWV0aGluZyB0aHJvdWdoIHNvbWUga2luZCBvZiBmaW5hbmNpYWwgY29udHJpYnV0aW9uLiI7CiAgICAgIHNoOm9yICgKICAgICAgICBbc2g6Y2xhc3MgZm9hZjpBZ2VudCA7IF0KCVtzaDpjbGFzcyBzY2hlbWE6UGVyc29uIDsgXQogICAgICAgIFtzaDpjbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uIDsgXSkgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTptYWludGFpbmVyIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgUGVyc29uIG9yIGFuIE9yZ2FuaXphdGlvbiB0aGF0IGlzIG1haW50YWluZXIgb2YgdGhlIFNvZnR3YXJlIGFwcGxpY2F0aW9uLiI7CiAgICAgIHNoOm9yICgKICAgICAgICBbc2g6Y2xhc3MgZm9hZjpBZ2VudCA7IF0KCVtzaDpjbGFzcyBzY2hlbWE6UGVyc29uIDsgXQogICAgICAgIFtzaDpjbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uIDsgXSkgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICAgc2g6cGF0aCBzY2hlbWE6bWVtb3J5UmVxdWlyZW1lbnRzIDsKICAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIG1pbmltdW0gbWVtb3J5IHJlcXVpcmVtZW50cy4iOwogICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICAgc2g6cGF0aCBzY2hlbWE6b3BlcmF0aW5nU3lzdGVtIDsKICAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgb3BlcmF0aW5nIHN5c3RlbXMgc3VwcG9ydGVkLiI7CiAgICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICAgc2g6cHJvcGVydHkgWwogICAgICAgc2g6cGF0aCBzY2hlbWE6cHJvY2Vzc29yUmVxdWlyZW1lbnRzIDsKICAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHByb2Nlc3NvciBhcmNoaXRlY3R1cmUgcmVxdWlyZWQgdG8gcnVuIHRoZSBhcHBsaWNhdGlvbi4iOwogICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgICNzaDpwcm9wZXJ0eSBbCiAgICAjICBzaDpwYXRoIHNjaGVtYTpwcm9kdWNlciA7CiAgICAjICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBQZXJzb24gb3IgYW4gT3JnYW5pemF0aW9uIHRoYXQgd2hvIHByb2R1Y2VkIHRoZSBTb2Z0d2FyZSBhcHBsaWNhdGlvbi4uIjsKICAgICMgIHNoOm9yICgKICAgICMgICAgW3NoOmNsYXNzIGZvYWY6QWdlbnQgOyBdCiMJW3NoOmNsYXNzIHNjaGVtYTpQZXJzb24gOyBdCiAjICAgICAgIFtzaDpjbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uIDsgXSkgOwogICMgIF0gOwogICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnByb3ZpZGVyIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgUGVyc29uIG9yIGFuIE9yZ2FuaXphdGlvbiB0aGF0IGlzIHRoZSBzZXJ2aWNlIHByb3ZpZGVyIG9mIHRoZSBTb2Z0d2FyZSBhcHBsaWNhdGlvbi4iOwogICAgICBzaDpvciAoCiAgICAgICAgW3NoOmNsYXNzIGZvYWY6QWdlbnQgOyBdCglbc2g6Y2xhc3Mgc2NoZW1hOlBlcnNvbiA7IF0KICAgICAgICBbc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbiA7IF0pIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6cHVibGlzaGVyIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgY2l0YXRpb24gb3IgcmVmZXJlbmNlIHRvIGFub3RoZXIgY3JlYXRpdmUgd29yaywgc3VjaCBhcyBhbm90aGVyIHB1YmxpY2F0aW9uLCB3ZWIgcGFnZSwgc2Nob2xhcmx5IGFydGljbGUsIGV0Yy4iOwogICAgICBzaDpvciAoCiAgICAgICAgW3NoOmNsYXNzIGZvYWY6QWdlbnQgOyBdCglbc2g6Y2xhc3MgZm9hZjpQZXJzb24gOyBdCiAgICAgICAgW3NoOmNsYXNzIHNjaGVtYTpPcmdhbml6YXRpb24gOyBdKSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpjaXRhdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGNpdGF0aW9uIG9yIHJlZmVyZW5jZSB0byBhbm90aGVyIGNyZWF0aXZlIHdvcmssIHN1Y2ggYXMgYW5vdGhlciBwdWJsaWNhdGlvbiwgd2ViIHBhZ2UsIHNjaG9sYXJseSBhcnRpY2xlLCBldGMuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6c2l6ZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIHN0YW5kYXJkaXplZCBzaXplIG9mIGEgcHJvZHVjdCBvciBjcmVhdGl2ZSB3b3JrLCBzcGVjaWZpZWQgZWl0aGVyIHRocm91Z2ggYSBzaW1wbGUgdGV4dHVhbCBzdHJpbmcuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnNwYXRpYWxDb3ZlcmFnZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGluZGljYXRlcyB0aGUgcGxhY2Uocykgd2hpY2ggYXJlIHRoZSBmb2N1cyBvZiB0aGUgY29udGVudC4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6Y3JlYXRpdmVXb3JrU3RhdHVzIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBzdGF0dXMgb2YgYSBjcmVhdGl2ZSB3b3JrIGluIHRlcm1zIG9mIGl0cyBzdGFnZSBpbiBhIGxpZmVjeWNsZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6c3RvcmFnZVJlcXVpcmVtZW50cyA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgc3RvcmFnZSByZXF1aXJlbWVudHMuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnRlbXBvcmFsQ292ZXJhZ2UgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBpbmRpY2F0ZXMgdGhlIHBlcmlvZCB0aGF0IHRoZSBjb250ZW50IGFwcGxpZXMgdG8sIGkuZS4gdGhhdCBpdCBkZXNjcmliZXMsIGVpdGhlciBhcyBhIERhdGVUaW1lIG9yIGFzIGEgdGV4dHVhbCBzdHJpbmcgaW5kaWNhdGluZyBhIHRpbWUgcGVyaW9kLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTp0aW1lUmVxdWlyZWQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYW4gYXBwcm94aW1hdGUgb3IgdHlwaWNhbCB0aW1lIGl0IHVzdWFsbHkgdGFrZXMgdG8gd29yayB3aXRoIG9yIHRocm91Z2ggdGhlIGNvbnRlbnQgb2YgdGhpcyB3b3JrLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7Ci4KCmVwb3M6Q29udHJvbEFjdGlvblNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIHNjaGVtYTpDb250cm9sQWN0aW9uIDsKICAjIyMjCiAgIyBDb250cm9sQWN0aW9uIG9wdGlvbmFsIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpvYmplY3QgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhlIG9iamVjdCB1cG9uIHdoaWNoIHRoZSBhY3Rpb24gaXMgY2FycmllZCBvdXQsIHdob3NlIHN0YXRlIGlzIGtlcHQgaW50YWN0IG9yIGNoYW5nZWQuIEFsc28ga25vd24gYXMgdGhlIHNlbWFudGljIHJvbGVzIHBhdGllbnQsIGFmZmVjdGVkIG9yIHVuZGVyZ29lciAod2hpY2ggY2hhbmdlIHRoZWlyIHN0YXRlKSBvciB0aGVtZSAod2hpY2ggZG9lc24ndCkuIGUuZy4gSm9obiByZWFkIGEgYm9vay4iOwogICAgICBzaDpjbGFzcyBzY2hlbWE6Q3JlYXRpdmVXb3JrIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6cmVzdWx0IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoZSByZXN1bHQgcHJvZHVjZWQgaW4gdGhlIGFjdGlvbi4gZS5nLiBKb2huIHdyb3RlIGEgYm9vay4iOwogICAgICBzaDpjbGFzcyBzY2hlbWE6Q3JlYXRpdmVXb3JrIDsKICAgIF0gOwouCmVwb3M6Q3JlYXRpdmVXb3JrU2hhcGUKICBhIHNoOk5vZGVTaGFwZSA7CiAgc2g6dGFyZ2V0Q2xhc3Mgc2NoZW1hOkNyZWF0aXZlV29yayA7CiAgIyMjIwogICMgQ3JlYXRpdmVXb3JrIG9wdGlvbmFsIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIGRjdDpjb25mb3Jtc1RvIDsKICAgICAgI3NoOmRlc2NyaXB0aW9uICIiOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7IF0KICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdICk7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmVuY29kaW5nRm9ybWF0IDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIk1lZGlhIHR5cGUgdHlwaWNhbGx5IGV4cHJlc3NlZCB1c2luZyBhIE1JTUUgZm9ybWF0IChzZWUgSUFOQSBzaXRlIGFuZCBNRE4gcmVmZXJlbmNlKSBlLmcuIGFwcGxpY2F0aW9uL3ppcCBmb3IgYSBTb2Z0d2FyZUFwcGxpY2F0aW9uIGJpbmFyeSwgYXVkaW8vbXBlZyBmb3IgLm1wMyBldGMuKS4iOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7IF0KICAgICAgICBbIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOyBdICk7CiAgICBdIDsKLgplcG9zOlNvZnR3YXJlU291cmNlQ29kZVNoYXBlCiAgYSBzaDpOb2RlU2hhcGUgOwogIHNoOnRhcmdldENsYXNzIHNjaGVtYTpTb2Z0d2FyZVNvdXJjZUNvZGU7CiAgIyMjIwogICMgU29mdHdhcmVTb3VyY2VDb2RlIG1hbmRhdG9yeSBwcm9wZXJ0aWVzCiAgIyMjIwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6aWRlbnRpZmllciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBtYWluIGlkZW50aWZpZXIgZm9yIHRoZSBTb2Z0d2FyZSBTb3VyY2UgQ29kZS4iOwogICAgICBzaDpvciAoIFsgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsgXQogICAgICAgICAgICAgIFsgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSTsgXQogICAgICAgICAgICAgIFsgc2g6Y2xhc3Mgc2NoZW1hOlByb3BlcnR5VmFsdWU7IF0gKSA7CiAgICAgIHNoOm1pbkNvdW50IDEgOwogICAgXSA7CiAgIyMjIwogICMgU29mdHdhcmVTb3VyY2VDb2RlIHJlY29tbWVuZGVkIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpjb250YWN0UG9pbnQgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gdGhlIENvbnRhY3QgUG9pbnQgZGVmaW5lZCBmb3IgdGhlIFNvZnR3YXJlIFNvdXJjZSBDb2RlLiI7CiAgICAgIHNoOm5vZGUgZXBvczpDb250YWN0UG9pbnRUeXBlIDsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIkNvbnRhY3QgcG9pbnQgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpuYW1lIDsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWluQ291bnQgMSA7CiAgICAgIHNoOm1lc3NhZ2UgIk5hbWUgaXMgcmVjb21tZW5kZWQuIFBsZWFzZSBmaWxsIGluIGEgdmFsdWUiQGVuICA7CiAgICAgIHNoOnNldmVyaXR5IHNoOldhcm5pbmcgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpuYW1lIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIG5hbWUgb2YgdGhlIFNvZnR3YXJlIFNvdXJjZSBDb2RlLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgIyMjIwogICMgU29mdHdhcmVTb3VyY2VDb2RlIG9wdGlvbmFsIHByb3BlcnRpZXMKICAjIyMjCiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpjb2RlUmVwb3NpdG9yeSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSBsaW5rIHRvIHRoZSByZXBvc2l0b3J5IHdoZXJlIHRoZSB1bmNvbXBpbGVkLCBodW1hbiByZWFkYWJsZSBjb2RlIGFuZCByZWxhdGVkIGNvZGUgaXMgbG9jYXRlZCAoU1ZOLCBHaXRIdWIsIENvZGVQbGV4KS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6YW55VVJJIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmRlc2NyaXB0aW9uIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBTb2Z0d2FyZSBTb3VyY2UgQ29kZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmtleXdvcmRzIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIGtleXdvcmRzIHVzZWQgdG8gZGVzY3JpYmUgdGhlIFNvZnR3YXJlIFNvdXJjZSBDb2RlLiBNdWx0aXBsZSBlbnRyaWVzIGluIGEga2V5d29yZHMgbGlzdCBhcmUgdHlwaWNhbGx5IGRlbGltaXRlZCBieSBjb21tYXMuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpsaWNlbnNlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgY29udGFpbnMgdGhlIFVSTCBvZiB0aGUgbGljZW5zZSBkb2N1bWVudCB0aGF0IGFwcGxpZXMgdG8gdGhlIFNvZnR3YXJlIFNvdXJjZSBDb2RlLiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDphbnlVUkkgOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6bWFpbkVudGl0eU9mUGFnZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byB0aGUgd2ViIHBhZ2UgVVJMIHdoaWNoIGRlc2NyaWJlcyB0aGUgU29mdHdhcmUgU291cmNlIENvZGUuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOmFueVVSSSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpwcm9ncmFtbWluZ0xhbmd1YWdlOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSBjb250YWlucyB0aGUgY29tcHV0ZXIgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UgdXNlZCB0byBkZXZlbG9wIHRoZSBTb2Z0d2FyZSBTb3VyY2UgQ29kZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6cnVudGltZVBsYXRmb3JtIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBydW50aW1lIHBsYXRmb3JtIG9yIHNjcmlwdCBpbnRlcnByZXRlciBkZXBlbmRlbmNpZXMgKEV4YW1wbGUgLSBKYXZhIHYxLCBQeXRob24yLjMsIC5OZXQgRnJhbWV3b3JrIDMuMCkuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZyA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpzb2Z0d2FyZVZlcnNpb247CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGNvbnRhaW5zIHRoZSB2ZXJzaW9uIG9mIHRoZSBTb2Z0d2FyZSBTb3VyY2UgQ29kZSBpbnN0YW5jZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nIDsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnRhcmdldFByb2R1Y3QgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdGhlIHRhcmdldCBPcGVyYXRpbmcgU3lzdGVtIC8gUHJvZHVjdCB0byB3aGljaCB0aGUgY29kZSBhcHBsaWVzLiBJZiBhcHBsaWVzIHRvIHNldmVyYWwgdmVyc2lvbnMsIGp1c3QgdGhlIHByb2R1Y3QgbmFtZSBjYW4gYmUgdXNlZC4iOwogICAgICBzaDpjbGFzcyBzY2hlbWE6U29mdHdhcmVBcHBsaWNhdGlvbiA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgc2g6cGF0aCBkY2F0OnRoZW1lOwogICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGNhdGVnb3J5IG9mIHRoZSBTb2Z0d2FyZSBTb3VyY2UgQ29kZS4gQSBTb2Z0d2FyZSBtYXkgYmUgYXNzb2NpYXRlZCB3aXRoIG11bHRpcGxlIHRoZW1lcy4iOwogICAgIHNoOmNsYXNzIHNrb3M6Q29uY2VwdCA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOmF1dGhvciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIFBlcnNvbiBvciBhbiBPcmdhbml6YXRpb24gdGhhdCBpcyBhdXRob3Igb2YgdGhpcyBjb250ZW50IG9yIHJhdGluZy4iOwogICAgICBzaDpvciAoCiAgICAgICAgW3NoOmNsYXNzIGZvYWY6QWdlbnQgOyBdCglbc2g6Y2xhc3Mgc2NoZW1hOlBlcnNvbiA7IF0KICAgICAgICBbc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbiA7IF0pIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6Y29udHJpYnV0b3IgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBQZXJzb24gb3IgYW4gT3JnYW5pemF0aW9uIHRoYXQgaXMgY29udHJpYnV0b3Igb2YgdGhpcyBjb250ZW50IG9yIHJhdGluZy4iOwogICAgICBzaDpvciAoCiAgICAgICAgW3NoOmNsYXNzIGZvYWY6QWdlbnQgOyBdCglbc2g6Y2xhc3Mgc2NoZW1hOlBlcnNvbiA7IF0KICAgICAgICBbc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbiA7IF0pIDsKICAgIF0gOwogICMgc2g6cHJvcGVydHkgWwogICMgICAgc2g6cGF0aCBzY2hlbWE6Y3JlYXRvciA7CiAgIyAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBQZXJzb24gb3IgYW4gT3JnYW5pemF0aW9uIHRoYXQgaXMgY3JlYXRvciBvZiB0aGlzIGNvbnRlbnQgb3IgcmF0aW5nLiI7CiAgIyAgICBzaDpvciAoCiAgIyAgICAgIFtzaDpjbGFzcyBmb2FmOkFnZW50IDsgXQogIwlbc2g6Y2xhc3Mgc2NoZW1hOlBlcnNvbiA7IF0KICMgICAgICAgW3NoOmNsYXNzIHNjaGVtYTpPcmdhbml6YXRpb24gOyBdKSA7CiAgIyAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpmdW5kZXIgOwogICAgICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBQZXJzb24gb3IgYW4gT3JnYW5pemF0aW9uIHRoYXQgc3VwcG9ydHMgKHNwb25zb3JzKSBzb21ldGhpbmcgdGhyb3VnaCBzb21lIGtpbmQgb2YgZmluYW5jaWFsIGNvbnRyaWJ1dGlvbi4iOwogICAgICBzaDpvciAoCiAgICAgICAgW3NoOmNsYXNzIGZvYWY6QWdlbnQgOyBdCglbc2g6Y2xhc3Mgc2NoZW1hOlBlcnNvbiA7IF0KICAgICAgICBbc2g6Y2xhc3Mgc2NoZW1hOk9yZ2FuaXphdGlvbiA7IF0pIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6bWFpbnRhaW5lciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIFBlcnNvbiBvciBhbiBPcmdhbml6YXRpb24gdGhhdCBpcyBtYWludGFpbmVyIG9mIGEgU29mdHdhcmVlU291Y2VDb2RlLiI7CiAgICAgIHNoOm9yICgKICAgICAgICBbc2g6Y2xhc3MgZm9hZjpBZ2VudCA7IF0KCVtzaDpjbGFzcyBzY2hlbWE6UGVyc29uIDsgXQogICAgICAgIFtzaDpjbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uIDsgXSkgOwogICAgXSA7CiAgICNzaDpwcm9wZXJ0eSBbCiAgICAjICBzaDpwYXRoIHNjaGVtYTpwcm9kdWNlciA7CiAgICAjICBzaDpkZXNjcmlwdGlvbiAiVGhpcyBwcm9wZXJ0eSByZWZlcnMgdG8gYSBQZXJzb24gb3IgYW4gT3JnYW5pemF0aW9uIHRoYXQgd2hvIHByb2R1Y2VkIHRoZSBTb2Z0d2FyZWVTb3VjZUNvZGUuIjsKICAgICMgIHNoOm9yICgKICAgICMgICAgW3NoOmNsYXNzIGZvYWY6QWdlbnQgOyBdCiMJW3NoOmNsYXNzIHNjaGVtYTpQZXJzb24gOyBdCiAgICAjICAgIFtzaDpjbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uIDsgXSkgOwogICAjIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6cHVibGlzaGVyIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgY2l0YXRpb24gb3IgcmVmZXJlbmNlIHRvIGFub3RoZXIgY3JlYXRpdmUgd29yaywgc3VjaCBhcyBhbm90aGVyIHB1YmxpY2F0aW9uLCB3ZWIgcGFnZSwgc2Nob2xhcmx5IGFydGljbGUsIGV0Yy4iOwogICAgICBzaDpvciAoCiAgICAgICAgW3NoOmNsYXNzIGZvYWY6QWdlbnQgOyBdCglbc2g6Y2xhc3MgZm9hZjpQZXJzb24gOyBdCiAgICAgICAgW3NoOmNsYXNzIHNjaGVtYTpPcmdhbml6YXRpb24gOyBdKSA7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpwcm92aWRlciA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIFBlcnNvbiBvciBhbiBPcmdhbml6YXRpb24gdGhhdCBpcyB0aGUgc2VydmljZSBwcm92aWRlciBvZiB0aGUgU29mdHdhcmVlU291Y2VDb2RlLiI7CiAgICAgIHNoOm9yICgKICAgICAgICBbc2g6Y2xhc3MgZm9hZjpBZ2VudCA7IF0KCVtzaDpjbGFzcyBzY2hlbWE6UGVyc29uIDsgXQogICAgICAgIFtzaDpjbGFzcyBzY2hlbWE6T3JnYW5pemF0aW9uIDsgXSkgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpjaXRhdGlvbiA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhIGNpdGF0aW9uIG9yIHJlZmVyZW5jZSB0byBhbm90aGVyIGNyZWF0aXZlIHdvcmssIHN1Y2ggYXMgYW5vdGhlciBwdWJsaWNhdGlvbiwgd2ViIHBhZ2UsIHNjaG9sYXJseSBhcnRpY2xlLCBldGMuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6c3BhdGlhbENvdmVyYWdlIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgaW5kaWNhdGVzIHRoZSBwbGFjZShzKSB3aGljaCBhcmUgdGhlIGZvY3VzIG9mIHRoZSBjb250ZW50LiI7CiAgICAgIHNoOmRhdGF0eXBlIHhzZDpzdHJpbmc7CiAgICAgIHNoOm1heENvdW50IDEgOwogICAgXSA7CiAgc2g6cHJvcGVydHkgWwogICAgICBzaDpwYXRoIHNjaGVtYTpzaXplIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIGEgc3RhbmRhcmRpemVkIHNpemUgb2YgYSBwcm9kdWN0IG9yIGNyZWF0aXZlIHdvcmssIHNwZWNpZmllZCBlaXRoZXIgdGhyb3VnaCBhIHNpbXBsZSB0ZXh0dWFsIHN0cmluZy4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6Y3JlYXRpdmVXb3JrU3RhdHVzIDsKICAgICAgc2g6ZGVzY3JpcHRpb24gIlRoaXMgcHJvcGVydHkgcmVmZXJzIHRvIHRoZSBzdGF0dXMgb2YgYSBjcmVhdGl2ZSB3b3JrIGluIHRlcm1zIG9mIGl0cyBzdGFnZSBpbiBhIGxpZmVjeWNsZS4iOwogICAgICBzaDpkYXRhdHlwZSB4c2Q6c3RyaW5nOwogICAgICBzaDptYXhDb3VudCAxIDsKICAgIF0gOwogIHNoOnByb3BlcnR5IFsKICAgICAgc2g6cGF0aCBzY2hlbWE6dGVtcG9yYWxDb3ZlcmFnZSA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IGluZGljYXRlcyB0aGUgcGVyaW9kIHRoYXQgdGhlIGNvbnRlbnQgYXBwbGllcyB0bywgaS5lLiB0aGF0IGl0IGRlc2NyaWJlcywgZWl0aGVyIGFzIGEgRGF0ZVRpbWUgb3IgYXMgYSB0ZXh0dWFsIHN0cmluZyBpbmRpY2F0aW5nIGEgdGltZSBwZXJpb2QuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKICBzaDpwcm9wZXJ0eSBbCiAgICAgIHNoOnBhdGggc2NoZW1hOnRpbWVSZXF1aXJlZCA7CiAgICAgIHNoOmRlc2NyaXB0aW9uICJUaGlzIHByb3BlcnR5IHJlZmVycyB0byBhbiBhcHByb3hpbWF0ZSBvciB0eXBpY2FsIHRpbWUgaXQgdXN1YWxseSB0YWtlcyB0byB3b3JrIHdpdGggb3IgdGhyb3VnaCB0aGUgY29udGVudCBvZiB0aGlzIHdvcmsuIjsKICAgICAgc2g6ZGF0YXR5cGUgeHNkOnN0cmluZzsKICAgICAgc2g6bWF4Q291bnQgMSA7CiAgICBdIDsKLgo=');
INSERT INTO metadata_catalogue.ontologies (id, name, type, content) VALUES ('38ca0be6-aee4-4c00-89e1-391685f5aeda', 'EDM-TO-DCAT-AP', 'MAPPING', '');


--
-- Data for Name: operation; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.operation (instance_id, meta_id, uid, version_id, method, template) VALUES ('708e9017-6d25-48a5-87ca-884ac548a3d6', '977567c6-d5ad-43b6-a6bc-885ec5768c8f', 'file:///Operation/Test/2', '858729c4-8461-49ed-bdf6-a32022983116', 'GET', 'http://www.orfeus-eu.org/fdsnws/dataselect/1/query/{?starttime,endtime,network,quality}');


--
-- Data for Name: operation_distribution; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.operation_distribution (operation_instance_id, distribution_instance_id) VALUES ('708e9017-6d25-48a5-87ca-884ac548a3d6', 'adcd7794-2daf-44be-af55-88273564b8e1');


--
-- Data for Name: operation_element; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.operation_element (operation_instance_id, element_instance_id) VALUES ('708e9017-6d25-48a5-87ca-884ac548a3d6', '8a8c7a64-2b88-45e8-baa6-3aa1d8555eee');


--
-- Data for Name: operation_mapping; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.operation_mapping (operation_instance_id, mapping_instance_id) VALUES ('708e9017-6d25-48a5-87ca-884ac548a3d6', '39f4f9a2-2f86-44cc-a765-9613051fd3ef');
INSERT INTO metadata_catalogue.operation_mapping (operation_instance_id, mapping_instance_id) VALUES ('708e9017-6d25-48a5-87ca-884ac548a3d6', '14ec0153-f3cc-4330-9482-0b87ffc51817');
INSERT INTO metadata_catalogue.operation_mapping (operation_instance_id, mapping_instance_id) VALUES ('708e9017-6d25-48a5-87ca-884ac548a3d6', 'c147fb35-1ecb-4e36-bfc8-509ef64ac7be');
INSERT INTO metadata_catalogue.operation_mapping (operation_instance_id, mapping_instance_id) VALUES ('708e9017-6d25-48a5-87ca-884ac548a3d6', '47895724-5ca2-4bdc-8bc8-534360a4f562');


--
-- Data for Name: webservice; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.webservice (instance_id, meta_id, uid, version_id, schemaidentifier, description, name, entrypoint, datapublished, datamodified, keywords, license, provider, aaaitypes) VALUES ('d7f5526c-0643-4f7a-857d-91552129e345', '8beb092c-4571-4504-b961-a1d7fc441b02', 'file:///WebService/Test/2', '93bf1070-2dde-47fd-9797-fba0edab7976', NULL, 'WebService Description 2', 'WebService Title 2', 'http://www.orfeus-eu.org/fdsnws/dataselect/1/application.wadl', '2016-01-01 00:00:00', '2016-01-01 00:00:00', 'keywordWebService1,	keywordWebService3,	keywordWebService2', 'http://creativecommons.org/licenses/by/4.0/', 'ebb62876-c84e-4bc5-a9d3-6d32a449d908', NULL);


--
-- Data for Name: operation_webservice; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.operation_webservice (operation_instance_id, webservice_instance_id) VALUES ('708e9017-6d25-48a5-87ca-884ac548a3d6', 'd7f5526c-0643-4f7a-857d-91552129e345');


--
-- Data for Name: person; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.person (instance_id, meta_id, uid, version_id, familyname, givenname, qualifications, cvurl, address_id) VALUES ('c7fd9939-8448-4236-afeb-cd5b6ad6a287', '1b56626f-8756-4a5e-8f1a-7318a003adc7', 'http://orcid.org/0000-0001-5805-9337', '1fd42b77-883c-4aa9-91af-1c8659513401', 'Vinciarelli', 'Valerio', 'Senior Developer', NULL, NULL);


--
-- Data for Name: organization_affiliation; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.organization_affiliation (person_instance_id, organization_instance_id) VALUES ('c7fd9939-8448-4236-afeb-cd5b6ad6a287', '740ccf92-48de-4443-8bc8-2028201ddca2');


--
-- Data for Name: organization_contactpoint; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: organization_element; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.organization_element (organization_instance_id, element_instance_id) VALUES ('192b99ff-f942-48dd-a059-53a299434ba1', 'a2072068-4fd2-43c9-bd7a-afdcde2ca3cd');
INSERT INTO metadata_catalogue.organization_element (organization_instance_id, element_instance_id) VALUES ('ebb62876-c84e-4bc5-a9d3-6d32a449d908', '18781c4c-d00c-4e8b-9da2-2025df29c155');


--
-- Data for Name: organization_identifier; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.organization_identifier (organization_instance_id, identifier_instance_id) VALUES ('192b99ff-f942-48dd-a059-53a299434ba1', 'fa21d11c-36cb-4cd1-8439-baf26c5d0d32');
INSERT INTO metadata_catalogue.organization_identifier (organization_instance_id, identifier_instance_id) VALUES ('ebb62876-c84e-4bc5-a9d3-6d32a449d908', '14f278d4-9f20-4c9d-8313-fdf25fe85746');


--
-- Data for Name: organization_memberof; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.organization_memberof (organization1_instance_id, organization2_instance_id) VALUES ('192b99ff-f942-48dd-a059-53a299434ba1', 'ebb62876-c84e-4bc5-a9d3-6d32a449d908');


--
-- Data for Name: organization_owns; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: parameter; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.parameter (instance_id, meta_id, uid, version_id, encodingformat, conformsto, action) VALUES ('c0233abb-5446-4105-81d5-e686efd02e59', '714b8c2e-f6a5-4245-af26-1d8be1bd61d5', '_:5bd73ae9f11842e93209ce443d580319', '6398d534-2819-4d41-bffa-34c608b30068', 'application/xml', '', 'OBJECT');
INSERT INTO metadata_catalogue.parameter (instance_id, meta_id, uid, version_id, encodingformat, conformsto, action) VALUES ('93a5cbba-f6d3-4bc4-b187-d17d2bd6a245', 'ed11e38c-f8fa-4b7c-b476-afc798702791', '_:ff58cb5548fe3870033d90ee01de424e', 'cd655229-e627-47d8-bd0d-8286be012f5a', 'application/epos.geo+json', '', 'RESULT');


--
-- Data for Name: person_contactpoint; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.person_contactpoint (person_instance_id, contactpoint_instance_id) VALUES ('c7fd9939-8448-4236-afeb-cd5b6ad6a287', '635a9982-5011-46c1-ab2e-7063ae9397d3');


--
-- Data for Name: person_element; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.person_element (person_instance_id, element_instance_id) VALUES ('c7fd9939-8448-4236-afeb-cd5b6ad6a287', '520fda14-455c-465f-99db-8f1393dba3ca');
INSERT INTO metadata_catalogue.person_element (person_instance_id, element_instance_id) VALUES ('c7fd9939-8448-4236-afeb-cd5b6ad6a287', '8456bb4d-565b-4634-88a1-f40af7d4007e');


--
-- Data for Name: person_identifier; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.person_identifier (person_instance_id, identifier_instance_id) VALUES ('c7fd9939-8448-4236-afeb-cd5b6ad6a287', '033cc87d-0787-4975-8e6e-9951c52e213f');


--
-- Data for Name: publication; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: publication_category; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: publication_contributor; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: publication_identifier; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: quantitativevalue; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.quantitativevalue (instance_id, meta_id, uid, version_id, unitcode, value) VALUES ('4cf2ff79-6d3f-4d01-9eac-23f143dd3d58', '89f24b4e-fbcb-4cb0-ba26-13f1aeecbf0e', '_:9d78a37099e5fb741bbc5e2b801b1014', '368f2290-1b89-4702-a83a-e9ccc3e23899', 'unit code', '0.0');
INSERT INTO metadata_catalogue.quantitativevalue (instance_id, meta_id, uid, version_id, unitcode, value) VALUES ('4a8b5a98-e391-47f7-9bae-fc291fd10937', '23407890-af32-4440-ab56-6212cbf871dd', '_:103238426b6ee15fa5af928112793223', 'f9c7e122-bf56-492e-a644-215c163532ce', 'unit code', '0');


--
-- Data for Name: service; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: service_category; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: service_contactpoint; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: service_identifier; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: service_provider; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: service_spatial; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: service_temporal; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: softwareapplication; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.softwareapplication (instance_id, meta_id, uid, version_id, name, description, downloadurl, licenseurl, softwareversion, keywords, requirements, installurl, mainentityofpage) VALUES ('df9459ed-c6d0-4c7f-b717-fb57490a7981', 'e788269c-44a1-4e0f-9cba-ac4130e3ce2f', 'file:///Plugin/SoftwareApplication/QuakeML', 'f26dc8ed-e66a-4319-95cc-10517072c3f4', NULL, NULL, NULL, NULL, NULL, NULL, 'Java-Reflection;target/;QuakeML-main-jar-with-dependencies.jar;org.epos.quakeml.core.QuakeMLInvoker', NULL, NULL);


--
-- Data for Name: softwareapplication_category; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: softwareapplication_contactpoint; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: softwareapplication_identifier; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: softwareapplication_operation; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: softwareapplication_parameters; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.softwareapplication_parameters (softwareapplication_instance_id, parameter_instance_id) VALUES ('df9459ed-c6d0-4c7f-b717-fb57490a7981', 'c0233abb-5446-4105-81d5-e686efd02e59');
INSERT INTO metadata_catalogue.softwareapplication_parameters (softwareapplication_instance_id, parameter_instance_id) VALUES ('df9459ed-c6d0-4c7f-b717-fb57490a7981', '93a5cbba-f6d3-4bc4-b187-d17d2bd6a245');


--
-- Data for Name: softwaresourcecode; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.softwaresourcecode (instance_id, meta_id, uid, version_id, name, description, licenseurl, downloadurl, runtimeplatform, softwareversion, keywords, coderepository, mainentityofpage) VALUES ('7826acc8-b0c2-4207-b39f-cc363d24fee5', '6d3ba954-3cb4-4df6-8aa7-6abcbc7f2959', 'file:///Plugin/SoftwareSourceCode/QuakeML', '0ea4df76-b3ce-498e-84b7-b08b765711d1', 'Plugin for the conversion from QuakeML to GeoJSON payload', 'Plugin for the conversion from QuakeML to GeoJSON payload', 'https://epos-ci.brgm.fr/epos/converter-plugins/quakeml-plugin/-/blob/main/README.md', NULL, 'java-1.10', 'main', NULL, 'https://gitlab-ci-token:glpat-k4RsseLnMdVc5efsxtN4@epos-ci.brgm.fr/epos/converter-plugins/quakeml-plugin.git', 'https://epos-ci.brgm.fr/epos/converter-plugins/quakeml-plugin/-/blob/main/README.md');


--
-- Data for Name: softwaresourcecode_category; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: softwaresourcecode_contactpoint; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: softwaresourcecode_element; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.softwaresourcecode_element (softwaresourcecode_instance_id, element_instance_id) VALUES ('7826acc8-b0c2-4207-b39f-cc363d24fee5', '8a1d3125-e3cf-4e31-9924-4a1f1c39adfe');


--
-- Data for Name: softwaresourcecode_identifier; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: spatial_ref_sys; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: us_gaz; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: us_lex; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: us_rules; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: webservice_category; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.webservice_category (category_instance_id, webservice_instance_id) VALUES ('f4ee60f8-ed21-45b9-9f7f-91097aa5a747', 'd7f5526c-0643-4f7a-857d-91552129e345');


--
-- Data for Name: webservice_contactpoint; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.webservice_contactpoint (webservice_instance_id, contactpoint_instance_id) VALUES ('d7f5526c-0643-4f7a-857d-91552129e345', '635a9982-5011-46c1-ab2e-7063ae9397d3');


--
-- Data for Name: webservice_distribution; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.webservice_distribution (distribution_instance_id, webservice_instance_id) VALUES ('adcd7794-2daf-44be-af55-88273564b8e1', 'd7f5526c-0643-4f7a-857d-91552129e345');


--
-- Data for Name: webservice_element; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.webservice_element (webservice_instance_id, element_instance_id) VALUES ('d7f5526c-0643-4f7a-857d-91552129e345', '700f90e3-90aa-42cf-8835-a6b77d79ace9');


--
-- Data for Name: webservice_identifier; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: webservice_relation; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: webservice_spatial; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.webservice_spatial (webservice_instance_id, spatial_instance_id) VALUES ('d7f5526c-0643-4f7a-857d-91552129e345', '1b3081b8-6b19-4008-bdd8-7719f08ae77b');


--
-- Data for Name: webservice_temporal; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO metadata_catalogue.webservice_temporal (webservice_instance_id, temporal_instance_id) VALUES ('d7f5526c-0643-4f7a-857d-91552129e345', '528758f9-1bfd-4094-bdba-82fc5dd4ce76');


--
-- Data for Name: geocode_settings; Type: TABLE DATA; Schema: tiger; Owner: postgres
--



--
-- Data for Name: pagc_gaz; Type: TABLE DATA; Schema: tiger; Owner: postgres
--



--
-- Data for Name: pagc_lex; Type: TABLE DATA; Schema: tiger; Owner: postgres
--



--
-- Data for Name: pagc_rules; Type: TABLE DATA; Schema: tiger; Owner: postgres
--



--
-- Data for Name: topology; Type: TABLE DATA; Schema: topology; Owner: postgres
--



--
-- Data for Name: layer; Type: TABLE DATA; Schema: topology; Owner: postgres
--



--
-- Name: jobid_seq; Type: SEQUENCE SET; Schema: cron; Owner: postgres
--

SELECT pg_catalog.setval('cron.jobid_seq', 1, false);


--
-- Name: runid_seq; Type: SEQUENCE SET; Schema: cron; Owner: postgres
--

SELECT pg_catalog.setval('cron.runid_seq', 1, false);


--
-- PostgreSQL database dump complete
--

